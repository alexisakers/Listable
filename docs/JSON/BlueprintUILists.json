[{
  "\/Users\/k\/Desktop\/Development\/Listable1\/BlueprintUILists\/Sources\/BlueprintEnvironment.swift" : {
    "key.diagnostic_stage" : "source.diagnostic.stage.swift.parse",
    "key.length" : 654,
    "key.offset" : 0,
    "key.substructure" : [
      {
        "key.annotated_decl" : "<Declaration>protocol Element<\/Declaration>",
        "key.bodylength" : 198,
        "key.bodyoffset" : 125,
        "key.doc.column" : 17,
        "key.doc.declaration" : "protocol Element",
        "key.doc.discussion" : [
          {
            "Para" : "The ultimate purpose of an element is to provide visual content. This can be done in two ways:"
          },
          {
            "List-Bullet" : ""
          },
          {
            "Para" : "A custom element might look something like this:"
          },
          {
            "CodeListing" : ""
          }
        ],
        "key.doc.file" : "\/Users\/k\/Desktop\/Development\/Listable1\/Pods\/BlueprintUI\/BlueprintUI\/Sources\/Element\/Element.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/k\/Desktop\/Development\/Listable1\/Pods\/BlueprintUI\/BlueprintUI\/Sources\/Element\/Element.swift\" line=\"41\" column=\"17\"><Name>Element<\/Name><USR>s:11BlueprintUI7ElementP<\/USR><Declaration>protocol Element<\/Declaration><CommentParts><Abstract><Para>Conforming types represent a rectangular content area in a two-dimensional layout space.<\/Para><\/Abstract><Discussion><rawHTML><![CDATA[<hr\/>]]><\/rawHTML><Para>The ultimate purpose of an element is to provide visual content. This can be done in two ways:<\/Para><List-Bullet><Item><Para>By providing a view description (<codeVoice>ViewDescription<\/codeVoice>).<\/Para><\/Item><Item><Para>By providing child elements that will be displayed recursively within the local coordinate space.<\/Para><\/Item><\/List-Bullet><rawHTML><![CDATA[<hr\/>]]><\/rawHTML><Para>A custom element might look something like this:<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[struct MyElement: Element {]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    var backgroundColor: UIColor = .red]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    \/\/ Returns a single child element.]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    var content: ElementContent {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[        return ElementContent(child: Label(text: \"😂\"))]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    }]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    \/\/ Providing a view description means that this element will be]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    \/\/ backed by a UIView instance when displayed in a `BlueprintView`.]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    func backingViewDescription(bounds: CGRect, subtreeExtent: CGRect?) -> ViewDescription? {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[        return UIView.describe { config in]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[            config.bind(backgroundColor, to: \\.backgrouncColor)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[        }]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    }]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><\/Discussion><\/CommentParts><\/Class>",
        "key.doc.line" : 41,
        "key.doc.name" : "Element",
        "key.doc.type" : "Class",
        "key.filepath" : "\/Users\/k\/Desktop\/Development\/Listable1\/Pods\/BlueprintUI\/BlueprintUI\/Sources\/Element\/Element.swift",
        "key.fully_annotated_decl" : "<decl.protocol><syntaxtype.keyword>protocol<\/syntaxtype.keyword> <decl.name>Element<\/decl.name><\/decl.protocol>",
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 218,
        "key.modulename" : "BlueprintUI",
        "key.name" : "Element",
        "key.namelength" : 7,
        "key.nameoffset" : 116,
        "key.offset" : 106,
        "key.parsed_declaration" : "extension Element",
        "key.parsed_scope.end" : 16,
        "key.parsed_scope.start" : 9,
        "key.substructure" : [
          {
            "key.annotated_decl" : "<Declaration>func wrapInBlueprintEnvironmentFrom(environment: <Type usr=\"s:10ListableUI15ListEnvironmentV\">ListEnvironment<\/Type>) -&gt; <Type usr=\"s:11BlueprintUI7ElementP\">Element<\/Type><\/Declaration>",
            "key.bodylength" : 107,
            "key.bodyoffset" : 214,
            "key.filepath" : "\/Users\/k\/Desktop\/Development\/Listable1\/BlueprintUILists\/Sources\/BlueprintEnvironment.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>wrapInBlueprintEnvironmentFrom<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>environment<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:10ListableUI15ListEnvironmentV\">ListEnvironment<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.protocol usr=\"s:11BlueprintUI7ElementP\">Element<\/ref.protocol><\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 187,
            "key.name" : "wrapInBlueprintEnvironmentFrom(environment:)",
            "key.namelength" : 61,
            "key.nameoffset" : 140,
            "key.offset" : 135,
            "key.parsed_declaration" : "func wrapInBlueprintEnvironmentFrom(environment : ListEnvironment) -> Element",
            "key.parsed_scope.end" : 15,
            "key.parsed_scope.start" : 11,
            "key.substructure" : [

            ],
            "key.typename" : "<Self where Self : Element> (Self) -> (ListEnvironment) -> Element",
            "key.typeusr" : "$s11environment11BlueprintUI7Element_p08ListableC015ListEnvironmentV_tcD",
            "key.usr" : "s:11BlueprintUI7ElementP0A7UIListsE06wrapInA15EnvironmentFrom11environmentAaB_p08ListableB004ListG0V_tF"
          }
        ],
        "key.typename" : "Element.Protocol",
        "key.typeusr" : "$s11BlueprintUI7Element_pmD",
        "key.usr" : "s:11BlueprintUI7ElementP"
      },
      {
        "key.annotated_decl" : "<Declaration>struct ListEnvironment<\/Declaration>",
        "key.bodylength" : 298,
        "key.bodyoffset" : 354,
        "key.doc.column" : 15,
        "key.doc.declaration" : "struct ListEnvironment",
        "key.doc.discussion" : [
          {
            "Para" : "This type is similar to the SwiftUI or Blueprint `Environment`, where you define a `ListEnvironmentKey`, and then provide a custom getter and setter to read and write the content:"
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "You can retrieve the `ListEnvironment` through the `info` object passed in `ItemContent` and `HeaderFooter`’s `apply(to:for:with:)` methods."
          },
          {
            "CodeListing" : ""
          }
        ],
        "key.doc.file" : "\/Users\/k\/Desktop\/Development\/Listable1\/ListableUI\/Sources\/ListEnvironment.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/k\/Desktop\/Development\/Listable1\/ListableUI\/Sources\/ListEnvironment.swift\" line=\"44\" column=\"15\"><Name>ListEnvironment<\/Name><USR>s:10ListableUI15ListEnvironmentV<\/USR><Declaration>struct ListEnvironment<\/Declaration><CommentParts><Abstract><Para>An environment of keys and values that are passed to every <codeVoice>ItemContent<\/codeVoice> and <codeVoice>HeaderFooter<\/codeVoice> during layout and measurement, to allow passing down data.<\/Para><\/Abstract><Discussion><Para>This type is similar to the SwiftUI or Blueprint <codeVoice>Environment<\/codeVoice>, where you define a <codeVoice>ListEnvironmentKey<\/codeVoice>, and then provide a custom getter and setter to read and write the content:<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[enum MyLayoutTypeKey : ListEnvironmentKey {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    var defaultValue : MyLayoutType {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[        .defaultLayout]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    }]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[extension ListEnvironment {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    var myLayoutType : MyLayoutType {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[        get { self[MyLayoutTypeKey.self] }]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[        set { self[MyLayoutTypeKey.self] = newValue }]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    }]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>You can retrieve the <codeVoice>ListEnvironment<\/codeVoice> through the <codeVoice>info<\/codeVoice> object passed in <codeVoice>ItemContent<\/codeVoice> and <codeVoice>HeaderFooter<\/codeVoice>’s <codeVoice>apply(to:for:with:)<\/codeVoice> methods.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[func apply(]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    to views : ItemContentViews<Self>,]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    for reason: ApplyReason,]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    with info : ApplyItemContentInfo]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[) {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[   switch info.environment.myLayoutType {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[      ...]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[   }]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><\/Discussion><\/CommentParts><\/Class>",
        "key.doc.line" : 44,
        "key.doc.name" : "ListEnvironment",
        "key.doc.type" : "Class",
        "key.filepath" : "\/Users\/k\/Desktop\/Development\/Listable1\/ListableUI\/Sources\/ListEnvironment.swift",
        "key.fully_annotated_decl" : "<decl.struct><syntaxtype.keyword>struct<\/syntaxtype.keyword> <decl.name>ListEnvironment<\/decl.name><\/decl.struct>",
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 326,
        "key.modulename" : "ListableUI",
        "key.name" : "ListEnvironment",
        "key.namelength" : 15,
        "key.nameoffset" : 337,
        "key.offset" : 327,
        "key.parsed_declaration" : "extension ListEnvironment",
        "key.parsed_scope.end" : 32,
        "key.parsed_scope.start" : 19,
        "key.substructure" : [
          {
            "key.annotated_decl" : "<Declaration>var blueprintEnvironment: <Type usr=\"s:11BlueprintUI11EnvironmentV\">Environment<\/Type> { get set }<\/Declaration>",
            "key.bodylength" : 96,
            "key.bodyoffset" : 404,
            "key.filepath" : "\/Users\/k\/Desktop\/Development\/Listable1\/BlueprintUILists\/Sources\/BlueprintEnvironment.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>blueprintEnvironment<\/decl.name>: <decl.var.type><ref.struct usr=\"s:11BlueprintUI11EnvironmentV\">Environment<\/ref.struct><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> <syntaxtype.keyword>set<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 137,
            "key.name" : "blueprintEnvironment",
            "key.namelength" : 20,
            "key.nameoffset" : 368,
            "key.offset" : 364,
            "key.parsed_declaration" : "var blueprintEnvironment : Environment",
            "key.parsed_scope.end" : 24,
            "key.parsed_scope.start" : 21,
            "key.typename" : "Environment",
            "key.typeusr" : "$s11BlueprintUI11EnvironmentVD",
            "key.usr" : "s:10ListableUI15ListEnvironmentV16BlueprintUIListsE09blueprintD00eB00D0Vvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.annotated_decl" : "<Declaration>private enum BlueprintKey : <Type usr=\"s:10ListableUI18ListEnvironmentKeyP\">ListEnvironmentKey<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.private",
                "key.length" : 7,
                "key.offset" : 511
              }
            ],
            "key.bodylength" : 91,
            "key.bodyoffset" : 559,
            "key.elements" : [
              {
                "key.kind" : "source.lang.swift.structure.elem.typeref",
                "key.length" : 18,
                "key.offset" : 539
              }
            ],
            "key.filepath" : "\/Users\/k\/Desktop\/Development\/Listable1\/BlueprintUILists\/Sources\/BlueprintEnvironment.swift",
            "key.fully_annotated_decl" : "<decl.enum><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>enum<\/syntaxtype.keyword> <decl.name>BlueprintKey<\/decl.name> : <ref.protocol usr=\"s:10ListableUI18ListEnvironmentKeyP\">ListEnvironmentKey<\/ref.protocol><\/decl.enum>",
            "key.inheritedtypes" : [
              {
                "key.name" : "ListEnvironmentKey"
              }
            ],
            "key.kind" : "source.lang.swift.decl.enum",
            "key.length" : 132,
            "key.name" : "BlueprintKey",
            "key.namelength" : 12,
            "key.nameoffset" : 524,
            "key.offset" : 519,
            "key.parsed_declaration" : "private enum BlueprintKey : ListEnvironmentKey",
            "key.parsed_scope.end" : 31,
            "key.parsed_scope.start" : 26,
            "key.substructure" : [
              {
                "key.accessibility" : "source.lang.swift.accessibility.internal",
                "key.annotated_decl" : "<Declaration>static var defaultValue: <Type usr=\"s:11BlueprintUI11EnvironmentV\">Environment<\/Type> { get }<\/Declaration>",
                "key.bodylength" : 28,
                "key.bodyoffset" : 616,
                "key.doc.column" : 16,
                "key.doc.declaration" : "static var defaultValue: Self.Value { get }",
                "key.doc.discussion" : [
                  {
                    "Note" : ""
                  }
                ],
                "key.doc.file" : "\/Users\/k\/Desktop\/Development\/Listable1\/ListableUI\/Sources\/ListEnvironment.swift",
                "key.doc.full_as_xml" : "<Other file=\"\/Users\/k\/Desktop\/Development\/Listable1\/ListableUI\/Sources\/ListEnvironment.swift\" line=\"79\" column=\"16\"><Name>defaultValue<\/Name><USR>s:10ListableUI18ListEnvironmentKeyP12defaultValue0G0QzvpZ<\/USR><Declaration>static var defaultValue: Self.Value { get }<\/Declaration><CommentParts><Abstract><Para>The default value that will be vended by an <codeVoice>Environment<\/codeVoice> for this key if no other value has been set.<\/Para><\/Abstract><Discussion><Note><Para>This documentation comment was inherited from <codeVoice>ListEnvironmentKey<\/codeVoice>.<\/Para><\/Note><\/Discussion><\/CommentParts><\/Other>",
                "key.doc.line" : 79,
                "key.doc.name" : "defaultValue",
                "key.doc.type" : "Other",
                "key.filepath" : "\/Users\/k\/Desktop\/Development\/Listable1\/BlueprintUILists\/Sources\/BlueprintEnvironment.swift",
                "key.fully_annotated_decl" : "<decl.var.static><syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>defaultValue<\/decl.name>: <decl.var.type><ref.struct usr=\"s:11BlueprintUI11EnvironmentV\">Environment<\/ref.struct><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.static>",
                "key.kind" : "source.lang.swift.decl.var.static",
                "key.length" : 68,
                "key.name" : "defaultValue",
                "key.namelength" : 12,
                "key.nameoffset" : 588,
                "key.offset" : 577,
                "key.overrides" : [
                  {
                    "key.usr" : "s:10ListableUI18ListEnvironmentKeyP12defaultValue0G0QzvpZ"
                  }
                ],
                "key.parsed_declaration" : "static var defaultValue : Environment",
                "key.parsed_scope.end" : 30,
                "key.parsed_scope.start" : 28,
                "key.typename" : "Environment",
                "key.typeusr" : "$s11BlueprintUI11EnvironmentVD",
                "key.usr" : "s:10ListableUI18ListEnvironmentKeyP12defaultValue0G0QzvpZ"
              }
            ],
            "key.typename" : "ListEnvironment.BlueprintKey.Type",
            "key.typeusr" : "$s10ListableUI15ListEnvironmentV16BlueprintUIListsE0E3Key33_88D53BBEC32650DA05BC1D9C3E2B9D21LLOmD",
            "key.usr" : "s:10ListableUI15ListEnvironmentV16BlueprintUIListsE0E3Key33_88D53BBEC32650DA05BC1D9C3E2B9D21LLO"
          }
        ],
        "key.typename" : "ListEnvironment.Type",
        "key.typeusr" : "$s10ListableUI15ListEnvironmentVmD",
        "key.usr" : "s:10ListableUI15ListEnvironmentV"
      }
    ]
  }
}, {
  "\/Users\/k\/Desktop\/Development\/Listable1\/BlueprintUILists\/Sources\/BlueprintHeaderFooterContent.swift" : {
    "key.diagnostic_stage" : "source.diagnostic.stage.swift.parse",
    "key.length" : 5093,
    "key.offset" : 0,
    "key.substructure" : [
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public typealias BlueprintHeaderContent = <Type usr=\"s:16BlueprintUILists0A19HeaderFooterContentP\">BlueprintHeaderFooterContent<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 205
          }
        ],
        "key.doc.column" : 18,
        "key.doc.comment" : "Alias to allow less verbose creation of headers.",
        "key.doc.declaration" : "public typealias BlueprintHeaderContent = BlueprintHeaderFooterContent",
        "key.doc.file" : "\/Users\/k\/Desktop\/Development\/Listable1\/BlueprintUILists\/Sources\/BlueprintHeaderFooterContent.swift",
        "key.doc.full_as_xml" : "<Other file=\"\/Users\/k\/Desktop\/Development\/Listable1\/BlueprintUILists\/Sources\/BlueprintHeaderFooterContent.swift\" line=\"13\" column=\"18\"><Name>BlueprintHeaderContent<\/Name><USR>s:16BlueprintUILists0A13HeaderContenta<\/USR><Declaration>public typealias BlueprintHeaderContent = BlueprintHeaderFooterContent<\/Declaration><CommentParts><Abstract><Para>Alias to allow less verbose creation of headers.<\/Para><\/Abstract><\/CommentParts><\/Other>",
        "key.doc.line" : 13,
        "key.doc.name" : "BlueprintHeaderContent",
        "key.doc.type" : "Other",
        "key.doclength" : 53,
        "key.docoffset" : 152,
        "key.filepath" : "\/Users\/k\/Desktop\/Development\/Listable1\/BlueprintUILists\/Sources\/BlueprintHeaderFooterContent.swift",
        "key.fully_annotated_decl" : "<decl.typealias><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>typealias<\/syntaxtype.keyword> <decl.name>BlueprintHeaderContent<\/decl.name> = <ref.protocol usr=\"s:16BlueprintUILists0A19HeaderFooterContentP\">BlueprintHeaderFooterContent<\/ref.protocol><\/decl.typealias>",
        "key.kind" : "source.lang.swift.decl.typealias",
        "key.length" : 63,
        "key.name" : "BlueprintHeaderContent",
        "key.namelength" : 22,
        "key.nameoffset" : 222,
        "key.offset" : 212,
        "key.parsed_declaration" : "public typealias BlueprintHeaderContent = BlueprintHeaderFooterContent",
        "key.parsed_scope.end" : 13,
        "key.parsed_scope.start" : 13,
        "key.typename" : "BlueprintHeaderFooterContent.Protocol",
        "key.typeusr" : "$s16BlueprintUILists0A19HeaderFooterContent_pmD",
        "key.usr" : "s:16BlueprintUILists0A13HeaderContenta"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public typealias BlueprintFooterContent = <Type usr=\"s:16BlueprintUILists0A19HeaderFooterContentP\">BlueprintHeaderFooterContent<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 330
          }
        ],
        "key.doc.column" : 18,
        "key.doc.comment" : "Alias to allow less verbose creation of footers.",
        "key.doc.declaration" : "public typealias BlueprintFooterContent = BlueprintHeaderFooterContent",
        "key.doc.file" : "\/Users\/k\/Desktop\/Development\/Listable1\/BlueprintUILists\/Sources\/BlueprintHeaderFooterContent.swift",
        "key.doc.full_as_xml" : "<Other file=\"\/Users\/k\/Desktop\/Development\/Listable1\/BlueprintUILists\/Sources\/BlueprintHeaderFooterContent.swift\" line=\"16\" column=\"18\"><Name>BlueprintFooterContent<\/Name><USR>s:16BlueprintUILists0A13FooterContenta<\/USR><Declaration>public typealias BlueprintFooterContent = BlueprintHeaderFooterContent<\/Declaration><CommentParts><Abstract><Para>Alias to allow less verbose creation of footers.<\/Para><\/Abstract><\/CommentParts><\/Other>",
        "key.doc.line" : 16,
        "key.doc.name" : "BlueprintFooterContent",
        "key.doc.type" : "Other",
        "key.doclength" : 53,
        "key.docoffset" : 277,
        "key.filepath" : "\/Users\/k\/Desktop\/Development\/Listable1\/BlueprintUILists\/Sources\/BlueprintHeaderFooterContent.swift",
        "key.fully_annotated_decl" : "<decl.typealias><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>typealias<\/syntaxtype.keyword> <decl.name>BlueprintFooterContent<\/decl.name> = <ref.protocol usr=\"s:16BlueprintUILists0A19HeaderFooterContentP\">BlueprintHeaderFooterContent<\/ref.protocol><\/decl.typealias>",
        "key.kind" : "source.lang.swift.decl.typealias",
        "key.length" : 63,
        "key.name" : "BlueprintFooterContent",
        "key.namelength" : 22,
        "key.nameoffset" : 347,
        "key.offset" : 337,
        "key.parsed_declaration" : "public typealias BlueprintFooterContent = BlueprintHeaderFooterContent",
        "key.parsed_scope.end" : 16,
        "key.parsed_scope.start" : 16,
        "key.typename" : "BlueprintHeaderFooterContent.Protocol",
        "key.typeusr" : "$s16BlueprintUILists0A19HeaderFooterContent_pmD",
        "key.usr" : "s:16BlueprintUILists0A13FooterContenta"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public protocol BlueprintHeaderFooterContent : <Type usr=\"s:10ListableUI19HeaderFooterContentP\">HeaderFooterContent<\/Type> where <Type usr=\"s:16BlueprintUILists0A19HeaderFooterContentP4Selfxmfp\">Self<\/Type>.BackgroundView == <Type usr=\"c:@M@BlueprintUI@objc(cs)BlueprintView\">BlueprintView<\/Type>, <Type usr=\"s:16BlueprintUILists0A19HeaderFooterContentP4Selfxmfp\">Self<\/Type>.ContentView == <Type usr=\"c:@M@BlueprintUI@objc(cs)BlueprintView\">BlueprintView<\/Type>, <Type usr=\"s:16BlueprintUILists0A19HeaderFooterContentP4Selfxmfp\">Self<\/Type>.PressedBackgroundView == <Type usr=\"c:@M@BlueprintUI@objc(cs)BlueprintView\">BlueprintView<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 1999
          }
        ],
        "key.bodylength" : 1035,
        "key.bodyoffset" : 2187,
        "key.doc.column" : 17,
        "key.doc.comment" : "\nA `HeaderFooterContent` specialized for use with Blueprint. Instead of providing\ncustom views from `createReusable{...}View`, and then updating them in `apply(to:)`,\nyou instead provide Blueprint elements, and `Listable` handles mapping this to an underlying `BlueprintView`.\n\nYou do not need to provide any views; just Blueprint `Elements`. Do not\noverride the `createReusable{...}View` methods.\n\nA non-tappable header that shows a label might look like this:\n```\nstruct MyHeaderContent : BlueprintHeaderFooterContent, Equatable\n{\n    var title : String\n\n    var elementRepresentation: Element {\n        Label(text: self.title) {\n            $0.font = .systemFont(ofSize: 20.0, weight: .bold)\n        }\n        .inset(horizontal: 15.0, vertical: 10.0)\n    }\n}\n```\nThe header is made `Equatable` in order to synthesize automatic conformance to `isEquivalent`,\nbased on the header's properties.\n\nIf you want to add support for rendering a background view and a pressed state, you should provide\nboth `background` and `pressedBackground` properties:\n```\nvar background : Element? {\n    Box(backgroundColor: .white)\n}\n\nvar pressedBackground : Element? {\n    Box(backgroundColor: .lightGray)\n}\n```\nThe ordering of the elements by z-index is as follows:\nz-Index 3) `elementRepresentation`\nz-Index 2) `pressedBackground` (Only if the header\/footer is pressed, eg if the wrapping `HeaderFooter` has an `onTap` handler.)\nz-Index 1) `background`",
        "key.doc.declaration" : "public protocol BlueprintHeaderFooterContent : ListableUI.HeaderFooterContent where Self.BackgroundView == BlueprintUI.BlueprintView, Self.ContentView == BlueprintUI.BlueprintView, Self.PressedBackgroundView == BlueprintUI.BlueprintView",
        "key.doc.discussion" : [
          {
            "Para" : "You do not need to provide any views; just Blueprint `Elements`. Do not override the `createReusable{...}View` methods."
          },
          {
            "Para" : "A non-tappable header that shows a label might look like this:"
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "The header is made `Equatable` in order to synthesize automatic conformance to `isEquivalent`, based on the header’s properties."
          },
          {
            "Para" : "If you want to add support for rendering a background view and a pressed state, you should provide both `background` and `pressedBackground` properties:"
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "The ordering of the elements by z-index is as follows: z-Index 3) `elementRepresentation` z-Index 2) `pressedBackground` (Only if the header\/footer is pressed, eg if the wrapping `HeaderFooter` has an `onTap` handler.) z-Index 1) `background`"
          }
        ],
        "key.doc.file" : "\/Users\/k\/Desktop\/Development\/Listable1\/BlueprintUILists\/Sources\/BlueprintHeaderFooterContent.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/k\/Desktop\/Development\/Listable1\/BlueprintUILists\/Sources\/BlueprintHeaderFooterContent.swift\" line=\"60\" column=\"17\"><Name>BlueprintHeaderFooterContent<\/Name><USR>s:16BlueprintUILists0A19HeaderFooterContentP<\/USR><Declaration>public protocol BlueprintHeaderFooterContent : ListableUI.HeaderFooterContent where Self.BackgroundView == BlueprintUI.BlueprintView, Self.ContentView == BlueprintUI.BlueprintView, Self.PressedBackgroundView == BlueprintUI.BlueprintView<\/Declaration><CommentParts><Abstract><Para>A <codeVoice>HeaderFooterContent<\/codeVoice> specialized for use with Blueprint. Instead of providing custom views from <codeVoice>createReusable{...}View<\/codeVoice>, and then updating them in <codeVoice>apply(to:)<\/codeVoice>, you instead provide Blueprint elements, and <codeVoice>Listable<\/codeVoice> handles mapping this to an underlying <codeVoice>BlueprintView<\/codeVoice>.<\/Para><\/Abstract><Discussion><Para>You do not need to provide any views; just Blueprint <codeVoice>Elements<\/codeVoice>. Do not override the <codeVoice>createReusable{...}View<\/codeVoice> methods.<\/Para><Para>A non-tappable header that shows a label might look like this:<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[struct MyHeaderContent : BlueprintHeaderFooterContent, Equatable]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[{]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    var title : String]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    var elementRepresentation: Element {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[        Label(text: self.title) {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[            $0.font = .systemFont(ofSize: 20.0, weight: .bold)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[        }]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[        .inset(horizontal: 15.0, vertical: 10.0)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    }]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>The header is made <codeVoice>Equatable<\/codeVoice> in order to synthesize automatic conformance to <codeVoice>isEquivalent<\/codeVoice>, based on the header’s properties.<\/Para><Para>If you want to add support for rendering a background view and a pressed state, you should provide both <codeVoice>background<\/codeVoice> and <codeVoice>pressedBackground<\/codeVoice> properties:<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[var background : Element? {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    Box(backgroundColor: .white)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[var pressedBackground : Element? {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    Box(backgroundColor: .lightGray)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>The ordering of the elements by z-index is as follows: z-Index 3) <codeVoice>elementRepresentation<\/codeVoice> z-Index 2) <codeVoice>pressedBackground<\/codeVoice> (Only if the header\/footer is pressed, eg if the wrapping <codeVoice>HeaderFooter<\/codeVoice> has an <codeVoice>onTap<\/codeVoice> handler.) z-Index 1) <codeVoice>background<\/codeVoice><\/Para><\/Discussion><\/CommentParts><\/Class>",
        "key.doc.line" : 60,
        "key.doc.name" : "BlueprintHeaderFooterContent",
        "key.doc.type" : "Class",
        "key.doclength" : 1596,
        "key.docoffset" : 403,
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 19,
            "key.offset" : 2046
          }
        ],
        "key.filepath" : "\/Users\/k\/Desktop\/Development\/Listable1\/BlueprintUILists\/Sources\/BlueprintHeaderFooterContent.swift",
        "key.fully_annotated_decl" : "<decl.protocol><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>protocol<\/syntaxtype.keyword> <decl.name>BlueprintHeaderFooterContent<\/decl.name> : <ref.protocol usr=\"s:10ListableUI19HeaderFooterContentP\">HeaderFooterContent<\/ref.protocol> <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement><ref.generic_type_param usr=\"s:16BlueprintUILists0A19HeaderFooterContentP4Selfxmfp\">Self<\/ref.generic_type_param>.BackgroundView == <ref.class usr=\"c:@M@BlueprintUI@objc(cs)BlueprintView\">BlueprintView<\/ref.class><\/decl.generic_type_requirement>, <decl.generic_type_requirement><ref.generic_type_param usr=\"s:16BlueprintUILists0A19HeaderFooterContentP4Selfxmfp\">Self<\/ref.generic_type_param>.ContentView == <ref.class usr=\"c:@M@BlueprintUI@objc(cs)BlueprintView\">BlueprintView<\/ref.class><\/decl.generic_type_requirement>, <decl.generic_type_requirement><ref.generic_type_param usr=\"s:16BlueprintUILists0A19HeaderFooterContentP4Selfxmfp\">Self<\/ref.generic_type_param>.PressedBackgroundView == <ref.class usr=\"c:@M@BlueprintUI@objc(cs)BlueprintView\">BlueprintView<\/ref.class><\/decl.generic_type_requirement><\/decl.protocol>",
        "key.inheritedtypes" : [
          {
            "key.name" : "HeaderFooterContent"
          }
        ],
        "key.kind" : "source.lang.swift.decl.protocol",
        "key.length" : 1217,
        "key.name" : "BlueprintHeaderFooterContent",
        "key.namelength" : 28,
        "key.nameoffset" : 2015,
        "key.offset" : 2006,
        "key.parsed_declaration" : "public protocol BlueprintHeaderFooterContent : HeaderFooterContent\nwhere\n    ContentView == BlueprintView,\n    BackgroundView == BlueprintView,\n    PressedBackgroundView == BlueprintView",
        "key.parsed_scope.end" : 91,
        "key.parsed_scope.start" : 60,
        "key.substructure" : [
          {
            "key.kind" : "source.lang.swift.syntaxtype.comment.mark",
            "key.length" : 48,
            "key.name" : "MARK: Creating Blueprint Element Representations",
            "key.namelength" : 0,
            "key.nameoffset" : 0,
            "key.offset" : 2202
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>var elementRepresentation: <Type usr=\"s:11BlueprintUI7ElementP\">Element<\/Type> { get }<\/Declaration>",
            "key.bodylength" : 5,
            "key.bodyoffset" : 2393,
            "key.doc.column" : 9,
            "key.doc.comment" : "Required. Create and return the Blueprint element used to represent the content.",
            "key.doc.declaration" : "var elementRepresentation: Element { get }",
            "key.doc.file" : "\/Users\/k\/Desktop\/Development\/Listable1\/BlueprintUILists\/Sources\/BlueprintHeaderFooterContent.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/k\/Desktop\/Development\/Listable1\/BlueprintUILists\/Sources\/BlueprintHeaderFooterContent.swift\" line=\"71\" column=\"9\"><Name>elementRepresentation<\/Name><USR>s:16BlueprintUILists0A19HeaderFooterContentP21elementRepresentation0A2UI7Element_pvp<\/USR><Declaration>var elementRepresentation: Element { get }<\/Declaration><CommentParts><Abstract><Para>Required. Create and return the Blueprint element used to represent the content.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 71,
            "key.doc.name" : "elementRepresentation",
            "key.doc.type" : "Other",
            "key.doclength" : 85,
            "key.docoffset" : 2267,
            "key.filepath" : "\/Users\/k\/Desktop\/Development\/Listable1\/BlueprintUILists\/Sources\/BlueprintHeaderFooterContent.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>elementRepresentation<\/decl.name>: <decl.var.type><ref.protocol usr=\"s:11BlueprintUI7ElementP\">Element<\/ref.protocol><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 43,
            "key.name" : "elementRepresentation",
            "key.namelength" : 21,
            "key.nameoffset" : 2360,
            "key.offset" : 2356,
            "key.parsed_declaration" : "var elementRepresentation : Element",
            "key.parsed_scope.end" : 71,
            "key.parsed_scope.start" : 71,
            "key.typename" : "Element",
            "key.typeusr" : "$s11BlueprintUI7Element_pD",
            "key.usr" : "s:16BlueprintUILists0A19HeaderFooterContentP21elementRepresentation0A2UI7Element_pvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>var background: <Type usr=\"s:11BlueprintUI7ElementP\">Element<\/Type>? { get }<\/Declaration>",
            "key.bodylength" : 5,
            "key.bodyoffset" : 2794,
            "key.doc.column" : 9,
            "key.doc.comment" : "Optional. Create and return the Blueprint element used to represent the background of the content.\nYou usually provide this method alongside `pressedBackground`, if your header\nhas an `onTap` handler.\n\nNote\n----\nThe default implementation of this method returns nil, and provides no background.",
            "key.doc.declaration" : "var background: Element? { get }",
            "key.doc.discussion" : [
              {
                "Para" : "The default implementation of this method returns nil, and provides no background."
              }
            ],
            "key.doc.file" : "\/Users\/k\/Desktop\/Development\/Listable1\/BlueprintUILists\/Sources\/BlueprintHeaderFooterContent.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/k\/Desktop\/Development\/Listable1\/BlueprintUILists\/Sources\/BlueprintHeaderFooterContent.swift\" line=\"81\" column=\"9\"><Name>background<\/Name><USR>s:16BlueprintUILists0A19HeaderFooterContentP10background0A2UI7Element_pSgvp<\/USR><Declaration>var background: Element? { get }<\/Declaration><CommentParts><Abstract><Para>Optional. Create and return the Blueprint element used to represent the background of the content. You usually provide this method alongside <codeVoice>pressedBackground<\/codeVoice>, if your header has an <codeVoice>onTap<\/codeVoice> handler.<\/Para><\/Abstract><Discussion><rawHTML><![CDATA[<h2>]]><\/rawHTML>Note<rawHTML><![CDATA[<\/h2>]]><\/rawHTML><Para>The default implementation of this method returns nil, and provides no background.<\/Para><\/Discussion><\/CommentParts><\/Other>",
            "key.doc.line" : 81,
            "key.doc.name" : "background",
            "key.doc.type" : "Other",
            "key.doclength" : 354,
            "key.docoffset" : 2409,
            "key.filepath" : "\/Users\/k\/Desktop\/Development\/Listable1\/BlueprintUILists\/Sources\/BlueprintHeaderFooterContent.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>background<\/decl.name>: <decl.var.type><ref.protocol usr=\"s:11BlueprintUI7ElementP\">Element<\/ref.protocol>?<\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 33,
            "key.name" : "background",
            "key.namelength" : 10,
            "key.nameoffset" : 2771,
            "key.offset" : 2767,
            "key.parsed_declaration" : "var background : Element?",
            "key.parsed_scope.end" : 81,
            "key.parsed_scope.start" : 81,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:16BlueprintUILists0A19HeaderFooterContentPAAE10background0A2UI7Element_pSgvp\">background<\/RelatedName>"
              }
            ],
            "key.typename" : "Element?",
            "key.typeusr" : "$s11BlueprintUI7Element_pSgD",
            "key.usr" : "s:16BlueprintUILists0A19HeaderFooterContentP10background0A2UI7Element_pSgvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>var pressedBackground: <Type usr=\"s:11BlueprintUI7ElementP\">Element<\/Type>? { get }<\/Declaration>",
            "key.bodylength" : 5,
            "key.bodyoffset" : 3215,
            "key.doc.column" : 9,
            "key.doc.comment" : "Optional. Create and return the Blueprint element used to represent the background of the content when it is pressed.\nYou usually provide this method alongside `background`, if your header has an `onTap` handler.\n\nNote\n----\nThe default implementation of this method returns nil, and provides no selected background.",
            "key.doc.declaration" : "var pressedBackground: Element? { get }",
            "key.doc.discussion" : [
              {
                "Para" : "The default implementation of this method returns nil, and provides no selected background."
              }
            ],
            "key.doc.file" : "\/Users\/k\/Desktop\/Development\/Listable1\/BlueprintUILists\/Sources\/BlueprintHeaderFooterContent.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/k\/Desktop\/Development\/Listable1\/BlueprintUILists\/Sources\/BlueprintHeaderFooterContent.swift\" line=\"90\" column=\"9\"><Name>pressedBackground<\/Name><USR>s:16BlueprintUILists0A19HeaderFooterContentP17pressedBackground0A2UI7Element_pSgvp<\/USR><Declaration>var pressedBackground: Element? { get }<\/Declaration><CommentParts><Abstract><Para>Optional. Create and return the Blueprint element used to represent the background of the content when it is pressed. You usually provide this method alongside <codeVoice>background<\/codeVoice>, if your header has an <codeVoice>onTap<\/codeVoice> handler.<\/Para><\/Abstract><Discussion><rawHTML><![CDATA[<h2>]]><\/rawHTML>Note<rawHTML><![CDATA[<\/h2>]]><\/rawHTML><Para>The default implementation of this method returns nil, and provides no selected background.<\/Para><\/Discussion><\/CommentParts><\/Other>",
            "key.doc.line" : 90,
            "key.doc.name" : "pressedBackground",
            "key.doc.type" : "Other",
            "key.doclength" : 367,
            "key.docoffset" : 2810,
            "key.filepath" : "\/Users\/k\/Desktop\/Development\/Listable1\/BlueprintUILists\/Sources\/BlueprintHeaderFooterContent.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>pressedBackground<\/decl.name>: <decl.var.type><ref.protocol usr=\"s:11BlueprintUI7ElementP\">Element<\/ref.protocol>?<\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 40,
            "key.name" : "pressedBackground",
            "key.namelength" : 17,
            "key.nameoffset" : 3185,
            "key.offset" : 3181,
            "key.parsed_declaration" : "var pressedBackground : Element?",
            "key.parsed_scope.end" : 90,
            "key.parsed_scope.start" : 90,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:16BlueprintUILists0A19HeaderFooterContentPAAE17pressedBackground0A2UI7Element_pSgvp\">pressedBackground<\/RelatedName>"
              }
            ],
            "key.typename" : "Element?",
            "key.typeusr" : "$s11BlueprintUI7Element_pSgD",
            "key.usr" : "s:16BlueprintUILists0A19HeaderFooterContentP17pressedBackground0A2UI7Element_pSgvp"
          }
        ],
        "key.typename" : "BlueprintHeaderFooterContent.Protocol",
        "key.typeusr" : "$s16BlueprintUILists0A19HeaderFooterContent_pmD",
        "key.usr" : "s:16BlueprintUILists0A19HeaderFooterContentP"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public protocol BlueprintHeaderFooterContent : <Type usr=\"s:10ListableUI19HeaderFooterContentP\">HeaderFooterContent<\/Type> where <Type usr=\"s:16BlueprintUILists0A19HeaderFooterContentP4Selfxmfp\">Self<\/Type>.BackgroundView == <Type usr=\"c:@M@BlueprintUI@objc(cs)BlueprintView\">BlueprintView<\/Type>, <Type usr=\"s:16BlueprintUILists0A19HeaderFooterContentP4Selfxmfp\">Self<\/Type>.ContentView == <Type usr=\"c:@M@BlueprintUI@objc(cs)BlueprintView\">BlueprintView<\/Type>, <Type usr=\"s:16BlueprintUILists0A19HeaderFooterContentP4Selfxmfp\">Self<\/Type>.PressedBackgroundView == <Type usr=\"c:@M@BlueprintUI@objc(cs)BlueprintView\">BlueprintView<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 3226
          }
        ],
        "key.bodylength" : 1818,
        "key.bodyoffset" : 3273,
        "key.doc.column" : 17,
        "key.doc.declaration" : "public protocol BlueprintHeaderFooterContent : ListableUI.HeaderFooterContent where Self.BackgroundView == BlueprintUI.BlueprintView, Self.ContentView == BlueprintUI.BlueprintView, Self.PressedBackgroundView == BlueprintUI.BlueprintView",
        "key.doc.discussion" : [
          {
            "Para" : "You do not need to provide any views; just Blueprint `Elements`. Do not override the `createReusable{...}View` methods."
          },
          {
            "Para" : "A non-tappable header that shows a label might look like this:"
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "The header is made `Equatable` in order to synthesize automatic conformance to `isEquivalent`, based on the header’s properties."
          },
          {
            "Para" : "If you want to add support for rendering a background view and a pressed state, you should provide both `background` and `pressedBackground` properties:"
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "The ordering of the elements by z-index is as follows: z-Index 3) `elementRepresentation` z-Index 2) `pressedBackground` (Only if the header\/footer is pressed, eg if the wrapping `HeaderFooter` has an `onTap` handler.) z-Index 1) `background`"
          }
        ],
        "key.doc.file" : "\/Users\/k\/Desktop\/Development\/Listable1\/BlueprintUILists\/Sources\/BlueprintHeaderFooterContent.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/k\/Desktop\/Development\/Listable1\/BlueprintUILists\/Sources\/BlueprintHeaderFooterContent.swift\" line=\"60\" column=\"17\"><Name>BlueprintHeaderFooterContent<\/Name><USR>s:16BlueprintUILists0A19HeaderFooterContentP<\/USR><Declaration>public protocol BlueprintHeaderFooterContent : ListableUI.HeaderFooterContent where Self.BackgroundView == BlueprintUI.BlueprintView, Self.ContentView == BlueprintUI.BlueprintView, Self.PressedBackgroundView == BlueprintUI.BlueprintView<\/Declaration><CommentParts><Abstract><Para>A <codeVoice>HeaderFooterContent<\/codeVoice> specialized for use with Blueprint. Instead of providing custom views from <codeVoice>createReusable{...}View<\/codeVoice>, and then updating them in <codeVoice>apply(to:)<\/codeVoice>, you instead provide Blueprint elements, and <codeVoice>Listable<\/codeVoice> handles mapping this to an underlying <codeVoice>BlueprintView<\/codeVoice>.<\/Para><\/Abstract><Discussion><Para>You do not need to provide any views; just Blueprint <codeVoice>Elements<\/codeVoice>. Do not override the <codeVoice>createReusable{...}View<\/codeVoice> methods.<\/Para><Para>A non-tappable header that shows a label might look like this:<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[struct MyHeaderContent : BlueprintHeaderFooterContent, Equatable]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[{]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    var title : String]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    var elementRepresentation: Element {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[        Label(text: self.title) {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[            $0.font = .systemFont(ofSize: 20.0, weight: .bold)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[        }]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[        .inset(horizontal: 15.0, vertical: 10.0)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    }]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>The header is made <codeVoice>Equatable<\/codeVoice> in order to synthesize automatic conformance to <codeVoice>isEquivalent<\/codeVoice>, based on the header’s properties.<\/Para><Para>If you want to add support for rendering a background view and a pressed state, you should provide both <codeVoice>background<\/codeVoice> and <codeVoice>pressedBackground<\/codeVoice> properties:<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[var background : Element? {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    Box(backgroundColor: .white)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[var pressedBackground : Element? {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    Box(backgroundColor: .lightGray)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>The ordering of the elements by z-index is as follows: z-Index 3) <codeVoice>elementRepresentation<\/codeVoice> z-Index 2) <codeVoice>pressedBackground<\/codeVoice> (Only if the header\/footer is pressed, eg if the wrapping <codeVoice>HeaderFooter<\/codeVoice> has an <codeVoice>onTap<\/codeVoice> handler.) z-Index 1) <codeVoice>background<\/codeVoice><\/Para><\/Discussion><\/CommentParts><\/Class>",
        "key.doc.line" : 60,
        "key.doc.name" : "BlueprintHeaderFooterContent",
        "key.doc.type" : "Class",
        "key.filepath" : "\/Users\/k\/Desktop\/Development\/Listable1\/BlueprintUILists\/Sources\/BlueprintHeaderFooterContent.swift",
        "key.fully_annotated_decl" : "<decl.protocol><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>protocol<\/syntaxtype.keyword> <decl.name>BlueprintHeaderFooterContent<\/decl.name> : <ref.protocol usr=\"s:10ListableUI19HeaderFooterContentP\">HeaderFooterContent<\/ref.protocol> <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement><ref.generic_type_param usr=\"s:16BlueprintUILists0A19HeaderFooterContentP4Selfxmfp\">Self<\/ref.generic_type_param>.BackgroundView == <ref.class usr=\"c:@M@BlueprintUI@objc(cs)BlueprintView\">BlueprintView<\/ref.class><\/decl.generic_type_requirement>, <decl.generic_type_requirement><ref.generic_type_param usr=\"s:16BlueprintUILists0A19HeaderFooterContentP4Selfxmfp\">Self<\/ref.generic_type_param>.ContentView == <ref.class usr=\"c:@M@BlueprintUI@objc(cs)BlueprintView\">BlueprintView<\/ref.class><\/decl.generic_type_requirement>, <decl.generic_type_requirement><ref.generic_type_param usr=\"s:16BlueprintUILists0A19HeaderFooterContentP4Selfxmfp\">Self<\/ref.generic_type_param>.PressedBackgroundView == <ref.class usr=\"c:@M@BlueprintUI@objc(cs)BlueprintView\">BlueprintView<\/ref.class><\/decl.generic_type_requirement><\/decl.protocol>",
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 1859,
        "key.name" : "BlueprintHeaderFooterContent",
        "key.namelength" : 28,
        "key.nameoffset" : 3243,
        "key.offset" : 3233,
        "key.parsed_declaration" : "public extension BlueprintHeaderFooterContent",
        "key.parsed_scope.end" : 149,
        "key.parsed_scope.start" : 94,
        "key.substructure" : [
          {
            "key.kind" : "source.lang.swift.syntaxtype.comment.mark",
            "key.length" : 34,
            "key.name" : "MARK: BlueprintHeaderFooterContent",
            "key.namelength" : 0,
            "key.nameoffset" : 0,
            "key.offset" : 3288
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>var background: <Type usr=\"s:11BlueprintUI7ElementP\">Element<\/Type>? { get }<\/Declaration>",
            "key.bodylength" : 17,
            "key.bodyoffset" : 3366,
            "key.doc.column" : 9,
            "key.doc.declaration" : "var background: Element? { get }",
            "key.doc.discussion" : [
              {
                "Para" : "The default implementation of this method returns nil, and provides no background."
              },
              {
                "Note" : ""
              }
            ],
            "key.doc.file" : "\/Users\/k\/Desktop\/Development\/Listable1\/BlueprintUILists\/Sources\/BlueprintHeaderFooterContent.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/k\/Desktop\/Development\/Listable1\/BlueprintUILists\/Sources\/BlueprintHeaderFooterContent.swift\" line=\"81\" column=\"9\"><Name>background<\/Name><USR>s:16BlueprintUILists0A19HeaderFooterContentP10background0A2UI7Element_pSgvp<\/USR><Declaration>var background: Element? { get }<\/Declaration><CommentParts><Abstract><Para>Optional. Create and return the Blueprint element used to represent the background of the content. You usually provide this method alongside <codeVoice>pressedBackground<\/codeVoice>, if your header has an <codeVoice>onTap<\/codeVoice> handler.<\/Para><\/Abstract><Discussion><rawHTML><![CDATA[<h2>]]><\/rawHTML>Note<rawHTML><![CDATA[<\/h2>]]><\/rawHTML><Para>The default implementation of this method returns nil, and provides no background.<\/Para><Note><Para>This documentation comment was inherited from <codeVoice>BlueprintHeaderFooterContent<\/codeVoice>.<\/Para><\/Note><\/Discussion><\/CommentParts><\/Other>",
            "key.doc.line" : 81,
            "key.doc.name" : "background",
            "key.doc.type" : "Other",
            "key.filepath" : "\/Users\/k\/Desktop\/Development\/Listable1\/BlueprintUILists\/Sources\/BlueprintHeaderFooterContent.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>background<\/decl.name>: <decl.var.type><ref.protocol usr=\"s:11BlueprintUI7ElementP\">Element<\/ref.protocol>?<\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 45,
            "key.name" : "background",
            "key.namelength" : 10,
            "key.nameoffset" : 3343,
            "key.offset" : 3339,
            "key.parsed_declaration" : "var background : Element?",
            "key.parsed_scope.end" : 102,
            "key.parsed_scope.start" : 100,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:16BlueprintUILists0A19HeaderFooterContentP10background0A2UI7Element_pSgvp\">background<\/RelatedName>"
              }
            ],
            "key.typename" : "Element?",
            "key.typeusr" : "$s11BlueprintUI7Element_pSgD",
            "key.usr" : "s:16BlueprintUILists0A19HeaderFooterContentP10background0A2UI7Element_pSgvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>var pressedBackground: <Type usr=\"s:11BlueprintUI7ElementP\">Element<\/Type>? { get }<\/Declaration>",
            "key.bodylength" : 17,
            "key.bodyoffset" : 3428,
            "key.doc.column" : 9,
            "key.doc.declaration" : "var pressedBackground: Element? { get }",
            "key.doc.discussion" : [
              {
                "Para" : "The default implementation of this method returns nil, and provides no selected background."
              },
              {
                "Note" : ""
              }
            ],
            "key.doc.file" : "\/Users\/k\/Desktop\/Development\/Listable1\/BlueprintUILists\/Sources\/BlueprintHeaderFooterContent.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/k\/Desktop\/Development\/Listable1\/BlueprintUILists\/Sources\/BlueprintHeaderFooterContent.swift\" line=\"90\" column=\"9\"><Name>pressedBackground<\/Name><USR>s:16BlueprintUILists0A19HeaderFooterContentP17pressedBackground0A2UI7Element_pSgvp<\/USR><Declaration>var pressedBackground: Element? { get }<\/Declaration><CommentParts><Abstract><Para>Optional. Create and return the Blueprint element used to represent the background of the content when it is pressed. You usually provide this method alongside <codeVoice>background<\/codeVoice>, if your header has an <codeVoice>onTap<\/codeVoice> handler.<\/Para><\/Abstract><Discussion><rawHTML><![CDATA[<h2>]]><\/rawHTML>Note<rawHTML><![CDATA[<\/h2>]]><\/rawHTML><Para>The default implementation of this method returns nil, and provides no selected background.<\/Para><Note><Para>This documentation comment was inherited from <codeVoice>BlueprintHeaderFooterContent<\/codeVoice>.<\/Para><\/Note><\/Discussion><\/CommentParts><\/Other>",
            "key.doc.line" : 90,
            "key.doc.name" : "pressedBackground",
            "key.doc.type" : "Other",
            "key.filepath" : "\/Users\/k\/Desktop\/Development\/Listable1\/BlueprintUILists\/Sources\/BlueprintHeaderFooterContent.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>pressedBackground<\/decl.name>: <decl.var.type><ref.protocol usr=\"s:11BlueprintUI7ElementP\">Element<\/ref.protocol>?<\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 52,
            "key.name" : "pressedBackground",
            "key.namelength" : 17,
            "key.nameoffset" : 3398,
            "key.offset" : 3394,
            "key.parsed_declaration" : "var pressedBackground : Element?",
            "key.parsed_scope.end" : 106,
            "key.parsed_scope.start" : 104,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:16BlueprintUILists0A19HeaderFooterContentP17pressedBackground0A2UI7Element_pSgvp\">pressedBackground<\/RelatedName>"
              }
            ],
            "key.typename" : "Element?",
            "key.typeusr" : "$s11BlueprintUI7Element_pSgD",
            "key.usr" : "s:16BlueprintUILists0A19HeaderFooterContentP17pressedBackground0A2UI7Element_pSgvp"
          },
          {
            "key.kind" : "source.lang.swift.syntaxtype.comment.mark",
            "key.length" : 25,
            "key.name" : "MARK: HeaderFooterContent",
            "key.namelength" : 0,
            "key.nameoffset" : 0,
            "key.offset" : 3466
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>func apply(to views: <Type usr=\"s:10ListableUI24HeaderFooterContentViewsV\">HeaderFooterContentViews<\/Type>&lt;<Type usr=\"s:16BlueprintUILists0A19HeaderFooterContentPAAE4Selfxmfp\">Self<\/Type>&gt;, for reason: <Type usr=\"s:10ListableUI11ApplyReasonO\">ApplyReason<\/Type>, with info: <Type usr=\"s:10ListableUI28ApplyHeaderFooterContentInfoV\">ApplyHeaderFooterContentInfo<\/Type>)<\/Declaration>",
            "key.bodylength" : 815,
            "key.bodyoffset" : 3658,
            "key.filepath" : "\/Users\/k\/Desktop\/Development\/Listable1\/BlueprintUILists\/Sources\/BlueprintHeaderFooterContent.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>apply<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>to<\/decl.var.parameter.argument_label> <decl.var.parameter.name>views<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:10ListableUI24HeaderFooterContentViewsV\">HeaderFooterContentViews<\/ref.struct>&lt;<ref.generic_type_param usr=\"s:16BlueprintUILists0A19HeaderFooterContentPAAE4Selfxmfp\">Self<\/ref.generic_type_param>&gt;<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>for<\/decl.var.parameter.argument_label> <decl.var.parameter.name>reason<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.enum usr=\"s:10ListableUI11ApplyReasonO\">ApplyReason<\/ref.enum><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>with<\/decl.var.parameter.argument_label> <decl.var.parameter.name>info<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:10ListableUI28ApplyHeaderFooterContentInfoV\">ApplyHeaderFooterContentInfo<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 966,
            "key.name" : "apply(to:for:with:)",
            "key.namelength" : 143,
            "key.nameoffset" : 3513,
            "key.offset" : 3508,
            "key.parsed_declaration" : "func apply(\n    to views: HeaderFooterContentViews<Self>,\n    for reason: ApplyReason,\n    with info: ApplyHeaderFooterContentInfo\n)",
            "key.parsed_scope.end" : 129,
            "key.parsed_scope.start" : 112,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:10ListableUI19HeaderFooterContentP5apply2to3for4withyAA0cdE5ViewsVyxG_AA11ApplyReasonOAA0kcdE4InfoVtF\">apply(to: HeaderFooterContentViews&lt;Self&gt;, for: ApplyReason, with: ApplyHeaderFooterContentInfo)<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "<Self where Self : BlueprintHeaderFooterContent> (Self) -> (HeaderFooterContentViews<Self>, ApplyReason, ApplyHeaderFooterContentInfo) -> ()",
            "key.typeusr" : "$s2to3for4withy10ListableUI24HeaderFooterContentViewsVyxG_AD11ApplyReasonOAD0jfgH4InfoVtcD",
            "key.usr" : "s:16BlueprintUILists0A19HeaderFooterContentPAAE5apply2to3for4withy10ListableUI0cdE5ViewsVyxG_AH11ApplyReasonOAH0mcdE4InfoVtF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>static func createReusableContentView(frame: <Type usr=\"c:@S@CGRect\">CGRect<\/Type>) -&gt; <Type usr=\"s:10ListableUI19HeaderFooterContentP0E4ViewQa\">ContentView<\/Type><\/Declaration>",
            "key.bodylength" : 48,
            "key.bodyoffset" : 4553,
            "key.doc.column" : 17,
            "key.doc.comment" : "`BlueprintView` does not update its content until the next layout cycle.\nForce that layout cycle within this method if we're updating an already on-screen\n`ItemContent`, to ensure that we inherit any animation blocks we may be within.",
            "key.doc.declaration" : "static func createReusableContentView(frame: CGRect) -> Self.ContentView",
            "key.doc.discussion" : [
              {
                "Para" : "Do not do configuration in this method that will be changed by your view’s theme or appearance – instead do that work in `apply(to:)`, so the appearance will be updated if the appearance of content changes."
              },
              {
                "Note" : ""
              }
            ],
            "key.doc.file" : "\/Users\/k\/Desktop\/Development\/Listable1\/ListableUI\/Sources\/HeaderFooter\/HeaderFooterContent.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/k\/Desktop\/Development\/Listable1\/ListableUI\/Sources\/HeaderFooter\/HeaderFooterContent.swift\" line=\"78\" column=\"17\"><Name>createReusableContentView(frame:)<\/Name><USR>s:10ListableUI19HeaderFooterContentP014createReusableE4View5frame0eH0QzSo6CGRectV_tFZ<\/USR><Declaration>static func createReusableContentView(frame: CGRect) -&gt; Self.ContentView<\/Declaration><CommentParts><Abstract><Para>Create and return a new content view used to render the content.<\/Para><\/Abstract><Discussion><rawHTML><![CDATA[<h2>]]><\/rawHTML>Note<rawHTML><![CDATA[<\/h2>]]><\/rawHTML><Para>Do not do configuration in this method that will be changed by your view’s theme or appearance – instead do that work in <codeVoice>apply(to:)<\/codeVoice>, so the appearance will be updated if the appearance of content changes.<\/Para><Note><Para>This documentation comment was inherited from <codeVoice>HeaderFooterContent<\/codeVoice>.<\/Para><\/Note><\/Discussion><\/CommentParts><\/Function>",
            "key.doc.line" : 78,
            "key.doc.name" : "createReusableContentView(frame:)",
            "key.doc.type" : "Function",
            "key.filepath" : "\/Users\/k\/Desktop\/Development\/Listable1\/BlueprintUILists\/Sources\/BlueprintHeaderFooterContent.swift",
            "key.fully_annotated_decl" : "<decl.function.method.static><syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>createReusableContentView<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>frame<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"c:@S@CGRect\">CGRect<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.associatedtype usr=\"s:10ListableUI19HeaderFooterContentP0E4ViewQa\">ContentView<\/ref.associatedtype><\/decl.function.returntype><\/decl.function.method.static>",
            "key.kind" : "source.lang.swift.decl.function.method.static",
            "key.length" : 118,
            "key.name" : "createReusableContentView(frame:)",
            "key.namelength" : 40,
            "key.nameoffset" : 4496,
            "key.offset" : 4484,
            "key.parsed_declaration" : "static func createReusableContentView(frame: CGRect) -> ContentView",
            "key.parsed_scope.end" : 133,
            "key.parsed_scope.start" : 131,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:10ListableUI19HeaderFooterContentP014createReusableE4View5frame0eH0QzSo6CGRectV_tFZ\">createReusableContentView(frame: CGRect) -&gt; Self.ContentView<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "<Self where Self : BlueprintHeaderFooterContent> (Self.Type) -> (CGRect) -> Self.ContentView",
            "key.typeusr" : "$s5frame11BlueprintUI0B4ViewCSo6CGRectV_tcD",
            "key.usr" : "s:10ListableUI19HeaderFooterContentP014createReusableE4View5frame0eH0QzSo6CGRectV_tFZ"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>static func createReusableBackgroundView(frame: <Type usr=\"c:@S@CGRect\">CGRect<\/Type>) -&gt; <Type usr=\"s:10ListableUI19HeaderFooterContentP14BackgroundViewQa\">BackgroundView<\/Type><\/Declaration>",
            "key.bodylength" : 48,
            "key.bodyoffset" : 4687,
            "key.doc.column" : 17,
            "key.doc.declaration" : "static func createReusableBackgroundView(frame: CGRect) -> Self.BackgroundView",
            "key.doc.discussion" : [
              {
                "Para" : "Do not do configuration in this method that will be changed by your view’s theme or appearance – instead do that work in `apply(to:)`, so the appearance will be updated if the appearance of content changes."
              },
              {
                "Note" : ""
              }
            ],
            "key.doc.file" : "\/Users\/k\/Desktop\/Development\/Listable1\/ListableUI\/Sources\/HeaderFooter\/HeaderFooterContent.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/k\/Desktop\/Development\/Listable1\/ListableUI\/Sources\/HeaderFooter\/HeaderFooterContent.swift\" line=\"101\" column=\"17\"><Name>createReusableBackgroundView(frame:)<\/Name><USR>s:10ListableUI19HeaderFooterContentP28createReusableBackgroundView5frame0hI0QzSo6CGRectV_tFZ<\/USR><Declaration>static func createReusableBackgroundView(frame: CGRect) -&gt; Self.BackgroundView<\/Declaration><CommentParts><Abstract><Para>Create and return a new background view used to render the content’s background.<\/Para><\/Abstract><Discussion><rawHTML><![CDATA[<h2>]]><\/rawHTML>Note<rawHTML><![CDATA[<\/h2>]]><\/rawHTML><Para>Do not do configuration in this method that will be changed by your view’s theme or appearance – instead do that work in <codeVoice>apply(to:)<\/codeVoice>, so the appearance will be updated if the appearance of content changes.<\/Para><Note><Para>This documentation comment was inherited from <codeVoice>HeaderFooterContent<\/codeVoice>.<\/Para><\/Note><\/Discussion><\/CommentParts><\/Function>",
            "key.doc.line" : 101,
            "key.doc.name" : "createReusableBackgroundView(frame:)",
            "key.doc.type" : "Function",
            "key.filepath" : "\/Users\/k\/Desktop\/Development\/Listable1\/BlueprintUILists\/Sources\/BlueprintHeaderFooterContent.swift",
            "key.fully_annotated_decl" : "<decl.function.method.static><syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>createReusableBackgroundView<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>frame<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"c:@S@CGRect\">CGRect<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.associatedtype usr=\"s:10ListableUI19HeaderFooterContentP14BackgroundViewQa\">BackgroundView<\/ref.associatedtype><\/decl.function.returntype><\/decl.function.method.static>",
            "key.kind" : "source.lang.swift.decl.function.method.static",
            "key.length" : 124,
            "key.name" : "createReusableBackgroundView(frame:)",
            "key.namelength" : 43,
            "key.nameoffset" : 4624,
            "key.offset" : 4612,
            "key.parsed_declaration" : "static func createReusableBackgroundView(frame: CGRect) -> BackgroundView",
            "key.parsed_scope.end" : 137,
            "key.parsed_scope.start" : 135,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:10ListableUI19HeaderFooterContentP28createReusableBackgroundView5frame0hI0QzSo6CGRectV_tFZ\">createReusableBackgroundView(frame: CGRect) -&gt; Self.BackgroundView<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:10ListableUI19HeaderFooterContentPAASo6UIViewC14BackgroundViewRtzrlE014createReusablegH05frameAESo6CGRectV_tFZ\">createReusableBackgroundView(frame: CGRect) -&gt; Self.BackgroundView<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "<Self where Self : BlueprintHeaderFooterContent> (Self.Type) -> (CGRect) -> Self.BackgroundView",
            "key.typeusr" : "$s5frame11BlueprintUI0B4ViewCSo6CGRectV_tcD",
            "key.usr" : "s:10ListableUI19HeaderFooterContentP28createReusableBackgroundView5frame0hI0QzSo6CGRectV_tFZ"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>static func createReusablePressedBackgroundView(frame: <Type usr=\"c:@S@CGRect\">CGRect<\/Type>) -&gt; <Type usr=\"s:10ListableUI19HeaderFooterContentP21PressedBackgroundViewQa\">PressedBackgroundView<\/Type><\/Declaration>",
            "key.bodylength" : 48,
            "key.bodyoffset" : 4835,
            "key.doc.column" : 17,
            "key.doc.declaration" : "static func createReusablePressedBackgroundView(frame: CGRect) -> Self.PressedBackgroundView",
            "key.doc.discussion" : [
              {
                "Para" : "This view is displayed when the user taps\/presses the header \/ footer."
              },
              {
                "Para" : "If your `BackgroundView` and `SelectedBackgroundView` are the same type, this method is provided automatically by calling `createReusableBackgroundView`."
              },
              {
                "Para" : "Do not do configuration in this method that will be changed by your view’s theme or appearance – instead do that work in `apply(to:)`, so the appearance will be updated if the appearance of content changes."
              },
              {
                "Note" : ""
              }
            ],
            "key.doc.file" : "\/Users\/k\/Desktop\/Development\/Listable1\/ListableUI\/Sources\/HeaderFooter\/HeaderFooterContent.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/k\/Desktop\/Development\/Listable1\/ListableUI\/Sources\/HeaderFooter\/HeaderFooterContent.swift\" line=\"125\" column=\"17\"><Name>createReusablePressedBackgroundView(frame:)<\/Name><USR>s:10ListableUI19HeaderFooterContentP35createReusablePressedBackgroundView5frame0hiJ0QzSo6CGRectV_tFZ<\/USR><Declaration>static func createReusablePressedBackgroundView(frame: CGRect) -&gt; Self.PressedBackgroundView<\/Declaration><CommentParts><Abstract><Para>Create and return a new background view used to render the content’s pressed background.<\/Para><\/Abstract><Discussion><Para>This view is displayed when the user taps\/presses the header \/ footer.<\/Para><Para>If your <codeVoice>BackgroundView<\/codeVoice> and <codeVoice>SelectedBackgroundView<\/codeVoice> are the same type, this method is provided automatically by calling <codeVoice>createReusableBackgroundView<\/codeVoice>.<\/Para><rawHTML><![CDATA[<h2>]]><\/rawHTML>Note<rawHTML><![CDATA[<\/h2>]]><\/rawHTML><Para>Do not do configuration in this method that will be changed by your view’s theme or appearance – instead do that work in <codeVoice>apply(to:)<\/codeVoice>, so the appearance will be updated if the appearance of content changes.<\/Para><Note><Para>This documentation comment was inherited from <codeVoice>HeaderFooterContent<\/codeVoice>.<\/Para><\/Note><\/Discussion><\/CommentParts><\/Function>",
            "key.doc.line" : 125,
            "key.doc.name" : "createReusablePressedBackgroundView(frame:)",
            "key.doc.type" : "Function",
            "key.filepath" : "\/Users\/k\/Desktop\/Development\/Listable1\/BlueprintUILists\/Sources\/BlueprintHeaderFooterContent.swift",
            "key.fully_annotated_decl" : "<decl.function.method.static><syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>createReusablePressedBackgroundView<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>frame<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"c:@S@CGRect\">CGRect<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.associatedtype usr=\"s:10ListableUI19HeaderFooterContentP21PressedBackgroundViewQa\">PressedBackgroundView<\/ref.associatedtype><\/decl.function.returntype><\/decl.function.method.static>",
            "key.kind" : "source.lang.swift.decl.function.method.static",
            "key.length" : 138,
            "key.name" : "createReusablePressedBackgroundView(frame:)",
            "key.namelength" : 50,
            "key.nameoffset" : 4758,
            "key.offset" : 4746,
            "key.parsed_declaration" : "static func createReusablePressedBackgroundView(frame: CGRect) -> PressedBackgroundView",
            "key.parsed_scope.end" : 141,
            "key.parsed_scope.start" : 139,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:10ListableUI19HeaderFooterContentP35createReusablePressedBackgroundView5frame0hiJ0QzSo6CGRectV_tFZ\">createReusablePressedBackgroundView(frame: CGRect) -&gt; Self.PressedBackgroundView<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:10ListableUI19HeaderFooterContentPAASo6UIViewC21PressedBackgroundViewRtzrlE014createReusableghI05frameAESo6CGRectV_tFZ\">createReusablePressedBackgroundView(frame: CGRect) -&gt; Self.PressedBackgroundView<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "<Self where Self : BlueprintHeaderFooterContent> (Self.Type) -> (CGRect) -> Self.PressedBackgroundView",
            "key.typeusr" : "$s5frame11BlueprintUI0B4ViewCSo6CGRectV_tcD",
            "key.usr" : "s:10ListableUI19HeaderFooterContentP35createReusablePressedBackgroundView5frame0hiJ0QzSo6CGRectV_tFZ"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.annotated_decl" : "<Declaration>private static func newBlueprintView(with frame: <Type usr=\"c:@S@CGRect\">CGRect<\/Type>) -&gt; <Type usr=\"c:@M@BlueprintUI@objc(cs)BlueprintView\">BlueprintView<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.private",
                "key.length" : 7,
                "key.offset" : 4894
              }
            ],
            "key.bodylength" : 119,
            "key.bodyoffset" : 4970,
            "key.filepath" : "\/Users\/k\/Desktop\/Development\/Listable1\/BlueprintUILists\/Sources\/BlueprintHeaderFooterContent.swift",
            "key.fully_annotated_decl" : "<decl.function.method.static><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>newBlueprintView<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>with<\/decl.var.parameter.argument_label> <decl.var.parameter.name>frame<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"c:@S@CGRect\">CGRect<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"c:@M@BlueprintUI@objc(cs)BlueprintView\">BlueprintView<\/ref.class><\/decl.function.returntype><\/decl.function.method.static>",
            "key.kind" : "source.lang.swift.decl.function.method.static",
            "key.length" : 188,
            "key.name" : "newBlueprintView(with:)",
            "key.namelength" : 37,
            "key.nameoffset" : 4914,
            "key.offset" : 4902,
            "key.parsed_declaration" : "private static func newBlueprintView(with frame : CGRect) -> BlueprintView",
            "key.parsed_scope.end" : 148,
            "key.parsed_scope.start" : 143,
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>let view: <Type usr=\"c:@M@BlueprintUI@objc(cs)BlueprintView\">BlueprintView<\/Type><\/Declaration>",
                "key.filepath" : "\/Users\/k\/Desktop\/Development\/Listable1\/BlueprintUILists\/Sources\/BlueprintHeaderFooterContent.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>view<\/decl.name>: <decl.var.type><ref.class usr=\"c:@M@BlueprintUI@objc(cs)BlueprintView\">BlueprintView<\/ref.class><\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 38,
                "key.name" : "view",
                "key.namelength" : 4,
                "key.nameoffset" : 4983,
                "key.offset" : 4979,
                "key.parsed_declaration" : "let view = BlueprintView(frame: frame)",
                "key.parsed_scope.end" : 144,
                "key.parsed_scope.start" : 144,
                "key.typename" : "BlueprintView",
                "key.typeusr" : "$s11BlueprintUI0A4ViewCD",
                "key.usr" : "s:16BlueprintUILists0A19HeaderFooterContentPAAE03newA4View33_02A79BC97C366F3BDEC29D56D447731DLL4with0A2UI0aG0CSo6CGRectV_tFZ4viewL_AIvp"
              }
            ],
            "key.typename" : "<Self where Self : BlueprintHeaderFooterContent> (Self.Type) -> (CGRect) -> BlueprintView",
            "key.typeusr" : "$s4with11BlueprintUI0B4ViewCSo6CGRectV_tcD",
            "key.usr" : "s:16BlueprintUILists0A19HeaderFooterContentPAAE03newA4View33_02A79BC97C366F3BDEC29D56D447731DLL4with0A2UI0aG0CSo6CGRectV_tFZ"
          }
        ],
        "key.typename" : "BlueprintHeaderFooterContent.Protocol",
        "key.typeusr" : "$s16BlueprintUILists0A19HeaderFooterContent_pmD",
        "key.usr" : "s:16BlueprintUILists0A19HeaderFooterContentP"
      }
    ]
  }
}, {
  "\/Users\/k\/Desktop\/Development\/Listable1\/BlueprintUILists\/Sources\/BlueprintItemContent.swift" : {
    "key.diagnostic_stage" : "source.diagnostic.stage.swift.parse",
    "key.length" : 5954,
    "key.offset" : 0,
    "key.substructure" : [
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public protocol BlueprintItemContent : <Type usr=\"s:10ListableUI11ItemContentP\">ItemContent<\/Type> where <Type usr=\"s:16BlueprintUILists0A11ItemContentP4Selfxmfp\">Self<\/Type>.BackgroundView == <Type usr=\"c:@M@BlueprintUI@objc(cs)BlueprintView\">BlueprintView<\/Type>, <Type usr=\"s:16BlueprintUILists0A11ItemContentP4Selfxmfp\">Self<\/Type>.ContentView == <Type usr=\"c:@M@BlueprintUI@objc(cs)BlueprintView\">BlueprintView<\/Type>, <Type usr=\"s:16BlueprintUILists0A11ItemContentP4Selfxmfp\">Self<\/Type>.SelectedBackgroundView == <Type usr=\"c:@M@BlueprintUI@objc(cs)BlueprintView\">BlueprintView<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 1770
          }
        ],
        "key.bodylength" : 1635,
        "key.bodyoffset" : 1947,
        "key.doc.column" : 17,
        "key.doc.comment" : "\nAn `ItemContent` specialized for use with Blueprint. Instead of providing\ncustom views from `createReusable{...}View`, and then updating them in `apply(to:)`,\nyou instead provide Blueprint elements, and `Listable` handles mapping this to an underlying `BlueprintView`.\n\nA `BlueprintItemContent` that displays text might look like this:\n```\nstruct MyItemContent : BlueprintItemContent, Equatable\n{\n    var text : String\n\n    var identifier: Identifier<MyItemContent> {\n        return .init(self.text)\n    }\n\n    func element(with info : ApplyItemContentInfo) -> Element\n    {\n        Label(text: self.text) {\n            $0.font = .systemFont(ofSize: 16.0, weight: .medium)\n            $0.color = info.state.isActive ? .white : .darkGray\n        }\n        .inset(horizontal: 15.0, vertical: 10.0)\n    }\n\n    func backgroundElement(with info: ApplyItemContentInfo) -> Element?\n    {\n        Box(backgroundColor: .white)\n    }\n\n    func selectedBackgroundElement(with info: ApplyItemContentInfo) -> Element?\n    {\n        Box(backgroundColor: .white(0.2))\n    }\n}\n```\nWhich uses the `backgroundElement` and `selectedBackgroundElement` methods\nto provide rendering of a background for the item, which will respond to its selection state.\n\nThe ordering of the elements by z-index is as follows:\nz-index 3) `element`\nz-index 2) `selectedBackgroundElement` (Only if the item supports a `selectionStyle` and is selected or highlighted.)\nz-index 1) `backgroundElement`",
        "key.doc.declaration" : "public protocol BlueprintItemContent : ListableUI.ItemContent where Self.BackgroundView == BlueprintUI.BlueprintView, Self.ContentView == BlueprintUI.BlueprintView, Self.SelectedBackgroundView == BlueprintUI.BlueprintView",
        "key.doc.discussion" : [
          {
            "Para" : "A `BlueprintItemContent` that displays text might look like this:"
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "Which uses the `backgroundElement` and `selectedBackgroundElement` methods to provide rendering of a background for the item, which will respond to its selection state."
          },
          {
            "Para" : "The ordering of the elements by z-index is as follows: z-index 3) `element` z-index 2) `selectedBackgroundElement` (Only if the item supports a `selectionStyle` and is selected or highlighted.) z-index 1) `backgroundElement`"
          }
        ],
        "key.doc.file" : "\/Users\/k\/Desktop\/Development\/Listable1\/BlueprintUILists\/Sources\/BlueprintItemContent.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/k\/Desktop\/Development\/Listable1\/BlueprintUILists\/Sources\/BlueprintItemContent.swift\" line=\"55\" column=\"17\"><Name>BlueprintItemContent<\/Name><USR>s:16BlueprintUILists0A11ItemContentP<\/USR><Declaration>public protocol BlueprintItemContent : ListableUI.ItemContent where Self.BackgroundView == BlueprintUI.BlueprintView, Self.ContentView == BlueprintUI.BlueprintView, Self.SelectedBackgroundView == BlueprintUI.BlueprintView<\/Declaration><CommentParts><Abstract><Para>An <codeVoice>ItemContent<\/codeVoice> specialized for use with Blueprint. Instead of providing custom views from <codeVoice>createReusable{...}View<\/codeVoice>, and then updating them in <codeVoice>apply(to:)<\/codeVoice>, you instead provide Blueprint elements, and <codeVoice>Listable<\/codeVoice> handles mapping this to an underlying <codeVoice>BlueprintView<\/codeVoice>.<\/Para><\/Abstract><Discussion><Para>A <codeVoice>BlueprintItemContent<\/codeVoice> that displays text might look like this:<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[struct MyItemContent : BlueprintItemContent, Equatable]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[{]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    var text : String]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    var identifier: Identifier<MyItemContent> {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[        return .init(self.text)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    }]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    func element(with info : ApplyItemContentInfo) -> Element]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[        Label(text: self.text) {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[            $0.font = .systemFont(ofSize: 16.0, weight: .medium)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[            $0.color = info.state.isActive ? .white : .darkGray]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[        }]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[        .inset(horizontal: 15.0, vertical: 10.0)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    }]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    func backgroundElement(with info: ApplyItemContentInfo) -> Element?]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[        Box(backgroundColor: .white)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    }]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    func selectedBackgroundElement(with info: ApplyItemContentInfo) -> Element?]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[        Box(backgroundColor: .white(0.2))]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    }]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>Which uses the <codeVoice>backgroundElement<\/codeVoice> and <codeVoice>selectedBackgroundElement<\/codeVoice> methods to provide rendering of a background for the item, which will respond to its selection state.<\/Para><Para>The ordering of the elements by z-index is as follows: z-index 3) <codeVoice>element<\/codeVoice> z-index 2) <codeVoice>selectedBackgroundElement<\/codeVoice> (Only if the item supports a <codeVoice>selectionStyle<\/codeVoice> and is selected or highlighted.) z-index 1) <codeVoice>backgroundElement<\/codeVoice><\/Para><\/Discussion><\/CommentParts><\/Class>",
        "key.doc.line" : 55,
        "key.doc.name" : "BlueprintItemContent",
        "key.doc.type" : "Class",
        "key.doclength" : 1626,
        "key.docoffset" : 144,
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 11,
            "key.offset" : 1809
          }
        ],
        "key.filepath" : "\/Users\/k\/Desktop\/Development\/Listable1\/BlueprintUILists\/Sources\/BlueprintItemContent.swift",
        "key.fully_annotated_decl" : "<decl.protocol><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>protocol<\/syntaxtype.keyword> <decl.name>BlueprintItemContent<\/decl.name> : <ref.protocol usr=\"s:10ListableUI11ItemContentP\">ItemContent<\/ref.protocol> <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement><ref.generic_type_param usr=\"s:16BlueprintUILists0A11ItemContentP4Selfxmfp\">Self<\/ref.generic_type_param>.BackgroundView == <ref.class usr=\"c:@M@BlueprintUI@objc(cs)BlueprintView\">BlueprintView<\/ref.class><\/decl.generic_type_requirement>, <decl.generic_type_requirement><ref.generic_type_param usr=\"s:16BlueprintUILists0A11ItemContentP4Selfxmfp\">Self<\/ref.generic_type_param>.ContentView == <ref.class usr=\"c:@M@BlueprintUI@objc(cs)BlueprintView\">BlueprintView<\/ref.class><\/decl.generic_type_requirement>, <decl.generic_type_requirement><ref.generic_type_param usr=\"s:16BlueprintUILists0A11ItemContentP4Selfxmfp\">Self<\/ref.generic_type_param>.SelectedBackgroundView == <ref.class usr=\"c:@M@BlueprintUI@objc(cs)BlueprintView\">BlueprintView<\/ref.class><\/decl.generic_type_requirement><\/decl.protocol>",
        "key.inheritedtypes" : [
          {
            "key.name" : "ItemContent"
          }
        ],
        "key.kind" : "source.lang.swift.decl.protocol",
        "key.length" : 1806,
        "key.name" : "BlueprintItemContent",
        "key.namelength" : 20,
        "key.nameoffset" : 1786,
        "key.offset" : 1777,
        "key.parsed_declaration" : "public protocol BlueprintItemContent : ItemContent\n    where\n    ContentView == BlueprintView,\n    BackgroundView == BlueprintView,\n    SelectedBackgroundView == BlueprintView",
        "key.parsed_scope.end" : 96,
        "key.parsed_scope.start" : 55,
        "key.substructure" : [
          {
            "key.kind" : "source.lang.swift.syntaxtype.comment.mark",
            "key.length" : 48,
            "key.name" : "MARK: Creating Blueprint Element Representations",
            "key.namelength" : 0,
            "key.nameoffset" : 0,
            "key.offset" : 1962
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>func element(with info: <Type usr=\"s:10ListableUI20ApplyItemContentInfoV\">ApplyItemContentInfo<\/Type>) -&gt; <Type usr=\"s:11BlueprintUI7ElementP\">Element<\/Type><\/Declaration>",
            "key.doc.column" : 10,
            "key.doc.comment" : "Required. Create and return the Blueprint element used to represent the content.\n\nYou can use the provided `ApplyItemContentInfo` to vary the appearance of the element\nbased on the current state of the item.",
            "key.doc.declaration" : "func element(with info: ApplyItemContentInfo) -> Element",
            "key.doc.discussion" : [
              {
                "Para" : "You can use the provided `ApplyItemContentInfo` to vary the appearance of the element based on the current state of the item."
              }
            ],
            "key.doc.file" : "\/Users\/k\/Desktop\/Development\/Listable1\/BlueprintUILists\/Sources\/BlueprintItemContent.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/k\/Desktop\/Development\/Listable1\/BlueprintUILists\/Sources\/BlueprintItemContent.swift\" line=\"70\" column=\"10\"><Name>element(with:)<\/Name><USR>s:16BlueprintUILists0A11ItemContentP7element4with0A2UI7Element_p08ListableG005ApplycD4InfoV_tF<\/USR><Declaration>func element(with info: ApplyItemContentInfo) -&gt; Element<\/Declaration><CommentParts><Abstract><Para>Required. Create and return the Blueprint element used to represent the content.<\/Para><\/Abstract><Discussion><Para>You can use the provided <codeVoice>ApplyItemContentInfo<\/codeVoice> to vary the appearance of the element based on the current state of the item.<\/Para><\/Discussion><\/CommentParts><\/Function>",
            "key.doc.line" : 70,
            "key.doc.name" : "element(with:)",
            "key.doc.type" : "Function",
            "key.doclength" : 243,
            "key.docoffset" : 2027,
            "key.filepath" : "\/Users\/k\/Desktop\/Development\/Listable1\/BlueprintUILists\/Sources\/BlueprintItemContent.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>element<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>with<\/decl.var.parameter.argument_label> <decl.var.parameter.name>info<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:10ListableUI20ApplyItemContentInfoV\">ApplyItemContentInfo<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.protocol usr=\"s:11BlueprintUI7ElementP\">Element<\/ref.protocol><\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 57,
            "key.name" : "element(with:)",
            "key.namelength" : 41,
            "key.nameoffset" : 2279,
            "key.offset" : 2274,
            "key.parsed_declaration" : "func element(with info : ApplyItemContentInfo) -> Element",
            "key.parsed_scope.end" : 70,
            "key.parsed_scope.start" : 70,
            "key.substructure" : [

            ],
            "key.typename" : "<Self where Self : BlueprintItemContent> (Self) -> (ApplyItemContentInfo) -> Element",
            "key.typeusr" : "$s4with11BlueprintUI7Element_p08ListableC020ApplyItemContentInfoV_tcD",
            "key.usr" : "s:16BlueprintUILists0A11ItemContentP7element4with0A2UI7Element_p08ListableG005ApplycD4InfoV_tF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>func backgroundElement(with info: <Type usr=\"s:10ListableUI20ApplyItemContentInfoV\">ApplyItemContentInfo<\/Type>) -&gt; <Type usr=\"s:11BlueprintUI7ElementP\">Element<\/Type>?<\/Declaration>",
            "key.doc.column" : 10,
            "key.doc.comment" : "Optional. Create and return the Blueprint element used to represent the background of the content.\nYou usually provide this method alongside `selectedBackgroundElement`, if your content\nsupports selection or highlighting.\n\nYou can use the provided `ApplyItemContentInfo` to vary the appearance of the element\nbased on the current state of the item.\n\nNote\n----\nThe default implementation of this method returns nil, and provides no background.",
            "key.doc.declaration" : "func backgroundElement(with info: ApplyItemContentInfo) -> Element?",
            "key.doc.discussion" : [
              {
                "Para" : "You can use the provided `ApplyItemContentInfo` to vary the appearance of the element based on the current state of the item."
              },
              {
                "Para" : "The default implementation of this method returns nil, and provides no background."
              }
            ],
            "key.doc.file" : "\/Users\/k\/Desktop\/Development\/Listable1\/BlueprintUILists\/Sources\/BlueprintItemContent.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/k\/Desktop\/Development\/Listable1\/BlueprintUILists\/Sources\/BlueprintItemContent.swift\" line=\"83\" column=\"10\"><Name>backgroundElement(with:)<\/Name><USR>s:16BlueprintUILists0A11ItemContentP17backgroundElement4with0A2UI0F0_pSg08ListableH005ApplycD4InfoV_tF<\/USR><Declaration>func backgroundElement(with info: ApplyItemContentInfo) -&gt; Element?<\/Declaration><CommentParts><Abstract><Para>Optional. Create and return the Blueprint element used to represent the background of the content. You usually provide this method alongside <codeVoice>selectedBackgroundElement<\/codeVoice>, if your content supports selection or highlighting.<\/Para><\/Abstract><Discussion><Para>You can use the provided <codeVoice>ApplyItemContentInfo<\/codeVoice> to vary the appearance of the element based on the current state of the item.<\/Para><rawHTML><![CDATA[<h2>]]><\/rawHTML>Note<rawHTML><![CDATA[<\/h2>]]><\/rawHTML><Para>The default implementation of this method returns nil, and provides no background.<\/Para><\/Discussion><\/CommentParts><\/Function>",
            "key.doc.line" : 83,
            "key.doc.name" : "backgroundElement(with:)",
            "key.doc.type" : "Function",
            "key.doclength" : 525,
            "key.docoffset" : 2341,
            "key.filepath" : "\/Users\/k\/Desktop\/Development\/Listable1\/BlueprintUILists\/Sources\/BlueprintItemContent.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>backgroundElement<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>with<\/decl.var.parameter.argument_label> <decl.var.parameter.name>info<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:10ListableUI20ApplyItemContentInfoV\">ApplyItemContentInfo<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.protocol usr=\"s:11BlueprintUI7ElementP\">Element<\/ref.protocol>?<\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 68,
            "key.name" : "backgroundElement(with:)",
            "key.namelength" : 51,
            "key.nameoffset" : 2875,
            "key.offset" : 2870,
            "key.parsed_declaration" : "func backgroundElement(with info : ApplyItemContentInfo) -> Element?",
            "key.parsed_scope.end" : 83,
            "key.parsed_scope.start" : 83,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:16BlueprintUILists0A11ItemContentPAAE17backgroundElement4with0A2UI0F0_pSg08ListableH005ApplycD4InfoV_tF\">backgroundElement(with: ApplyItemContentInfo) -&gt; Element?<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "<Self where Self : BlueprintItemContent> (Self) -> (ApplyItemContentInfo) -> Element?",
            "key.typeusr" : "$s4with11BlueprintUI7Element_pSg08ListableC020ApplyItemContentInfoV_tcD",
            "key.usr" : "s:16BlueprintUILists0A11ItemContentP17backgroundElement4with0A2UI0F0_pSg08ListableH005ApplycD4InfoV_tF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>func selectedBackgroundElement(with info: <Type usr=\"s:10ListableUI20ApplyItemContentInfoV\">ApplyItemContentInfo<\/Type>) -&gt; <Type usr=\"s:11BlueprintUI7ElementP\">Element<\/Type>?<\/Declaration>",
            "key.doc.column" : 10,
            "key.doc.comment" : "Optional. Create and return the Blueprint element used to represent the background of the content when it is selected or highlighted.\nYou usually provide this method alongside `backgroundElement`, if your content supports selection or highlighting.\n\nYou can use the provided `ApplyItemContentInfo` to vary the appearance of the element\nbased on the current state of the item.\n\nNote\n----\nThe default implementation of this method returns nil, and provides no selected background.",
            "key.doc.declaration" : "func selectedBackgroundElement(with info: ApplyItemContentInfo) -> Element?",
            "key.doc.discussion" : [
              {
                "Para" : "You can use the provided `ApplyItemContentInfo` to vary the appearance of the element based on the current state of the item."
              },
              {
                "Para" : "The default implementation of this method returns nil, and provides no selected background."
              }
            ],
            "key.doc.file" : "\/Users\/k\/Desktop\/Development\/Listable1\/BlueprintUILists\/Sources\/BlueprintItemContent.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/k\/Desktop\/Development\/Listable1\/BlueprintUILists\/Sources\/BlueprintItemContent.swift\" line=\"95\" column=\"10\"><Name>selectedBackgroundElement(with:)<\/Name><USR>s:16BlueprintUILists0A11ItemContentP25selectedBackgroundElement4with0A2UI0G0_pSg08ListableI005ApplycD4InfoV_tF<\/USR><Declaration>func selectedBackgroundElement(with info: ApplyItemContentInfo) -&gt; Element?<\/Declaration><CommentParts><Abstract><Para>Optional. Create and return the Blueprint element used to represent the background of the content when it is selected or highlighted. You usually provide this method alongside <codeVoice>backgroundElement<\/codeVoice>, if your content supports selection or highlighting.<\/Para><\/Abstract><Discussion><Para>You can use the provided <codeVoice>ApplyItemContentInfo<\/codeVoice> to vary the appearance of the element based on the current state of the item.<\/Para><rawHTML><![CDATA[<h2>]]><\/rawHTML>Note<rawHTML><![CDATA[<\/h2>]]><\/rawHTML><Para>The default implementation of this method returns nil, and provides no selected background.<\/Para><\/Discussion><\/CommentParts><\/Function>",
            "key.doc.line" : 95,
            "key.doc.name" : "selectedBackgroundElement(with:)",
            "key.doc.type" : "Function",
            "key.doclength" : 553,
            "key.docoffset" : 2948,
            "key.filepath" : "\/Users\/k\/Desktop\/Development\/Listable1\/BlueprintUILists\/Sources\/BlueprintItemContent.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>selectedBackgroundElement<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>with<\/decl.var.parameter.argument_label> <decl.var.parameter.name>info<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:10ListableUI20ApplyItemContentInfoV\">ApplyItemContentInfo<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.protocol usr=\"s:11BlueprintUI7ElementP\">Element<\/ref.protocol>?<\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 76,
            "key.name" : "selectedBackgroundElement(with:)",
            "key.namelength" : 59,
            "key.nameoffset" : 3510,
            "key.offset" : 3505,
            "key.parsed_declaration" : "func selectedBackgroundElement(with info : ApplyItemContentInfo) -> Element?",
            "key.parsed_scope.end" : 95,
            "key.parsed_scope.start" : 95,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:16BlueprintUILists0A11ItemContentPAAE25selectedBackgroundElement4with0A2UI0G0_pSg08ListableI005ApplycD4InfoV_tF\">selectedBackgroundElement(with: ApplyItemContentInfo) -&gt; Element?<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "<Self where Self : BlueprintItemContent> (Self) -> (ApplyItemContentInfo) -> Element?",
            "key.typeusr" : "$s4with11BlueprintUI7Element_pSg08ListableC020ApplyItemContentInfoV_tcD",
            "key.usr" : "s:16BlueprintUILists0A11ItemContentP25selectedBackgroundElement4with0A2UI0G0_pSg08ListableI005ApplycD4InfoV_tF"
          }
        ],
        "key.typename" : "BlueprintItemContent.Protocol",
        "key.typeusr" : "$s16BlueprintUILists0A11ItemContent_pmD",
        "key.usr" : "s:16BlueprintUILists0A11ItemContentP"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public protocol BlueprintItemContent : <Type usr=\"s:10ListableUI11ItemContentP\">ItemContent<\/Type> where <Type usr=\"s:16BlueprintUILists0A11ItemContentP4Selfxmfp\">Self<\/Type>.BackgroundView == <Type usr=\"c:@M@BlueprintUI@objc(cs)BlueprintView\">BlueprintView<\/Type>, <Type usr=\"s:16BlueprintUILists0A11ItemContentP4Selfxmfp\">Self<\/Type>.ContentView == <Type usr=\"c:@M@BlueprintUI@objc(cs)BlueprintView\">BlueprintView<\/Type>, <Type usr=\"s:16BlueprintUILists0A11ItemContentP4Selfxmfp\">Self<\/Type>.SelectedBackgroundView == <Type usr=\"c:@M@BlueprintUI@objc(cs)BlueprintView\">BlueprintView<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 3586
          }
        ],
        "key.bodylength" : 363,
        "key.bodyoffset" : 3625,
        "key.doc.column" : 17,
        "key.doc.declaration" : "public protocol BlueprintItemContent : ListableUI.ItemContent where Self.BackgroundView == BlueprintUI.BlueprintView, Self.ContentView == BlueprintUI.BlueprintView, Self.SelectedBackgroundView == BlueprintUI.BlueprintView",
        "key.doc.discussion" : [
          {
            "Para" : "A `BlueprintItemContent` that displays text might look like this:"
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "Which uses the `backgroundElement` and `selectedBackgroundElement` methods to provide rendering of a background for the item, which will respond to its selection state."
          },
          {
            "Para" : "The ordering of the elements by z-index is as follows: z-index 3) `element` z-index 2) `selectedBackgroundElement` (Only if the item supports a `selectionStyle` and is selected or highlighted.) z-index 1) `backgroundElement`"
          }
        ],
        "key.doc.file" : "\/Users\/k\/Desktop\/Development\/Listable1\/BlueprintUILists\/Sources\/BlueprintItemContent.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/k\/Desktop\/Development\/Listable1\/BlueprintUILists\/Sources\/BlueprintItemContent.swift\" line=\"55\" column=\"17\"><Name>BlueprintItemContent<\/Name><USR>s:16BlueprintUILists0A11ItemContentP<\/USR><Declaration>public protocol BlueprintItemContent : ListableUI.ItemContent where Self.BackgroundView == BlueprintUI.BlueprintView, Self.ContentView == BlueprintUI.BlueprintView, Self.SelectedBackgroundView == BlueprintUI.BlueprintView<\/Declaration><CommentParts><Abstract><Para>An <codeVoice>ItemContent<\/codeVoice> specialized for use with Blueprint. Instead of providing custom views from <codeVoice>createReusable{...}View<\/codeVoice>, and then updating them in <codeVoice>apply(to:)<\/codeVoice>, you instead provide Blueprint elements, and <codeVoice>Listable<\/codeVoice> handles mapping this to an underlying <codeVoice>BlueprintView<\/codeVoice>.<\/Para><\/Abstract><Discussion><Para>A <codeVoice>BlueprintItemContent<\/codeVoice> that displays text might look like this:<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[struct MyItemContent : BlueprintItemContent, Equatable]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[{]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    var text : String]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    var identifier: Identifier<MyItemContent> {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[        return .init(self.text)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    }]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    func element(with info : ApplyItemContentInfo) -> Element]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[        Label(text: self.text) {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[            $0.font = .systemFont(ofSize: 16.0, weight: .medium)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[            $0.color = info.state.isActive ? .white : .darkGray]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[        }]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[        .inset(horizontal: 15.0, vertical: 10.0)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    }]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    func backgroundElement(with info: ApplyItemContentInfo) -> Element?]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[        Box(backgroundColor: .white)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    }]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    func selectedBackgroundElement(with info: ApplyItemContentInfo) -> Element?]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[        Box(backgroundColor: .white(0.2))]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    }]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>Which uses the <codeVoice>backgroundElement<\/codeVoice> and <codeVoice>selectedBackgroundElement<\/codeVoice> methods to provide rendering of a background for the item, which will respond to its selection state.<\/Para><Para>The ordering of the elements by z-index is as follows: z-index 3) <codeVoice>element<\/codeVoice> z-index 2) <codeVoice>selectedBackgroundElement<\/codeVoice> (Only if the item supports a <codeVoice>selectionStyle<\/codeVoice> and is selected or highlighted.) z-index 1) <codeVoice>backgroundElement<\/codeVoice><\/Para><\/Discussion><\/CommentParts><\/Class>",
        "key.doc.line" : 55,
        "key.doc.name" : "BlueprintItemContent",
        "key.doc.type" : "Class",
        "key.filepath" : "\/Users\/k\/Desktop\/Development\/Listable1\/BlueprintUILists\/Sources\/BlueprintItemContent.swift",
        "key.fully_annotated_decl" : "<decl.protocol><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>protocol<\/syntaxtype.keyword> <decl.name>BlueprintItemContent<\/decl.name> : <ref.protocol usr=\"s:10ListableUI11ItemContentP\">ItemContent<\/ref.protocol> <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement><ref.generic_type_param usr=\"s:16BlueprintUILists0A11ItemContentP4Selfxmfp\">Self<\/ref.generic_type_param>.BackgroundView == <ref.class usr=\"c:@M@BlueprintUI@objc(cs)BlueprintView\">BlueprintView<\/ref.class><\/decl.generic_type_requirement>, <decl.generic_type_requirement><ref.generic_type_param usr=\"s:16BlueprintUILists0A11ItemContentP4Selfxmfp\">Self<\/ref.generic_type_param>.ContentView == <ref.class usr=\"c:@M@BlueprintUI@objc(cs)BlueprintView\">BlueprintView<\/ref.class><\/decl.generic_type_requirement>, <decl.generic_type_requirement><ref.generic_type_param usr=\"s:16BlueprintUILists0A11ItemContentP4Selfxmfp\">Self<\/ref.generic_type_param>.SelectedBackgroundView == <ref.class usr=\"c:@M@BlueprintUI@objc(cs)BlueprintView\">BlueprintView<\/ref.class><\/decl.generic_type_requirement><\/decl.protocol>",
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 396,
        "key.name" : "BlueprintItemContent",
        "key.namelength" : 20,
        "key.nameoffset" : 3603,
        "key.offset" : 3593,
        "key.parsed_declaration" : "public extension BlueprintItemContent",
        "key.parsed_scope.end" : 116,
        "key.parsed_scope.start" : 99,
        "key.substructure" : [
          {
            "key.kind" : "source.lang.swift.syntaxtype.comment.mark",
            "key.length" : 29,
            "key.name" : "MARK: Default Implementations",
            "key.namelength" : 0,
            "key.nameoffset" : 0,
            "key.offset" : 3640
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>func backgroundElement(with info: <Type usr=\"s:10ListableUI20ApplyItemContentInfoV\">ApplyItemContentInfo<\/Type>) -&gt; <Type usr=\"s:11BlueprintUI7ElementP\">Element<\/Type>?<\/Declaration>",
            "key.bodylength" : 17,
            "key.bodyoffset" : 3807,
            "key.doc.column" : 10,
            "key.doc.comment" : "By default, content has no background.",
            "key.doc.declaration" : "func backgroundElement(with info: ApplyItemContentInfo) -> Element?",
            "key.doc.file" : "\/Users\/k\/Desktop\/Development\/Listable1\/BlueprintUILists\/Sources\/BlueprintItemContent.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/k\/Desktop\/Development\/Listable1\/BlueprintUILists\/Sources\/BlueprintItemContent.swift\" line=\"106\" column=\"10\"><Name>backgroundElement(with:)<\/Name><USR>s:16BlueprintUILists0A11ItemContentPAAE17backgroundElement4with0A2UI0F0_pSg08ListableH005ApplycD4InfoV_tF<\/USR><Declaration>func backgroundElement(with info: ApplyItemContentInfo) -&gt; Element?<\/Declaration><CommentParts><Abstract><Para>By default, content has no background.<\/Para><\/Abstract><\/CommentParts><\/Function>",
            "key.doc.line" : 106,
            "key.doc.name" : "backgroundElement(with:)",
            "key.doc.type" : "Function",
            "key.doclength" : 43,
            "key.docoffset" : 3686,
            "key.filepath" : "\/Users\/k\/Desktop\/Development\/Listable1\/BlueprintUILists\/Sources\/BlueprintItemContent.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>backgroundElement<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>with<\/decl.var.parameter.argument_label> <decl.var.parameter.name>info<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:10ListableUI20ApplyItemContentInfoV\">ApplyItemContentInfo<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.protocol usr=\"s:11BlueprintUI7ElementP\">Element<\/ref.protocol>?<\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 92,
            "key.name" : "backgroundElement(with:)",
            "key.namelength" : 51,
            "key.nameoffset" : 3738,
            "key.offset" : 3733,
            "key.parsed_declaration" : "func backgroundElement(with info : ApplyItemContentInfo) -> Element?",
            "key.parsed_scope.end" : 109,
            "key.parsed_scope.start" : 106,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:16BlueprintUILists0A11ItemContentP17backgroundElement4with0A2UI0F0_pSg08ListableH005ApplycD4InfoV_tF\">backgroundElement(with: ApplyItemContentInfo) -&gt; Element?<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "<Self where Self : BlueprintItemContent> (Self) -> (ApplyItemContentInfo) -> Element?",
            "key.typeusr" : "$s4with11BlueprintUI7Element_pSg08ListableC020ApplyItemContentInfoV_tcD",
            "key.usr" : "s:16BlueprintUILists0A11ItemContentPAAE17backgroundElement4with0A2UI0F0_pSg08ListableH005ApplycD4InfoV_tF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>func selectedBackgroundElement(with info: <Type usr=\"s:10ListableUI20ApplyItemContentInfoV\">ApplyItemContentInfo<\/Type>) -&gt; <Type usr=\"s:11BlueprintUI7ElementP\">Element<\/Type>?<\/Declaration>",
            "key.bodylength" : 17,
            "key.bodyoffset" : 3969,
            "key.doc.column" : 10,
            "key.doc.comment" : "By default, content has no selected background.",
            "key.doc.declaration" : "func selectedBackgroundElement(with info: ApplyItemContentInfo) -> Element?",
            "key.doc.file" : "\/Users\/k\/Desktop\/Development\/Listable1\/BlueprintUILists\/Sources\/BlueprintItemContent.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/k\/Desktop\/Development\/Listable1\/BlueprintUILists\/Sources\/BlueprintItemContent.swift\" line=\"112\" column=\"10\"><Name>selectedBackgroundElement(with:)<\/Name><USR>s:16BlueprintUILists0A11ItemContentPAAE25selectedBackgroundElement4with0A2UI0G0_pSg08ListableI005ApplycD4InfoV_tF<\/USR><Declaration>func selectedBackgroundElement(with info: ApplyItemContentInfo) -&gt; Element?<\/Declaration><CommentParts><Abstract><Para>By default, content has no selected background.<\/Para><\/Abstract><\/CommentParts><\/Function>",
            "key.doc.line" : 112,
            "key.doc.name" : "selectedBackgroundElement(with:)",
            "key.doc.type" : "Function",
            "key.doclength" : 52,
            "key.docoffset" : 3831,
            "key.filepath" : "\/Users\/k\/Desktop\/Development\/Listable1\/BlueprintUILists\/Sources\/BlueprintItemContent.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>selectedBackgroundElement<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>with<\/decl.var.parameter.argument_label> <decl.var.parameter.name>info<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:10ListableUI20ApplyItemContentInfoV\">ApplyItemContentInfo<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.protocol usr=\"s:11BlueprintUI7ElementP\">Element<\/ref.protocol>?<\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 100,
            "key.name" : "selectedBackgroundElement(with:)",
            "key.namelength" : 59,
            "key.nameoffset" : 3892,
            "key.offset" : 3887,
            "key.parsed_declaration" : "func selectedBackgroundElement(with info : ApplyItemContentInfo) -> Element?",
            "key.parsed_scope.end" : 115,
            "key.parsed_scope.start" : 112,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:16BlueprintUILists0A11ItemContentP25selectedBackgroundElement4with0A2UI0G0_pSg08ListableI005ApplycD4InfoV_tF\">selectedBackgroundElement(with: ApplyItemContentInfo) -&gt; Element?<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "<Self where Self : BlueprintItemContent> (Self) -> (ApplyItemContentInfo) -> Element?",
            "key.typeusr" : "$s4with11BlueprintUI7Element_pSg08ListableC020ApplyItemContentInfoV_tcD",
            "key.usr" : "s:16BlueprintUILists0A11ItemContentPAAE25selectedBackgroundElement4with0A2UI0G0_pSg08ListableI005ApplycD4InfoV_tF"
          }
        ],
        "key.typename" : "BlueprintItemContent.Protocol",
        "key.typeusr" : "$s16BlueprintUILists0A11ItemContent_pmD",
        "key.usr" : "s:16BlueprintUILists0A11ItemContentP"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public protocol BlueprintItemContent : <Type usr=\"s:10ListableUI11ItemContentP\">ItemContent<\/Type> where <Type usr=\"s:16BlueprintUILists0A11ItemContentP4Selfxmfp\">Self<\/Type>.BackgroundView == <Type usr=\"c:@M@BlueprintUI@objc(cs)BlueprintView\">BlueprintView<\/Type>, <Type usr=\"s:16BlueprintUILists0A11ItemContentP4Selfxmfp\">Self<\/Type>.ContentView == <Type usr=\"c:@M@BlueprintUI@objc(cs)BlueprintView\">BlueprintView<\/Type>, <Type usr=\"s:16BlueprintUILists0A11ItemContentP4Selfxmfp\">Self<\/Type>.SelectedBackgroundView == <Type usr=\"c:@M@BlueprintUI@objc(cs)BlueprintView\">BlueprintView<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 3992
          }
        ],
        "key.bodylength" : 1921,
        "key.bodyoffset" : 4031,
        "key.doc.column" : 17,
        "key.doc.declaration" : "public protocol BlueprintItemContent : ListableUI.ItemContent where Self.BackgroundView == BlueprintUI.BlueprintView, Self.ContentView == BlueprintUI.BlueprintView, Self.SelectedBackgroundView == BlueprintUI.BlueprintView",
        "key.doc.discussion" : [
          {
            "Para" : "A `BlueprintItemContent` that displays text might look like this:"
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "Which uses the `backgroundElement` and `selectedBackgroundElement` methods to provide rendering of a background for the item, which will respond to its selection state."
          },
          {
            "Para" : "The ordering of the elements by z-index is as follows: z-index 3) `element` z-index 2) `selectedBackgroundElement` (Only if the item supports a `selectionStyle` and is selected or highlighted.) z-index 1) `backgroundElement`"
          }
        ],
        "key.doc.file" : "\/Users\/k\/Desktop\/Development\/Listable1\/BlueprintUILists\/Sources\/BlueprintItemContent.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/k\/Desktop\/Development\/Listable1\/BlueprintUILists\/Sources\/BlueprintItemContent.swift\" line=\"55\" column=\"17\"><Name>BlueprintItemContent<\/Name><USR>s:16BlueprintUILists0A11ItemContentP<\/USR><Declaration>public protocol BlueprintItemContent : ListableUI.ItemContent where Self.BackgroundView == BlueprintUI.BlueprintView, Self.ContentView == BlueprintUI.BlueprintView, Self.SelectedBackgroundView == BlueprintUI.BlueprintView<\/Declaration><CommentParts><Abstract><Para>An <codeVoice>ItemContent<\/codeVoice> specialized for use with Blueprint. Instead of providing custom views from <codeVoice>createReusable{...}View<\/codeVoice>, and then updating them in <codeVoice>apply(to:)<\/codeVoice>, you instead provide Blueprint elements, and <codeVoice>Listable<\/codeVoice> handles mapping this to an underlying <codeVoice>BlueprintView<\/codeVoice>.<\/Para><\/Abstract><Discussion><Para>A <codeVoice>BlueprintItemContent<\/codeVoice> that displays text might look like this:<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[struct MyItemContent : BlueprintItemContent, Equatable]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[{]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    var text : String]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    var identifier: Identifier<MyItemContent> {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[        return .init(self.text)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    }]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    func element(with info : ApplyItemContentInfo) -> Element]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[        Label(text: self.text) {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[            $0.font = .systemFont(ofSize: 16.0, weight: .medium)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[            $0.color = info.state.isActive ? .white : .darkGray]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[        }]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[        .inset(horizontal: 15.0, vertical: 10.0)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    }]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    func backgroundElement(with info: ApplyItemContentInfo) -> Element?]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[        Box(backgroundColor: .white)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    }]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    func selectedBackgroundElement(with info: ApplyItemContentInfo) -> Element?]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[        Box(backgroundColor: .white(0.2))]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    }]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>Which uses the <codeVoice>backgroundElement<\/codeVoice> and <codeVoice>selectedBackgroundElement<\/codeVoice> methods to provide rendering of a background for the item, which will respond to its selection state.<\/Para><Para>The ordering of the elements by z-index is as follows: z-index 3) <codeVoice>element<\/codeVoice> z-index 2) <codeVoice>selectedBackgroundElement<\/codeVoice> (Only if the item supports a <codeVoice>selectionStyle<\/codeVoice> and is selected or highlighted.) z-index 1) <codeVoice>backgroundElement<\/codeVoice><\/Para><\/Discussion><\/CommentParts><\/Class>",
        "key.doc.line" : 55,
        "key.doc.name" : "BlueprintItemContent",
        "key.doc.type" : "Class",
        "key.filepath" : "\/Users\/k\/Desktop\/Development\/Listable1\/BlueprintUILists\/Sources\/BlueprintItemContent.swift",
        "key.fully_annotated_decl" : "<decl.protocol><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>protocol<\/syntaxtype.keyword> <decl.name>BlueprintItemContent<\/decl.name> : <ref.protocol usr=\"s:10ListableUI11ItemContentP\">ItemContent<\/ref.protocol> <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement><ref.generic_type_param usr=\"s:16BlueprintUILists0A11ItemContentP4Selfxmfp\">Self<\/ref.generic_type_param>.BackgroundView == <ref.class usr=\"c:@M@BlueprintUI@objc(cs)BlueprintView\">BlueprintView<\/ref.class><\/decl.generic_type_requirement>, <decl.generic_type_requirement><ref.generic_type_param usr=\"s:16BlueprintUILists0A11ItemContentP4Selfxmfp\">Self<\/ref.generic_type_param>.ContentView == <ref.class usr=\"c:@M@BlueprintUI@objc(cs)BlueprintView\">BlueprintView<\/ref.class><\/decl.generic_type_requirement>, <decl.generic_type_requirement><ref.generic_type_param usr=\"s:16BlueprintUILists0A11ItemContentP4Selfxmfp\">Self<\/ref.generic_type_param>.SelectedBackgroundView == <ref.class usr=\"c:@M@BlueprintUI@objc(cs)BlueprintView\">BlueprintView<\/ref.class><\/decl.generic_type_requirement><\/decl.protocol>",
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 1954,
        "key.name" : "BlueprintItemContent",
        "key.namelength" : 20,
        "key.nameoffset" : 4009,
        "key.offset" : 3999,
        "key.parsed_declaration" : "public extension BlueprintItemContent",
        "key.parsed_scope.end" : 162,
        "key.parsed_scope.start" : 119,
        "key.substructure" : [
          {
            "key.kind" : "source.lang.swift.syntaxtype.comment.mark",
            "key.length" : 17,
            "key.name" : "MARK: ItemContent",
            "key.namelength" : 0,
            "key.nameoffset" : 0,
            "key.offset" : 4046
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>func apply(to views: <Type usr=\"s:10ListableUI16ItemContentViewsV\">ItemContentViews<\/Type>&lt;<Type usr=\"s:16BlueprintUILists0A11ItemContentPAAE4Selfxmfp\">Self<\/Type>&gt;, for reason: <Type usr=\"s:10ListableUI11ApplyReasonO\">ApplyReason<\/Type>, with info: <Type usr=\"s:10ListableUI20ApplyItemContentInfoV\">ApplyItemContentInfo<\/Type>)<\/Declaration>",
            "key.bodylength" : 874,
            "key.bodyoffset" : 4303,
            "key.doc.column" : 10,
            "key.doc.comment" : "Maps the `BlueprintItemContent` methods into the underlying `BlueprintView`s used to render the element.",
            "key.doc.declaration" : "func apply(to views: ItemContentViews<Self>, for reason: ApplyReason, with info: ApplyItemContentInfo)",
            "key.doc.file" : "\/Users\/k\/Desktop\/Development\/Listable1\/BlueprintUILists\/Sources\/BlueprintItemContent.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/k\/Desktop\/Development\/Listable1\/BlueprintUILists\/Sources\/BlueprintItemContent.swift\" line=\"126\" column=\"10\"><Name>apply(to:for:with:)<\/Name><USR>s:16BlueprintUILists0A11ItemContentPAAE5apply2to3for4withy10ListableUI0cD5ViewsVyxG_AH11ApplyReasonOAH0lcD4InfoVtF<\/USR><Declaration>func apply(to views: ItemContentViews&lt;Self&gt;, for reason: ApplyReason, with info: ApplyItemContentInfo)<\/Declaration><CommentParts><Abstract><Para>Maps the <codeVoice>BlueprintItemContent<\/codeVoice> methods into the underlying <codeVoice>BlueprintView<\/codeVoice>s used to render the element.<\/Para><\/Abstract><\/CommentParts><\/Function>",
            "key.doc.line" : 126,
            "key.doc.name" : "apply(to:for:with:)",
            "key.doc.type" : "Function",
            "key.doclength" : 109,
            "key.docoffset" : 4080,
            "key.filepath" : "\/Users\/k\/Desktop\/Development\/Listable1\/BlueprintUILists\/Sources\/BlueprintItemContent.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>apply<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>to<\/decl.var.parameter.argument_label> <decl.var.parameter.name>views<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:10ListableUI16ItemContentViewsV\">ItemContentViews<\/ref.struct>&lt;<ref.generic_type_param usr=\"s:16BlueprintUILists0A11ItemContentPAAE4Selfxmfp\">Self<\/ref.generic_type_param>&gt;<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>for<\/decl.var.parameter.argument_label> <decl.var.parameter.name>reason<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.enum usr=\"s:10ListableUI11ApplyReasonO\">ApplyReason<\/ref.enum><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>with<\/decl.var.parameter.argument_label> <decl.var.parameter.name>info<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:10ListableUI20ApplyItemContentInfoV\">ApplyItemContentInfo<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 985,
            "key.name" : "apply(to:for:with:)",
            "key.namelength" : 99,
            "key.nameoffset" : 4198,
            "key.offset" : 4193,
            "key.parsed_declaration" : "func apply(to views : ItemContentViews<Self>, for reason: ApplyReason, with info : ApplyItemContentInfo)",
            "key.parsed_scope.end" : 140,
            "key.parsed_scope.start" : 126,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:10ListableUI11ItemContentP5apply2to3for4withyAA0cD5ViewsVyxG_AA11ApplyReasonOAA0jcD4InfoVtF\">apply(to: ItemContentViews&lt;Self&gt;, for: ApplyReason, with: ApplyItemContentInfo)<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "<Self where Self : BlueprintItemContent> (Self) -> (ItemContentViews<Self>, ApplyReason, ApplyItemContentInfo) -> ()",
            "key.typeusr" : "$s2to3for4withy10ListableUI16ItemContentViewsVyxG_AD11ApplyReasonOAD0ifG4InfoVtcD",
            "key.usr" : "s:16BlueprintUILists0A11ItemContentPAAE5apply2to3for4withy10ListableUI0cD5ViewsVyxG_AH11ApplyReasonOAH0lcD4InfoVtF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>static func createReusableContentView(frame: <Type usr=\"c:@S@CGRect\">CGRect<\/Type>) -&gt; <Type usr=\"s:10ListableUI11ItemContentP0D4ViewQa\">ContentView<\/Type><\/Declaration>",
            "key.bodylength" : 48,
            "key.bodyoffset" : 5333,
            "key.doc.column" : 17,
            "key.doc.comment" : "Creates the `BlueprintView` used to render the content of the item.",
            "key.doc.declaration" : "static func createReusableContentView(frame: CGRect) -> ContentView",
            "key.doc.file" : "\/Users\/k\/Desktop\/Development\/Listable1\/BlueprintUILists\/Sources\/BlueprintItemContent.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/k\/Desktop\/Development\/Listable1\/BlueprintUILists\/Sources\/BlueprintItemContent.swift\" line=\"143\" column=\"17\"><Name>createReusableContentView(frame:)<\/Name><USR>s:16BlueprintUILists0A11ItemContentPAAE014createReusableD4View5frame0A2UI0aG0CSo6CGRectV_tFZ<\/USR><Declaration>static func createReusableContentView(frame: CGRect) -&gt; ContentView<\/Declaration><CommentParts><Abstract><Para>Creates the <codeVoice>BlueprintView<\/codeVoice> used to render the content of the item.<\/Para><\/Abstract><\/CommentParts><\/Function>",
            "key.doc.line" : 143,
            "key.doc.name" : "createReusableContentView(frame:)",
            "key.doc.type" : "Function",
            "key.doclength" : 72,
            "key.docoffset" : 5188,
            "key.filepath" : "\/Users\/k\/Desktop\/Development\/Listable1\/BlueprintUILists\/Sources\/BlueprintItemContent.swift",
            "key.fully_annotated_decl" : "<decl.function.method.static><syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>createReusableContentView<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>frame<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"c:@S@CGRect\">CGRect<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.associatedtype usr=\"s:10ListableUI11ItemContentP0D4ViewQa\">ContentView<\/ref.associatedtype><\/decl.function.returntype><\/decl.function.method.static>",
            "key.kind" : "source.lang.swift.decl.function.method.static",
            "key.length" : 118,
            "key.name" : "createReusableContentView(frame:)",
            "key.namelength" : 40,
            "key.nameoffset" : 5276,
            "key.offset" : 5264,
            "key.parsed_declaration" : "static func createReusableContentView(frame: CGRect) -> ContentView",
            "key.parsed_scope.end" : 145,
            "key.parsed_scope.start" : 143,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:10ListableUI11ItemContentP014createReusableD4View5frame0dG0QzSo6CGRectV_tFZ\">createReusableContentView(frame: CGRect) -&gt; Self.ContentView<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "<Self where Self : BlueprintItemContent> (Self.Type) -> (CGRect) -> Self.ContentView",
            "key.typeusr" : "$s5frame11BlueprintUI0B4ViewCSo6CGRectV_tcD",
            "key.usr" : "s:16BlueprintUILists0A11ItemContentPAAE014createReusableD4View5frame0A2UI0aG0CSo6CGRectV_tFZ"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>static func createReusableBackgroundView(frame: <Type usr=\"c:@S@CGRect\">CGRect<\/Type>) -&gt; <Type usr=\"s:10ListableUI11ItemContentP14BackgroundViewQa\">BackgroundView<\/Type><\/Declaration>",
            "key.bodylength" : 48,
            "key.bodyoffset" : 5546,
            "key.doc.column" : 17,
            "key.doc.comment" : "Creates the `BlueprintView` used to render the background of the item.",
            "key.doc.declaration" : "static func createReusableBackgroundView(frame: CGRect) -> BackgroundView",
            "key.doc.file" : "\/Users\/k\/Desktop\/Development\/Listable1\/BlueprintUILists\/Sources\/BlueprintItemContent.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/k\/Desktop\/Development\/Listable1\/BlueprintUILists\/Sources\/BlueprintItemContent.swift\" line=\"148\" column=\"17\"><Name>createReusableBackgroundView(frame:)<\/Name><USR>s:16BlueprintUILists0A11ItemContentPAAE28createReusableBackgroundView5frame0A2UI0aH0CSo6CGRectV_tFZ<\/USR><Declaration>static func createReusableBackgroundView(frame: CGRect) -&gt; BackgroundView<\/Declaration><CommentParts><Abstract><Para>Creates the <codeVoice>BlueprintView<\/codeVoice> used to render the background of the item.<\/Para><\/Abstract><\/CommentParts><\/Function>",
            "key.doc.line" : 148,
            "key.doc.name" : "createReusableBackgroundView(frame:)",
            "key.doc.type" : "Function",
            "key.doclength" : 75,
            "key.docoffset" : 5392,
            "key.filepath" : "\/Users\/k\/Desktop\/Development\/Listable1\/BlueprintUILists\/Sources\/BlueprintItemContent.swift",
            "key.fully_annotated_decl" : "<decl.function.method.static><syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>createReusableBackgroundView<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>frame<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"c:@S@CGRect\">CGRect<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.associatedtype usr=\"s:10ListableUI11ItemContentP14BackgroundViewQa\">BackgroundView<\/ref.associatedtype><\/decl.function.returntype><\/decl.function.method.static>",
            "key.kind" : "source.lang.swift.decl.function.method.static",
            "key.length" : 124,
            "key.name" : "createReusableBackgroundView(frame:)",
            "key.namelength" : 43,
            "key.nameoffset" : 5483,
            "key.offset" : 5471,
            "key.parsed_declaration" : "static func createReusableBackgroundView(frame: CGRect) -> BackgroundView",
            "key.parsed_scope.end" : 150,
            "key.parsed_scope.start" : 148,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:10ListableUI11ItemContentP28createReusableBackgroundView5frame0gH0QzSo6CGRectV_tFZ\">createReusableBackgroundView(frame: CGRect) -&gt; Self.BackgroundView<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:10ListableUI11ItemContentPAASo6UIViewC14BackgroundViewRtzrlE014createReusablefG05frameAESo6CGRectV_tFZ\">createReusableBackgroundView(frame: CGRect) -&gt; Self.BackgroundView<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "<Self where Self : BlueprintItemContent> (Self.Type) -> (CGRect) -> Self.BackgroundView",
            "key.typeusr" : "$s5frame11BlueprintUI0B4ViewCSo6CGRectV_tcD",
            "key.usr" : "s:16BlueprintUILists0A11ItemContentPAAE28createReusableBackgroundView5frame0A2UI0aH0CSo6CGRectV_tFZ"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>static func createReusableSelectedBackgroundView(frame: <Type usr=\"c:@S@CGRect\">CGRect<\/Type>) -&gt; <Type usr=\"s:10ListableUI11ItemContentP22SelectedBackgroundViewQa\">SelectedBackgroundView<\/Type><\/Declaration>",
            "key.bodylength" : 48,
            "key.bodyoffset" : 5696,
            "key.doc.column" : 17,
            "key.doc.declaration" : "static func createReusableSelectedBackgroundView(frame: CGRect) -> Self.SelectedBackgroundView",
            "key.doc.discussion" : [
              {
                "Para" : "This view is displayed when the content is highlighted or selected."
              },
              {
                "Para" : "If your `BackgroundView` and `SelectedBackgroundView` are the same type, this method is provided automatically by calling `createReusableBackgroundView`."
              },
              {
                "Para" : "Do not do configuration in this method that will be changed by your view’s theme or appearance – instead do that work in `apply(to:)`, so the appearance will be updated if the appearance of content changes."
              },
              {
                "Note" : ""
              }
            ],
            "key.doc.file" : "\/Users\/k\/Desktop\/Development\/Listable1\/ListableUI\/Sources\/Item\/ItemContent.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/k\/Desktop\/Development\/Listable1\/ListableUI\/Sources\/Item\/ItemContent.swift\" line=\"195\" column=\"17\"><Name>createReusableSelectedBackgroundView(frame:)<\/Name><USR>s:10ListableUI11ItemContentP36createReusableSelectedBackgroundView5frame0ghI0QzSo6CGRectV_tFZ<\/USR><Declaration>static func createReusableSelectedBackgroundView(frame: CGRect) -&gt; Self.SelectedBackgroundView<\/Declaration><CommentParts><Abstract><Para>Create and return a new background view used to render the content’s selected background.<\/Para><\/Abstract><Discussion><Para>This view is displayed when the content is highlighted or selected.<\/Para><Para>If your <codeVoice>BackgroundView<\/codeVoice> and <codeVoice>SelectedBackgroundView<\/codeVoice> are the same type, this method is provided automatically by calling <codeVoice>createReusableBackgroundView<\/codeVoice>.<\/Para><rawHTML><![CDATA[<h2>]]><\/rawHTML>Note<rawHTML><![CDATA[<\/h2>]]><\/rawHTML><Para>Do not do configuration in this method that will be changed by your view’s theme or appearance – instead do that work in <codeVoice>apply(to:)<\/codeVoice>, so the appearance will be updated if the appearance of content changes.<\/Para><Note><Para>This documentation comment was inherited from <codeVoice>ItemContent<\/codeVoice>.<\/Para><\/Note><\/Discussion><\/CommentParts><\/Function>",
            "key.doc.line" : 195,
            "key.doc.name" : "createReusableSelectedBackgroundView(frame:)",
            "key.doc.type" : "Function",
            "key.filepath" : "\/Users\/k\/Desktop\/Development\/Listable1\/BlueprintUILists\/Sources\/BlueprintItemContent.swift",
            "key.fully_annotated_decl" : "<decl.function.method.static><syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>createReusableSelectedBackgroundView<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>frame<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"c:@S@CGRect\">CGRect<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.associatedtype usr=\"s:10ListableUI11ItemContentP22SelectedBackgroundViewQa\">SelectedBackgroundView<\/ref.associatedtype><\/decl.function.returntype><\/decl.function.method.static>",
            "key.kind" : "source.lang.swift.decl.function.method.static",
            "key.length" : 140,
            "key.name" : "createReusableSelectedBackgroundView(frame:)",
            "key.namelength" : 51,
            "key.nameoffset" : 5617,
            "key.offset" : 5605,
            "key.parsed_declaration" : "static func createReusableSelectedBackgroundView(frame: CGRect) -> SelectedBackgroundView",
            "key.parsed_scope.end" : 154,
            "key.parsed_scope.start" : 152,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:10ListableUI11ItemContentP36createReusableSelectedBackgroundView5frame0ghI0QzSo6CGRectV_tFZ\">createReusableSelectedBackgroundView(frame: CGRect) -&gt; Self.SelectedBackgroundView<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:10ListableUI11ItemContentPAASo6UIViewC14BackgroundViewRtzrlE022createReusableSelectedfG05frame0jfG0QzSo6CGRectV_tFZ\">createReusableSelectedBackgroundView(frame: CGRect) -&gt; Self.SelectedBackgroundView<\/RelatedName>"
              }
            ],
            "key.substructure" : [

            ],
            "key.typename" : "<Self where Self : BlueprintItemContent> (Self.Type) -> (CGRect) -> Self.SelectedBackgroundView",
            "key.typeusr" : "$s5frame11BlueprintUI0B4ViewCSo6CGRectV_tcD",
            "key.usr" : "s:10ListableUI11ItemContentP36createReusableSelectedBackgroundView5frame0ghI0QzSo6CGRectV_tFZ"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.annotated_decl" : "<Declaration>private static func newBlueprintView(with frame: <Type usr=\"c:@S@CGRect\">CGRect<\/Type>) -&gt; <Type usr=\"c:@M@BlueprintUI@objc(cs)BlueprintView\">BlueprintView<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.private",
                "key.length" : 7,
                "key.offset" : 5755
              }
            ],
            "key.bodylength" : 119,
            "key.bodyoffset" : 5831,
            "key.filepath" : "\/Users\/k\/Desktop\/Development\/Listable1\/BlueprintUILists\/Sources\/BlueprintItemContent.swift",
            "key.fully_annotated_decl" : "<decl.function.method.static><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>static<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>newBlueprintView<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>with<\/decl.var.parameter.argument_label> <decl.var.parameter.name>frame<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"c:@S@CGRect\">CGRect<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"c:@M@BlueprintUI@objc(cs)BlueprintView\">BlueprintView<\/ref.class><\/decl.function.returntype><\/decl.function.method.static>",
            "key.kind" : "source.lang.swift.decl.function.method.static",
            "key.length" : 188,
            "key.name" : "newBlueprintView(with:)",
            "key.namelength" : 37,
            "key.nameoffset" : 5775,
            "key.offset" : 5763,
            "key.parsed_declaration" : "private static func newBlueprintView(with frame : CGRect) -> BlueprintView",
            "key.parsed_scope.end" : 161,
            "key.parsed_scope.start" : 156,
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>let view: <Type usr=\"c:@M@BlueprintUI@objc(cs)BlueprintView\">BlueprintView<\/Type><\/Declaration>",
                "key.filepath" : "\/Users\/k\/Desktop\/Development\/Listable1\/BlueprintUILists\/Sources\/BlueprintItemContent.swift",
                "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>view<\/decl.name>: <decl.var.type><ref.class usr=\"c:@M@BlueprintUI@objc(cs)BlueprintView\">BlueprintView<\/ref.class><\/decl.var.type><\/decl.var.local>",
                "key.kind" : "source.lang.swift.decl.var.local",
                "key.length" : 38,
                "key.name" : "view",
                "key.namelength" : 4,
                "key.nameoffset" : 5844,
                "key.offset" : 5840,
                "key.parsed_declaration" : "let view = BlueprintView(frame: frame)",
                "key.parsed_scope.end" : 157,
                "key.parsed_scope.start" : 157,
                "key.typename" : "BlueprintView",
                "key.typeusr" : "$s11BlueprintUI0A4ViewCD",
                "key.usr" : "s:16BlueprintUILists0A11ItemContentPAAE03newA4View33_00A2BB1FCE0BEE1B772989891DE46E9ALL4with0A2UI0aF0CSo6CGRectV_tFZ4viewL_AIvp"
              }
            ],
            "key.typename" : "<Self where Self : BlueprintItemContent> (Self.Type) -> (CGRect) -> BlueprintView",
            "key.typeusr" : "$s4with11BlueprintUI0B4ViewCSo6CGRectV_tcD",
            "key.usr" : "s:16BlueprintUILists0A11ItemContentPAAE03newA4View33_00A2BB1FCE0BEE1B772989891DE46E9ALL4with0A2UI0aF0CSo6CGRectV_tFZ"
          }
        ],
        "key.typename" : "BlueprintItemContent.Protocol",
        "key.typeusr" : "$s16BlueprintUILists0A11ItemContent_pmD",
        "key.usr" : "s:16BlueprintUILists0A11ItemContentP"
      }
    ]
  }
}, {
  "\/Users\/k\/Desktop\/Development\/Listable1\/BlueprintUILists\/Sources\/Deprecations.swift" : {
    "key.diagnostic_stage" : "source.diagnostic.stage.swift.parse",
    "key.length" : 1292,
    "key.offset" : 0,
    "key.substructure" : [
      {
        "key.kind" : "source.lang.swift.syntaxtype.comment.mark",
        "key.length" : 31,
        "key.name" : "MARK: Deprecated Month XX, 20XX",
        "key.namelength" : 0,
        "key.nameoffset" : 0,
        "key.offset" : 1257
      }
    ]
  }
}, {
  "\/Users\/k\/Desktop\/Development\/Listable1\/BlueprintUILists\/Sources\/Exports.swift" : {
    "key.diagnostic_stage" : "source.diagnostic.stage.swift.parse",
    "key.length" : 221,
    "key.offset" : 0,
    "key.substructure" : [

    ]
  }
}, {
  "\/Users\/k\/Desktop\/Development\/Listable1\/BlueprintUILists\/Sources\/HeaderFooter.swift" : {
    "key.diagnostic_stage" : "source.diagnostic.stage.swift.parse",
    "key.length" : 5206,
    "key.offset" : 0,
    "key.substructure" : [
      {
        "key.annotated_decl" : "<Declaration>struct HeaderFooter&lt;Content&gt; : <Type usr=\"s:10ListableUI15AnyHeaderFooterP\">AnyHeaderFooter<\/Type> where Content : <Type usr=\"s:10ListableUI19HeaderFooterContentP\">HeaderFooterContent<\/Type><\/Declaration>",
        "key.bodylength" : 4006,
        "key.bodyoffset" : 159,
        "key.filepath" : "\/Users\/k\/Desktop\/Development\/Listable1\/ListableUI\/Sources\/HeaderFooter\/HeaderFooter.swift",
        "key.fully_annotated_decl" : "<decl.struct><syntaxtype.keyword>struct<\/syntaxtype.keyword> <decl.name>HeaderFooter<\/decl.name>&lt;<decl.generic_type_param usr=\"s:10ListableUI12HeaderFooterV7Contentxmfp\"><decl.generic_type_param.name>Content<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt; : <ref.protocol usr=\"s:10ListableUI15AnyHeaderFooterP\">AnyHeaderFooter<\/ref.protocol> <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement>Content : <ref.protocol usr=\"s:10ListableUI19HeaderFooterContentP\">HeaderFooterContent<\/ref.protocol><\/decl.generic_type_requirement><\/decl.struct>",
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 4031,
        "key.modulename" : "ListableUI",
        "key.name" : "HeaderFooter",
        "key.namelength" : 12,
        "key.nameoffset" : 145,
        "key.offset" : 135,
        "key.parsed_declaration" : "extension HeaderFooter",
        "key.parsed_scope.end" : 119,
        "key.parsed_scope.start" : 12,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public init&lt;Represented&gt;(_ representing: <Type usr=\"s:10ListableUI12HeaderFooterV16BlueprintUIListsE_12isEquivalent7element10background17pressedBackground9configureACyAD0ecD14ContentWrapperVyqd__GGqd___Sbqd___qd__tc0eB07Element_pqd__cAnO_pSgqd__cAPqd__cyAMzXEtcALRszlufc11RepresentedL_qd__mfp\">Represented<\/Type>, isEquivalent: @escaping (<Type usr=\"s:10ListableUI12HeaderFooterV16BlueprintUIListsE_12isEquivalent7element10background17pressedBackground9configureACyAD0ecD14ContentWrapperVyqd__GGqd___Sbqd___qd__tc0eB07Element_pqd__cAnO_pSgqd__cAPqd__cyAMzXEtcALRszlufc11RepresentedL_qd__mfp\">Represented<\/Type>, <Type usr=\"s:10ListableUI12HeaderFooterV16BlueprintUIListsE_12isEquivalent7element10background17pressedBackground9configureACyAD0ecD14ContentWrapperVyqd__GGqd___Sbqd___qd__tc0eB07Element_pqd__cAnO_pSgqd__cAPqd__cyAMzXEtcALRszlufc11RepresentedL_qd__mfp\">Represented<\/Type>) -&gt; <Type usr=\"s:Sb\">Bool<\/Type>, element: @escaping (<Type usr=\"s:10ListableUI12HeaderFooterV16BlueprintUIListsE_12isEquivalent7element10background17pressedBackground9configureACyAD0ecD14ContentWrapperVyqd__GGqd___Sbqd___qd__tc0eB07Element_pqd__cAnO_pSgqd__cAPqd__cyAMzXEtcALRszlufc11RepresentedL_qd__mfp\">Represented<\/Type>) -&gt; <Type usr=\"s:11BlueprintUI7ElementP\">Element<\/Type>, background: @escaping (<Type usr=\"s:10ListableUI12HeaderFooterV16BlueprintUIListsE_12isEquivalent7element10background17pressedBackground9configureACyAD0ecD14ContentWrapperVyqd__GGqd___Sbqd___qd__tc0eB07Element_pqd__cAnO_pSgqd__cAPqd__cyAMzXEtcALRszlufc11RepresentedL_qd__mfp\">Represented<\/Type>) -&gt; <Type usr=\"s:11BlueprintUI7ElementP\">Element<\/Type>? = { _ in nil }, pressedBackground: @escaping (<Type usr=\"s:10ListableUI12HeaderFooterV16BlueprintUIListsE_12isEquivalent7element10background17pressedBackground9configureACyAD0ecD14ContentWrapperVyqd__GGqd___Sbqd___qd__tc0eB07Element_pqd__cAnO_pSgqd__cAPqd__cyAMzXEtcALRszlufc11RepresentedL_qd__mfp\">Represented<\/Type>) -&gt; <Type usr=\"s:11BlueprintUI7ElementP\">Element<\/Type>? = { _ in nil }, configure: (inout <Type usr=\"s:10ListableUI12HeaderFooterV\">HeaderFooter<\/Type>&lt;<Type usr=\"s:16BlueprintUILists0A26HeaderFooterContentWrapperV\">BlueprintHeaderFooterContentWrapper<\/Type>&lt;<Type usr=\"s:10ListableUI12HeaderFooterV16BlueprintUIListsE_12isEquivalent7element10background17pressedBackground9configureACyAD0ecD14ContentWrapperVyqd__GGqd___Sbqd___qd__tc0eB07Element_pqd__cAnO_pSgqd__cAPqd__cyAMzXEtcALRszlufc11RepresentedL_qd__mfp\">Represented<\/Type>&gt;&gt;) -&gt; () = { _ in }) where Content == <Type usr=\"s:16BlueprintUILists0A26HeaderFooterContentWrapperV\">BlueprintHeaderFooterContentWrapper<\/Type>&lt;Represented&gt;<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 1260
              }
            ],
            "key.bodylength" : 391,
            "key.bodyoffset" : 1821,
            "key.doc.column" : 12,
            "key.doc.comment" : "\nProvides a way to create a `HeaderFooter` for your Blueprint elements without\nrequiring the creation of a new `BlueprintHeaderFooterContent` struct.\n\nMost arguments on this method are not required – you must only\nprovide an input and an element provider.\n\nNote\n----\nThis initializer is helpful if you have to nest an existing element that needs to be used in\na single place, without needing to define an entirely new type.\n\nIf your header or footer is to be used in more than one place, it is recommended that you\ncreate a `BlueprintHeaderFooterContent` struct to share logic to avoid duplicate code.\n\nExample\n-------\n```\nsection.header = HeaderFooter(album) { lhs, rhs in\n    lhs.value != rhs.value\n}, element: { album in\n    AlbumElement(...)\n}, background: { album in\n    ...\n}, pressedBackground: album in\n    ...\n}, configure: { header in\n    ...\n}\n```",
            "key.doc.declaration" : "public init<Represented>(_ representing: Represented, isEquivalent: @escaping (Represented, Represented) -> Bool, element: @escaping (Represented) -> Element, background: @escaping (Represented) -> Element? = { _ in nil }, pressedBackground: @escaping (Represented) -> Element? = { _ in nil }, configure: (inout HeaderFooter<BlueprintHeaderFooterContentWrapper<Represented>>) -> () = { _ in }) where Content == BlueprintUILists.BlueprintHeaderFooterContentWrapper<Represented>",
            "key.doc.discussion" : [
              {
                "Para" : "Most arguments on this method are not required – you must only provide an input and an element provider."
              },
              {
                "Para" : "This initializer is helpful if you have to nest an existing element that needs to be used in a single place, without needing to define an entirely new type."
              },
              {
                "Para" : "If your header or footer is to be used in more than one place, it is recommended that you create a `BlueprintHeaderFooterContent` struct to share logic to avoid duplicate code."
              },
              {
                "CodeListing" : ""
              }
            ],
            "key.doc.file" : "\/Users\/k\/Desktop\/Development\/Listable1\/BlueprintUILists\/Sources\/HeaderFooter.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/k\/Desktop\/Development\/Listable1\/BlueprintUILists\/Sources\/HeaderFooter.swift\" line=\"44\" column=\"12\"><Name>init(_:isEquivalent:element:background:pressedBackground:configure:)<\/Name><USR>s:10ListableUI12HeaderFooterV16BlueprintUIListsE_12isEquivalent7element10background17pressedBackground9configureACyAD0ecD14ContentWrapperVyqd__GGqd___Sbqd___qd__tc0eB07Element_pqd__cAnO_pSgqd__cAPqd__cyAMzXEtcALRszlufc<\/USR><Declaration>public init&lt;Represented&gt;(_ representing: Represented, isEquivalent: @escaping (Represented, Represented) -&gt; Bool, element: @escaping (Represented) -&gt; Element, background: @escaping (Represented) -&gt; Element? = { _ in nil }, pressedBackground: @escaping (Represented) -&gt; Element? = { _ in nil }, configure: (inout HeaderFooter&lt;BlueprintHeaderFooterContentWrapper&lt;Represented&gt;&gt;) -&gt; () = { _ in }) where Content == BlueprintUILists.BlueprintHeaderFooterContentWrapper&lt;Represented&gt;<\/Declaration><CommentParts><Abstract><Para>Provides a way to create a <codeVoice>HeaderFooter<\/codeVoice> for your Blueprint elements without requiring the creation of a new <codeVoice>BlueprintHeaderFooterContent<\/codeVoice> struct.<\/Para><\/Abstract><Discussion><Para>Most arguments on this method are not required – you must only provide an input and an element provider.<\/Para><rawHTML><![CDATA[<h2>]]><\/rawHTML>Note<rawHTML><![CDATA[<\/h2>]]><\/rawHTML><Para>This initializer is helpful if you have to nest an existing element that needs to be used in a single place, without needing to define an entirely new type.<\/Para><Para>If your header or footer is to be used in more than one place, it is recommended that you create a <codeVoice>BlueprintHeaderFooterContent<\/codeVoice> struct to share logic to avoid duplicate code.<\/Para><rawHTML><![CDATA[<h2>]]><\/rawHTML>Example<rawHTML><![CDATA[<\/h2>]]><\/rawHTML><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[section.header = HeaderFooter(album) { lhs, rhs in]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    lhs.value != rhs.value]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}, element: { album in]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    AlbumElement(...)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}, background: { album in]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    ...]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}, pressedBackground: album in]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    ...]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}, configure: { header in]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    ...]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><\/Discussion><\/CommentParts><\/Function>",
            "key.doc.line" : 44,
            "key.doc.name" : "init(_:isEquivalent:element:background:pressedBackground:configure:)",
            "key.doc.type" : "Function",
            "key.doclength" : 1092,
            "key.docoffset" : 164,
            "key.filepath" : "\/Users\/k\/Desktop\/Development\/Listable1\/BlueprintUILists\/Sources\/HeaderFooter.swift",
            "key.fully_annotated_decl" : "<decl.function.constructor><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>init<\/syntaxtype.keyword>&lt;<decl.generic_type_param usr=\"s:10ListableUI12HeaderFooterV16BlueprintUIListsE_12isEquivalent7element10background17pressedBackground9configureACyAD0ecD14ContentWrapperVyqd__GGqd___Sbqd___qd__tc0eB07Element_pqd__cAnO_pSgqd__cAPqd__cyAMzXEtcALRszlufc11RepresentedL_qd__mfp\"><decl.generic_type_param.name>Represented<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>representing<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:10ListableUI12HeaderFooterV16BlueprintUIListsE_12isEquivalent7element10background17pressedBackground9configureACyAD0ecD14ContentWrapperVyqd__GGqd___Sbqd___qd__tc0eB07Element_pqd__cAnO_pSgqd__cAPqd__cyAMzXEtcALRszlufc11RepresentedL_qd__mfp\">Represented<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>isEquivalent<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@escaping<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.type><ref.generic_type_param usr=\"s:10ListableUI12HeaderFooterV16BlueprintUIListsE_12isEquivalent7element10background17pressedBackground9configureACyAD0ecD14ContentWrapperVyqd__GGqd___Sbqd___qd__tc0eB07Element_pqd__cAnO_pSgqd__cAPqd__cyAMzXEtcALRszlufc11RepresentedL_qd__mfp\">Represented<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.generic_type_param usr=\"s:10ListableUI12HeaderFooterV16BlueprintUIListsE_12isEquivalent7element10background17pressedBackground9configureACyAD0ecD14ContentWrapperVyqd__GGqd___Sbqd___qd__tc0eB07Element_pqd__cAnO_pSgqd__cAPqd__cyAMzXEtcALRszlufc11RepresentedL_qd__mfp\">Represented<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.function.returntype><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>element<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@escaping<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.type><ref.generic_type_param usr=\"s:10ListableUI12HeaderFooterV16BlueprintUIListsE_12isEquivalent7element10background17pressedBackground9configureACyAD0ecD14ContentWrapperVyqd__GGqd___Sbqd___qd__tc0eB07Element_pqd__cAnO_pSgqd__cAPqd__cyAMzXEtcALRszlufc11RepresentedL_qd__mfp\">Represented<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.protocol usr=\"s:11BlueprintUI7ElementP\">Element<\/ref.protocol><\/decl.function.returntype><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>background<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@escaping<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.type><ref.generic_type_param usr=\"s:10ListableUI12HeaderFooterV16BlueprintUIListsE_12isEquivalent7element10background17pressedBackground9configureACyAD0ecD14ContentWrapperVyqd__GGqd___Sbqd___qd__tc0eB07Element_pqd__cAnO_pSgqd__cAPqd__cyAMzXEtcALRszlufc11RepresentedL_qd__mfp\">Represented<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.protocol usr=\"s:11BlueprintUI7ElementP\">Element<\/ref.protocol>?<\/decl.function.returntype><\/decl.var.parameter.type> = { _ in nil }<\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>pressedBackground<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@escaping<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.type><ref.generic_type_param usr=\"s:10ListableUI12HeaderFooterV16BlueprintUIListsE_12isEquivalent7element10background17pressedBackground9configureACyAD0ecD14ContentWrapperVyqd__GGqd___Sbqd___qd__tc0eB07Element_pqd__cAnO_pSgqd__cAPqd__cyAMzXEtcALRszlufc11RepresentedL_qd__mfp\">Represented<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.protocol usr=\"s:11BlueprintUI7ElementP\">Element<\/ref.protocol>?<\/decl.function.returntype><\/decl.var.parameter.type> = { _ in nil }<\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>configure<\/decl.var.parameter.argument_label>: <decl.var.parameter.type>(<decl.var.parameter><decl.var.parameter.type><syntaxtype.keyword>inout<\/syntaxtype.keyword> <ref.struct usr=\"s:10ListableUI12HeaderFooterV\">HeaderFooter<\/ref.struct>&lt;<ref.struct usr=\"s:16BlueprintUILists0A26HeaderFooterContentWrapperV\">BlueprintHeaderFooterContentWrapper<\/ref.struct>&lt;<ref.generic_type_param usr=\"s:10ListableUI12HeaderFooterV16BlueprintUIListsE_12isEquivalent7element10background17pressedBackground9configureACyAD0ecD14ContentWrapperVyqd__GGqd___Sbqd___qd__tc0eB07Element_pqd__cAnO_pSgqd__cAPqd__cyAMzXEtcALRszlufc11RepresentedL_qd__mfp\">Represented<\/ref.generic_type_param>&gt;&gt;<\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><tuple>()<\/tuple><\/decl.function.returntype><\/decl.var.parameter.type> = { _ in }<\/decl.var.parameter>) <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement>Content == <ref.struct usr=\"s:16BlueprintUILists0A26HeaderFooterContentWrapperV\">BlueprintHeaderFooterContentWrapper<\/ref.struct>&lt;Represented&gt;<\/decl.generic_type_requirement><\/decl.function.constructor>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 946,
            "key.name" : "init(_:isEquivalent:element:background:pressedBackground:configure:)",
            "key.namelength" : 482,
            "key.nameoffset" : 1267,
            "key.offset" : 1267,
            "key.parsed_declaration" : "public init<Represented>(\n    _ representing : Represented,\n    \n    isEquivalent : @escaping (Represented, Represented) -> Bool,\n    \n    element : @escaping (Represented) -> Element,\n    background : @escaping (Represented) -> Element? = { _ in nil },\n    pressedBackground : @escaping (Represented) -> Element? = { _ in nil },\n    \n    configure : (inout HeaderFooter<BlueprintHeaderFooterContentWrapper<Represented>>) -> () = { _ in }\n    \n) where Content == BlueprintHeaderFooterContentWrapper<Represented>",
            "key.parsed_scope.end" : 67,
            "key.parsed_scope.start" : 44,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:10ListableUI12HeaderFooterV16BlueprintUIListsE_7element10background17pressedBackground9configureACyAD0ecD14ContentWrapperVyqd__GGqd___0eB07Element_pqd__cAmN_pSgqd__cAOqd__cyALzXEtcAKRszSQRd__lufc\">init(_:element:background:pressedBackground:configure:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:10ListableUI12HeaderFooterV_9configureACyxGx_yAEzXEtcfc\">init(_:configure:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:10ListableUI12HeaderFooterV_6sizing7layouts5onTapACyxGx_AA6SizingOAA0cD7LayoutsVyxcSgtcfc\">init(_:sizing:layouts:onTap:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>Represented<\/Declaration>",
                "key.filepath" : "\/Users\/k\/Desktop\/Development\/Listable1\/BlueprintUILists\/Sources\/HeaderFooter.swift",
                "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>Represented<\/decl.generic_type_param.name><\/decl.generic_type_param>",
                "key.kind" : "source.lang.swift.decl.generic_type_param",
                "key.length" : 11,
                "key.name" : "Represented",
                "key.namelength" : 11,
                "key.nameoffset" : 1272,
                "key.offset" : 1272,
                "key.parsed_declaration" : "public init<Represented",
                "key.parsed_scope.end" : 44,
                "key.parsed_scope.start" : 44,
                "key.typename" : "Represented.Type",
                "key.typeusr" : "$sqd__mD",
                "key.usr" : "s:10ListableUI12HeaderFooterV16BlueprintUIListsE_12isEquivalent7element10background17pressedBackground9configureACyAD0ecD14ContentWrapperVyqd__GGqd___Sbqd___qd__tc0eB07Element_pqd__cAnO_pSgqd__cAPqd__cyAMzXEtcALRszlufc11RepresentedL_qd__mfp"
              }
            ],
            "key.typename" : "<Content, Represented where Content == BlueprintHeaderFooterContentWrapper<Represented>> (HeaderFooter<Content>.Type) -> (Represented, @escaping (Represented, Represented) -> Bool, @escaping (Represented) -> Element, @escaping (Represented) -> Element?, @escaping (Represented) -> Element?, (inout HeaderFooter<BlueprintHeaderFooterContentWrapper<Represented>>) -> ()) -> HeaderFooter<Content>",
            "key.typeusr" : "$s_12isEquivalent7element10background17pressedBackground9configure10ListableUI12HeaderFooterVy16BlueprintUILists0ljK14ContentWrapperVyqd__GGqd___Sbqd___qd__tc0lI07Element_pqd__cAnO_pSgqd__cAPqd__cyAMzXEtcALRszluD",
            "key.usr" : "s:10ListableUI12HeaderFooterV16BlueprintUIListsE_12isEquivalent7element10background17pressedBackground9configureACyAD0ecD14ContentWrapperVyqd__GGqd___Sbqd___qd__tc0eB07Element_pqd__cAnO_pSgqd__cAPqd__cyAMzXEtcALRszlufc"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public init&lt;Represented&gt;(_ representing: <Type usr=\"s:10ListableUI12HeaderFooterV16BlueprintUIListsE_7element10background17pressedBackground9configureACyAD0ecD14ContentWrapperVyqd__GGqd___0eB07Element_pqd__cAmN_pSgqd__cAOqd__cyALzXEtcAKRszSQRd__lufc11RepresentedL_qd__mfp\">Represented<\/Type>, element: @escaping (<Type usr=\"s:10ListableUI12HeaderFooterV16BlueprintUIListsE_7element10background17pressedBackground9configureACyAD0ecD14ContentWrapperVyqd__GGqd___0eB07Element_pqd__cAmN_pSgqd__cAOqd__cyALzXEtcAKRszSQRd__lufc11RepresentedL_qd__mfp\">Represented<\/Type>) -&gt; <Type usr=\"s:11BlueprintUI7ElementP\">Element<\/Type>, background: @escaping (<Type usr=\"s:10ListableUI12HeaderFooterV16BlueprintUIListsE_7element10background17pressedBackground9configureACyAD0ecD14ContentWrapperVyqd__GGqd___0eB07Element_pqd__cAmN_pSgqd__cAOqd__cyALzXEtcAKRszSQRd__lufc11RepresentedL_qd__mfp\">Represented<\/Type>) -&gt; <Type usr=\"s:11BlueprintUI7ElementP\">Element<\/Type>? = { _ in nil }, pressedBackground: @escaping (<Type usr=\"s:10ListableUI12HeaderFooterV16BlueprintUIListsE_7element10background17pressedBackground9configureACyAD0ecD14ContentWrapperVyqd__GGqd___0eB07Element_pqd__cAmN_pSgqd__cAOqd__cyALzXEtcAKRszSQRd__lufc11RepresentedL_qd__mfp\">Represented<\/Type>) -&gt; <Type usr=\"s:11BlueprintUI7ElementP\">Element<\/Type>? = { _ in nil }, configure: (inout <Type usr=\"s:10ListableUI12HeaderFooterV\">HeaderFooter<\/Type>&lt;<Type usr=\"s:16BlueprintUILists0A26HeaderFooterContentWrapperV\">BlueprintHeaderFooterContentWrapper<\/Type>&lt;<Type usr=\"s:10ListableUI12HeaderFooterV16BlueprintUIListsE_7element10background17pressedBackground9configureACyAD0ecD14ContentWrapperVyqd__GGqd___0eB07Element_pqd__cAmN_pSgqd__cAOqd__cyALzXEtcAKRszSQRd__lufc11RepresentedL_qd__mfp\">Represented<\/Type>&gt;&gt;) -&gt; () = { _ in }) where Content == <Type usr=\"s:16BlueprintUILists0A26HeaderFooterContentWrapperV\">BlueprintHeaderFooterContentWrapper<\/Type>&lt;Represented&gt;, Represented : <Type usr=\"s:SQ\">Equatable<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 3250
              }
            ],
            "key.bodylength" : 391,
            "key.bodyoffset" : 3772,
            "key.doc.column" : 12,
            "key.doc.comment" : "\nProvides a way to create a `HeaderFooter` for your Blueprint elements without\nrequiring the creation of a new `BlueprintHeaderFooterContent` struct.\n\nMost arguments on this method are not required – you must only\nprovide an input and an element provider.\n\nNote\n----\nThis initializer is helpful if you have to nest an existing element that needs to be used in\na single place, without needing to define an entirely new type.\n\nIf your header or footer is to be used in more than one place, it is recommended that you\ncreate a `BlueprintHeaderFooterContent` struct to share logic to avoid duplicate code.\n\nExample\n-------\n```\nsection.header = HeaderFooter(album) { album in\n    AlbumElement(...)\n}, background: { album in\n    ...\n}, pressedBackground: album in\n    ...\n}, configure: { header in\n    ...\n}\n```",
            "key.doc.declaration" : "public init<Represented>(_ representing: Represented, element: @escaping (Represented) -> Element, background: @escaping (Represented) -> Element? = { _ in nil }, pressedBackground: @escaping (Represented) -> Element? = { _ in nil }, configure: (inout HeaderFooter<BlueprintHeaderFooterContentWrapper<Represented>>) -> () = { _ in }) where Content == BlueprintUILists.BlueprintHeaderFooterContentWrapper<Represented>, Represented : Equatable",
            "key.doc.discussion" : [
              {
                "Para" : "Most arguments on this method are not required – you must only provide an input and an element provider."
              },
              {
                "Para" : "This initializer is helpful if you have to nest an existing element that needs to be used in a single place, without needing to define an entirely new type."
              },
              {
                "Para" : "If your header or footer is to be used in more than one place, it is recommended that you create a `BlueprintHeaderFooterContent` struct to share logic to avoid duplicate code."
              },
              {
                "CodeListing" : ""
              }
            ],
            "key.doc.file" : "\/Users\/k\/Desktop\/Development\/Listable1\/BlueprintUILists\/Sources\/HeaderFooter.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/k\/Desktop\/Development\/Listable1\/BlueprintUILists\/Sources\/HeaderFooter.swift\" line=\"97\" column=\"12\"><Name>init(_:element:background:pressedBackground:configure:)<\/Name><USR>s:10ListableUI12HeaderFooterV16BlueprintUIListsE_7element10background17pressedBackground9configureACyAD0ecD14ContentWrapperVyqd__GGqd___0eB07Element_pqd__cAmN_pSgqd__cAOqd__cyALzXEtcAKRszSQRd__lufc<\/USR><Declaration>public init&lt;Represented&gt;(_ representing: Represented, element: @escaping (Represented) -&gt; Element, background: @escaping (Represented) -&gt; Element? = { _ in nil }, pressedBackground: @escaping (Represented) -&gt; Element? = { _ in nil }, configure: (inout HeaderFooter&lt;BlueprintHeaderFooterContentWrapper&lt;Represented&gt;&gt;) -&gt; () = { _ in }) where Content == BlueprintUILists.BlueprintHeaderFooterContentWrapper&lt;Represented&gt;, Represented : Equatable<\/Declaration><CommentParts><Abstract><Para>Provides a way to create a <codeVoice>HeaderFooter<\/codeVoice> for your Blueprint elements without requiring the creation of a new <codeVoice>BlueprintHeaderFooterContent<\/codeVoice> struct.<\/Para><\/Abstract><Discussion><Para>Most arguments on this method are not required – you must only provide an input and an element provider.<\/Para><rawHTML><![CDATA[<h2>]]><\/rawHTML>Note<rawHTML><![CDATA[<\/h2>]]><\/rawHTML><Para>This initializer is helpful if you have to nest an existing element that needs to be used in a single place, without needing to define an entirely new type.<\/Para><Para>If your header or footer is to be used in more than one place, it is recommended that you create a <codeVoice>BlueprintHeaderFooterContent<\/codeVoice> struct to share logic to avoid duplicate code.<\/Para><rawHTML><![CDATA[<h2>]]><\/rawHTML>Example<rawHTML><![CDATA[<\/h2>]]><\/rawHTML><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[section.header = HeaderFooter(album) { album in]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    AlbumElement(...)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}, background: { album in]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    ...]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}, pressedBackground: album in]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    ...]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}, configure: { header in]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    ...]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><\/Discussion><\/CommentParts><\/Function>",
            "key.doc.line" : 97,
            "key.doc.name" : "init(_:element:background:pressedBackground:configure:)",
            "key.doc.type" : "Function",
            "key.doclength" : 1023,
            "key.docoffset" : 2223,
            "key.filepath" : "\/Users\/k\/Desktop\/Development\/Listable1\/BlueprintUILists\/Sources\/HeaderFooter.swift",
            "key.fully_annotated_decl" : "<decl.function.constructor><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>init<\/syntaxtype.keyword>&lt;<decl.generic_type_param usr=\"s:10ListableUI12HeaderFooterV16BlueprintUIListsE_7element10background17pressedBackground9configureACyAD0ecD14ContentWrapperVyqd__GGqd___0eB07Element_pqd__cAmN_pSgqd__cAOqd__cyALzXEtcAKRszSQRd__lufc11RepresentedL_qd__mfp\"><decl.generic_type_param.name>Represented<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>representing<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:10ListableUI12HeaderFooterV16BlueprintUIListsE_7element10background17pressedBackground9configureACyAD0ecD14ContentWrapperVyqd__GGqd___0eB07Element_pqd__cAmN_pSgqd__cAOqd__cyALzXEtcAKRszSQRd__lufc11RepresentedL_qd__mfp\">Represented<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>element<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@escaping<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.type><ref.generic_type_param usr=\"s:10ListableUI12HeaderFooterV16BlueprintUIListsE_7element10background17pressedBackground9configureACyAD0ecD14ContentWrapperVyqd__GGqd___0eB07Element_pqd__cAmN_pSgqd__cAOqd__cyALzXEtcAKRszSQRd__lufc11RepresentedL_qd__mfp\">Represented<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.protocol usr=\"s:11BlueprintUI7ElementP\">Element<\/ref.protocol><\/decl.function.returntype><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>background<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@escaping<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.type><ref.generic_type_param usr=\"s:10ListableUI12HeaderFooterV16BlueprintUIListsE_7element10background17pressedBackground9configureACyAD0ecD14ContentWrapperVyqd__GGqd___0eB07Element_pqd__cAmN_pSgqd__cAOqd__cyALzXEtcAKRszSQRd__lufc11RepresentedL_qd__mfp\">Represented<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.protocol usr=\"s:11BlueprintUI7ElementP\">Element<\/ref.protocol>?<\/decl.function.returntype><\/decl.var.parameter.type> = { _ in nil }<\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>pressedBackground<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@escaping<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.type><ref.generic_type_param usr=\"s:10ListableUI12HeaderFooterV16BlueprintUIListsE_7element10background17pressedBackground9configureACyAD0ecD14ContentWrapperVyqd__GGqd___0eB07Element_pqd__cAmN_pSgqd__cAOqd__cyALzXEtcAKRszSQRd__lufc11RepresentedL_qd__mfp\">Represented<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.protocol usr=\"s:11BlueprintUI7ElementP\">Element<\/ref.protocol>?<\/decl.function.returntype><\/decl.var.parameter.type> = { _ in nil }<\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>configure<\/decl.var.parameter.argument_label>: <decl.var.parameter.type>(<decl.var.parameter><decl.var.parameter.type><syntaxtype.keyword>inout<\/syntaxtype.keyword> <ref.struct usr=\"s:10ListableUI12HeaderFooterV\">HeaderFooter<\/ref.struct>&lt;<ref.struct usr=\"s:16BlueprintUILists0A26HeaderFooterContentWrapperV\">BlueprintHeaderFooterContentWrapper<\/ref.struct>&lt;<ref.generic_type_param usr=\"s:10ListableUI12HeaderFooterV16BlueprintUIListsE_7element10background17pressedBackground9configureACyAD0ecD14ContentWrapperVyqd__GGqd___0eB07Element_pqd__cAmN_pSgqd__cAOqd__cyALzXEtcAKRszSQRd__lufc11RepresentedL_qd__mfp\">Represented<\/ref.generic_type_param>&gt;&gt;<\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><tuple>()<\/tuple><\/decl.function.returntype><\/decl.var.parameter.type> = { _ in }<\/decl.var.parameter>) <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement>Content == <ref.struct usr=\"s:16BlueprintUILists0A26HeaderFooterContentWrapperV\">BlueprintHeaderFooterContentWrapper<\/ref.struct>&lt;Represented&gt;<\/decl.generic_type_requirement>, <decl.generic_type_requirement>Represented : <ref.protocol usr=\"s:SQ\">Equatable<\/ref.protocol><\/decl.generic_type_requirement><\/decl.function.constructor>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 907,
            "key.name" : "init(_:element:background:pressedBackground:configure:)",
            "key.namelength" : 420,
            "key.nameoffset" : 3257,
            "key.offset" : 3257,
            "key.parsed_declaration" : "public init<Represented>(\n    _ representing : Represented,\n                    \n    element : @escaping (Represented) -> Element,\n    background : @escaping (Represented) -> Element? = { _ in nil },\n    pressedBackground : @escaping (Represented) -> Element? = { _ in nil },\n    \n    configure : (inout HeaderFooter<BlueprintHeaderFooterContentWrapper<Represented>>) -> () = { _ in }\n    \n) where Content == BlueprintHeaderFooterContentWrapper<Represented>, Represented:Equatable",
            "key.parsed_scope.end" : 118,
            "key.parsed_scope.start" : 97,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:10ListableUI12HeaderFooterV16BlueprintUIListsE_12isEquivalent7element10background17pressedBackground9configureACyAD0ecD14ContentWrapperVyqd__GGqd___Sbqd___qd__tc0eB07Element_pqd__cAnO_pSgqd__cAPqd__cyAMzXEtcALRszlufc\">init(_:isEquivalent:element:background:pressedBackground:configure:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:10ListableUI12HeaderFooterV_9configureACyxGx_yAEzXEtcfc\">init(_:configure:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:10ListableUI12HeaderFooterV_6sizing7layouts5onTapACyxGx_AA6SizingOAA0cD7LayoutsVyxcSgtcfc\">init(_:sizing:layouts:onTap:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>Represented<\/Declaration>",
                "key.filepath" : "\/Users\/k\/Desktop\/Development\/Listable1\/BlueprintUILists\/Sources\/HeaderFooter.swift",
                "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>Represented<\/decl.generic_type_param.name><\/decl.generic_type_param>",
                "key.kind" : "source.lang.swift.decl.generic_type_param",
                "key.length" : 11,
                "key.name" : "Represented",
                "key.namelength" : 11,
                "key.nameoffset" : 3262,
                "key.offset" : 3262,
                "key.parsed_declaration" : "public init<Represented",
                "key.parsed_scope.end" : 97,
                "key.parsed_scope.start" : 97,
                "key.typename" : "Represented.Type",
                "key.typeusr" : "$sqd__mD",
                "key.usr" : "s:10ListableUI12HeaderFooterV16BlueprintUIListsE_7element10background17pressedBackground9configureACyAD0ecD14ContentWrapperVyqd__GGqd___0eB07Element_pqd__cAmN_pSgqd__cAOqd__cyALzXEtcAKRszSQRd__lufc11RepresentedL_qd__mfp"
              }
            ],
            "key.typename" : "<Content, Represented where Content == BlueprintHeaderFooterContentWrapper<Represented>, Represented : Equatable> (HeaderFooter<Content>.Type) -> (Represented, @escaping (Represented) -> Element, @escaping (Represented) -> Element?, @escaping (Represented) -> Element?, (inout HeaderFooter<BlueprintHeaderFooterContentWrapper<Represented>>) -> ()) -> HeaderFooter<Content>",
            "key.typeusr" : "$s_7element10background17pressedBackground9configure10ListableUI12HeaderFooterVy16BlueprintUILists0jhI14ContentWrapperVyqd__GGqd___0jG07Element_pqd__cAmN_pSgqd__cAOqd__cyALzXEtcAKRszSQRd__luD",
            "key.usr" : "s:10ListableUI12HeaderFooterV16BlueprintUIListsE_7element10background17pressedBackground9configureACyAD0ecD14ContentWrapperVyqd__GGqd___0eB07Element_pqd__cAmN_pSgqd__cAOqd__cyALzXEtcAKRszSQRd__lufc"
          }
        ],
        "key.typename" : "HeaderFooter<Content>.Type",
        "key.typeusr" : "$s10ListableUI12HeaderFooterVyxGmD",
        "key.usr" : "s:10ListableUI12HeaderFooterV"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public struct BlueprintHeaderFooterContentWrapper&lt;Represented&gt; : <Type usr=\"s:16BlueprintUILists0A19HeaderFooterContentP\">BlueprintHeaderFooterContent<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 4368
          }
        ],
        "key.bodylength" : 741,
        "key.bodyoffset" : 4463,
        "key.doc.column" : 15,
        "key.doc.comment" : "The `BlueprintHeaderFooterContent` type that is used to provide\na lightweight way to present an `Element`, without needing to provide an entirely\nnew `BlueprintHeaderFooterContent` type.",
        "key.doc.declaration" : "public struct BlueprintHeaderFooterContentWrapper<Represented> : BlueprintHeaderFooterContent",
        "key.doc.file" : "\/Users\/k\/Desktop\/Development\/Listable1\/BlueprintUILists\/Sources\/HeaderFooter.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/k\/Desktop\/Development\/Listable1\/BlueprintUILists\/Sources\/HeaderFooter.swift\" line=\"125\" column=\"15\"><Name>BlueprintHeaderFooterContentWrapper<\/Name><USR>s:16BlueprintUILists0A26HeaderFooterContentWrapperV<\/USR><Declaration>public struct BlueprintHeaderFooterContentWrapper&lt;Represented&gt; : BlueprintHeaderFooterContent<\/Declaration><CommentParts><Abstract><Para>The <codeVoice>BlueprintHeaderFooterContent<\/codeVoice> type that is used to provide a lightweight way to present an <codeVoice>Element<\/codeVoice>, without needing to provide an entirely new <codeVoice>BlueprintHeaderFooterContent<\/codeVoice> type.<\/Para><\/Abstract><\/CommentParts><\/Class>",
        "key.doc.line" : 125,
        "key.doc.name" : "BlueprintHeaderFooterContentWrapper",
        "key.doc.type" : "Class",
        "key.doclength" : 199,
        "key.docoffset" : 4169,
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 28,
            "key.offset" : 4433
          }
        ],
        "key.filepath" : "\/Users\/k\/Desktop\/Development\/Listable1\/BlueprintUILists\/Sources\/HeaderFooter.swift",
        "key.fully_annotated_decl" : "<decl.struct><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>struct<\/syntaxtype.keyword> <decl.name>BlueprintHeaderFooterContentWrapper<\/decl.name>&lt;<decl.generic_type_param usr=\"s:16BlueprintUILists0A26HeaderFooterContentWrapperV11Representedxmfp\"><decl.generic_type_param.name>Represented<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt; : <ref.protocol usr=\"s:16BlueprintUILists0A19HeaderFooterContentP\">BlueprintHeaderFooterContent<\/ref.protocol><\/decl.struct>",
        "key.inheritedtypes" : [
          {
            "key.name" : "BlueprintHeaderFooterContent"
          }
        ],
        "key.kind" : "source.lang.swift.decl.struct",
        "key.length" : 830,
        "key.name" : "BlueprintHeaderFooterContentWrapper",
        "key.namelength" : 35,
        "key.nameoffset" : 4382,
        "key.offset" : 4375,
        "key.parsed_declaration" : "public struct BlueprintHeaderFooterContentWrapper<Represented> : BlueprintHeaderFooterContent",
        "key.parsed_scope.end" : 149,
        "key.parsed_scope.start" : 125,
        "key.substructure" : [
          {
            "key.annotated_decl" : "<Declaration>Represented<\/Declaration>",
            "key.filepath" : "\/Users\/k\/Desktop\/Development\/Listable1\/BlueprintUILists\/Sources\/HeaderFooter.swift",
            "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>Represented<\/decl.generic_type_param.name><\/decl.generic_type_param>",
            "key.kind" : "source.lang.swift.decl.generic_type_param",
            "key.length" : 11,
            "key.name" : "Represented",
            "key.namelength" : 11,
            "key.nameoffset" : 4418,
            "key.offset" : 4418,
            "key.parsed_declaration" : "public struct BlueprintHeaderFooterContentWrapper<Represented",
            "key.parsed_scope.end" : 125,
            "key.parsed_scope.start" : 125,
            "key.typename" : "Represented.Type",
            "key.typeusr" : "$sxmD",
            "key.usr" : "s:16BlueprintUILists0A26HeaderFooterContentWrapperV11Representedxmfp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public let representing: <Type usr=\"s:16BlueprintUILists0A26HeaderFooterContentWrapperV11Representedxmfp\">Represented<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 4468
              }
            ],
            "key.filepath" : "\/Users\/k\/Desktop\/Development\/Listable1\/BlueprintUILists\/Sources\/HeaderFooter.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>representing<\/decl.name>: <decl.var.type><ref.generic_type_param usr=\"s:16BlueprintUILists0A26HeaderFooterContentWrapperV11Representedxmfp\">Represented<\/ref.generic_type_param><\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 30,
            "key.name" : "representing",
            "key.namelength" : 12,
            "key.nameoffset" : 4479,
            "key.offset" : 4475,
            "key.parsed_declaration" : "public let representing : Represented",
            "key.parsed_scope.end" : 127,
            "key.parsed_scope.start" : 127,
            "key.typename" : "Represented",
            "key.typeusr" : "$sxD",
            "key.usr" : "s:16BlueprintUILists0A26HeaderFooterContentWrapperV12representingxvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>let isEquivalentProvider: (<Type usr=\"s:16BlueprintUILists0A26HeaderFooterContentWrapperV11Representedxmfp\">Represented<\/Type>, <Type usr=\"s:16BlueprintUILists0A26HeaderFooterContentWrapperV11Representedxmfp\">Represented<\/Type>) -&gt; <Type usr=\"s:Sb\">Bool<\/Type><\/Declaration>",
            "key.filepath" : "\/Users\/k\/Desktop\/Development\/Listable1\/BlueprintUILists\/Sources\/HeaderFooter.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>isEquivalentProvider<\/decl.name>: <decl.var.type>(<decl.var.parameter><decl.var.parameter.type><ref.generic_type_param usr=\"s:16BlueprintUILists0A26HeaderFooterContentWrapperV11Representedxmfp\">Represented<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.generic_type_param usr=\"s:16BlueprintUILists0A26HeaderFooterContentWrapperV11Representedxmfp\">Represented<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.function.returntype><\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 61,
            "key.name" : "isEquivalentProvider",
            "key.namelength" : 20,
            "key.nameoffset" : 4515,
            "key.offset" : 4511,
            "key.parsed_declaration" : "let isEquivalentProvider : (Represented, Represented) -> Bool",
            "key.parsed_scope.end" : 129,
            "key.parsed_scope.start" : 129,
            "key.typename" : "(Represented, Represented) -> Bool",
            "key.typeusr" : "$sySbx_xtcD",
            "key.usr" : "s:16BlueprintUILists0A26HeaderFooterContentWrapperV20isEquivalentProviderySbx_xtcvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>let elementProvider: (<Type usr=\"s:16BlueprintUILists0A26HeaderFooterContentWrapperV11Representedxmfp\">Represented<\/Type>) -&gt; <Type usr=\"s:11BlueprintUI7ElementP\">Element<\/Type><\/Declaration>",
            "key.filepath" : "\/Users\/k\/Desktop\/Development\/Listable1\/BlueprintUILists\/Sources\/HeaderFooter.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>elementProvider<\/decl.name>: <decl.var.type>(<decl.var.parameter><decl.var.parameter.type><ref.generic_type_param usr=\"s:16BlueprintUILists0A26HeaderFooterContentWrapperV11Representedxmfp\">Represented<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.protocol usr=\"s:11BlueprintUI7ElementP\">Element<\/ref.protocol><\/decl.function.returntype><\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 46,
            "key.name" : "elementProvider",
            "key.namelength" : 15,
            "key.nameoffset" : 4581,
            "key.offset" : 4577,
            "key.parsed_declaration" : "let elementProvider : (Represented) -> Element",
            "key.parsed_scope.end" : 130,
            "key.parsed_scope.start" : 130,
            "key.typename" : "(Represented) -> Element",
            "key.typeusr" : "$sy11BlueprintUI7Element_pxcD",
            "key.usr" : "s:16BlueprintUILists0A26HeaderFooterContentWrapperV15elementProvidery0A2UI7Element_pxcvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>let backgroundProvider: (<Type usr=\"s:16BlueprintUILists0A26HeaderFooterContentWrapperV11Representedxmfp\">Represented<\/Type>) -&gt; <Type usr=\"s:11BlueprintUI7ElementP\">Element<\/Type>?<\/Declaration>",
            "key.filepath" : "\/Users\/k\/Desktop\/Development\/Listable1\/BlueprintUILists\/Sources\/HeaderFooter.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>backgroundProvider<\/decl.name>: <decl.var.type>(<decl.var.parameter><decl.var.parameter.type><ref.generic_type_param usr=\"s:16BlueprintUILists0A26HeaderFooterContentWrapperV11Representedxmfp\">Represented<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.protocol usr=\"s:11BlueprintUI7ElementP\">Element<\/ref.protocol>?<\/decl.function.returntype><\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 50,
            "key.name" : "backgroundProvider",
            "key.namelength" : 18,
            "key.nameoffset" : 4632,
            "key.offset" : 4628,
            "key.parsed_declaration" : "let backgroundProvider : (Represented) -> Element?",
            "key.parsed_scope.end" : 131,
            "key.parsed_scope.start" : 131,
            "key.typename" : "(Represented) -> Element?",
            "key.typeusr" : "$sy11BlueprintUI7Element_pSgxcD",
            "key.usr" : "s:16BlueprintUILists0A26HeaderFooterContentWrapperV18backgroundProvidery0A2UI7Element_pSgxcvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>let pressedBackgroundProvider: (<Type usr=\"s:16BlueprintUILists0A26HeaderFooterContentWrapperV11Representedxmfp\">Represented<\/Type>) -&gt; <Type usr=\"s:11BlueprintUI7ElementP\">Element<\/Type>?<\/Declaration>",
            "key.filepath" : "\/Users\/k\/Desktop\/Development\/Listable1\/BlueprintUILists\/Sources\/HeaderFooter.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>pressedBackgroundProvider<\/decl.name>: <decl.var.type>(<decl.var.parameter><decl.var.parameter.type><ref.generic_type_param usr=\"s:16BlueprintUILists0A26HeaderFooterContentWrapperV11Representedxmfp\">Represented<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.protocol usr=\"s:11BlueprintUI7ElementP\">Element<\/ref.protocol>?<\/decl.function.returntype><\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 57,
            "key.name" : "pressedBackgroundProvider",
            "key.namelength" : 25,
            "key.nameoffset" : 4687,
            "key.offset" : 4683,
            "key.parsed_declaration" : "let pressedBackgroundProvider : (Represented) -> Element?",
            "key.parsed_scope.end" : 132,
            "key.parsed_scope.start" : 132,
            "key.typename" : "(Represented) -> Element?",
            "key.typeusr" : "$sy11BlueprintUI7Element_pSgxcD",
            "key.usr" : "s:16BlueprintUILists0A26HeaderFooterContentWrapperV25pressedBackgroundProvidery0A2UI7Element_pSgxcvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func isEquivalent(to other: `Self`) -&gt; <Type usr=\"s:Sb\">Bool<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 4750
              }
            ],
            "key.bodylength" : 78,
            "key.bodyoffset" : 4800,
            "key.filepath" : "\/Users\/k\/Desktop\/Development\/Listable1\/BlueprintUILists\/Sources\/HeaderFooter.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>isEquivalent<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>to<\/decl.var.parameter.argument_label> <decl.var.parameter.name>other<\/decl.var.parameter.name>: <decl.var.parameter.type>`Self`<\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 122,
            "key.name" : "isEquivalent(to:)",
            "key.namelength" : 28,
            "key.nameoffset" : 4762,
            "key.offset" : 4757,
            "key.overrides" : [
              {
                "key.usr" : "s:10ListableUI19HeaderFooterContentP12isEquivalent2toSbx_tF"
              }
            ],
            "key.parsed_declaration" : "public func isEquivalent(to other: Self) -> Bool",
            "key.parsed_scope.end" : 136,
            "key.parsed_scope.start" : 134,
            "key.substructure" : [

            ],
            "key.typename" : "<Represented> (BlueprintHeaderFooterContentWrapper<Represented>) -> (BlueprintHeaderFooterContentWrapper<Represented>) -> Bool",
            "key.typeusr" : "$s2toSb16BlueprintUILists0B26HeaderFooterContentWrapperVyxG_tcD",
            "key.usr" : "s:16BlueprintUILists0A26HeaderFooterContentWrapperV12isEquivalent2toSbACyxG_tF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public var elementRepresentation: <Type usr=\"s:11BlueprintUI7ElementP\">Element<\/Type> { get }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 4889
              }
            ],
            "key.bodylength" : 53,
            "key.bodyoffset" : 4933,
            "key.doc.column" : 9,
            "key.doc.declaration" : "var elementRepresentation: Element { get }",
            "key.doc.discussion" : [
              {
                "Note" : ""
              }
            ],
            "key.doc.file" : "\/Users\/k\/Desktop\/Development\/Listable1\/BlueprintUILists\/Sources\/BlueprintHeaderFooterContent.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/k\/Desktop\/Development\/Listable1\/BlueprintUILists\/Sources\/BlueprintHeaderFooterContent.swift\" line=\"71\" column=\"9\"><Name>elementRepresentation<\/Name><USR>s:16BlueprintUILists0A19HeaderFooterContentP21elementRepresentation0A2UI7Element_pvp<\/USR><Declaration>var elementRepresentation: Element { get }<\/Declaration><CommentParts><Abstract><Para>Required. Create and return the Blueprint element used to represent the content.<\/Para><\/Abstract><Discussion><Note><Para>This documentation comment was inherited from <codeVoice>BlueprintHeaderFooterContent<\/codeVoice>.<\/Para><\/Note><\/Discussion><\/CommentParts><\/Other>",
            "key.doc.line" : 71,
            "key.doc.name" : "elementRepresentation",
            "key.doc.type" : "Other",
            "key.filepath" : "\/Users\/k\/Desktop\/Development\/Listable1\/BlueprintUILists\/Sources\/HeaderFooter.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>elementRepresentation<\/decl.name>: <decl.var.type><ref.protocol usr=\"s:11BlueprintUI7ElementP\">Element<\/ref.protocol><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 91,
            "key.name" : "elementRepresentation",
            "key.namelength" : 21,
            "key.nameoffset" : 4900,
            "key.offset" : 4896,
            "key.overrides" : [
              {
                "key.usr" : "s:16BlueprintUILists0A19HeaderFooterContentP21elementRepresentation0A2UI7Element_pvp"
              }
            ],
            "key.parsed_declaration" : "public var elementRepresentation : Element",
            "key.parsed_scope.end" : 140,
            "key.parsed_scope.start" : 138,
            "key.typename" : "Element",
            "key.typeusr" : "$s11BlueprintUI7Element_pD",
            "key.usr" : "s:16BlueprintUILists0A19HeaderFooterContentP21elementRepresentation0A2UI7Element_pvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public var background: <Type usr=\"s:11BlueprintUI7ElementP\">Element<\/Type>? { get }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 4997
              }
            ],
            "key.bodylength" : 56,
            "key.bodyoffset" : 5031,
            "key.doc.column" : 9,
            "key.doc.declaration" : "var background: Element? { get }",
            "key.doc.discussion" : [
              {
                "Para" : "The default implementation of this method returns nil, and provides no background."
              },
              {
                "Note" : ""
              }
            ],
            "key.doc.file" : "\/Users\/k\/Desktop\/Development\/Listable1\/BlueprintUILists\/Sources\/BlueprintHeaderFooterContent.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/k\/Desktop\/Development\/Listable1\/BlueprintUILists\/Sources\/BlueprintHeaderFooterContent.swift\" line=\"81\" column=\"9\"><Name>background<\/Name><USR>s:16BlueprintUILists0A19HeaderFooterContentP10background0A2UI7Element_pSgvp<\/USR><Declaration>var background: Element? { get }<\/Declaration><CommentParts><Abstract><Para>Optional. Create and return the Blueprint element used to represent the background of the content. You usually provide this method alongside <codeVoice>pressedBackground<\/codeVoice>, if your header has an <codeVoice>onTap<\/codeVoice> handler.<\/Para><\/Abstract><Discussion><rawHTML><![CDATA[<h2>]]><\/rawHTML>Note<rawHTML><![CDATA[<\/h2>]]><\/rawHTML><Para>The default implementation of this method returns nil, and provides no background.<\/Para><Note><Para>This documentation comment was inherited from <codeVoice>BlueprintHeaderFooterContent<\/codeVoice>.<\/Para><\/Note><\/Discussion><\/CommentParts><\/Other>",
            "key.doc.line" : 81,
            "key.doc.name" : "background",
            "key.doc.type" : "Other",
            "key.filepath" : "\/Users\/k\/Desktop\/Development\/Listable1\/BlueprintUILists\/Sources\/HeaderFooter.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>background<\/decl.name>: <decl.var.type><ref.protocol usr=\"s:11BlueprintUI7ElementP\">Element<\/ref.protocol>?<\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 84,
            "key.name" : "background",
            "key.namelength" : 10,
            "key.nameoffset" : 5008,
            "key.offset" : 5004,
            "key.overrides" : [
              {
                "key.usr" : "s:16BlueprintUILists0A19HeaderFooterContentP10background0A2UI7Element_pSgvp"
              }
            ],
            "key.parsed_declaration" : "public var background : Element?",
            "key.parsed_scope.end" : 144,
            "key.parsed_scope.start" : 142,
            "key.typename" : "Element?",
            "key.typeusr" : "$s11BlueprintUI7Element_pSgD",
            "key.usr" : "s:16BlueprintUILists0A19HeaderFooterContentP10background0A2UI7Element_pSgvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public var pressedBackground: <Type usr=\"s:11BlueprintUI7ElementP\">Element<\/Type>? { get }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 5098
              }
            ],
            "key.bodylength" : 63,
            "key.bodyoffset" : 5139,
            "key.doc.column" : 9,
            "key.doc.declaration" : "var pressedBackground: Element? { get }",
            "key.doc.discussion" : [
              {
                "Para" : "The default implementation of this method returns nil, and provides no selected background."
              },
              {
                "Note" : ""
              }
            ],
            "key.doc.file" : "\/Users\/k\/Desktop\/Development\/Listable1\/BlueprintUILists\/Sources\/BlueprintHeaderFooterContent.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/k\/Desktop\/Development\/Listable1\/BlueprintUILists\/Sources\/BlueprintHeaderFooterContent.swift\" line=\"90\" column=\"9\"><Name>pressedBackground<\/Name><USR>s:16BlueprintUILists0A19HeaderFooterContentP17pressedBackground0A2UI7Element_pSgvp<\/USR><Declaration>var pressedBackground: Element? { get }<\/Declaration><CommentParts><Abstract><Para>Optional. Create and return the Blueprint element used to represent the background of the content when it is pressed. You usually provide this method alongside <codeVoice>background<\/codeVoice>, if your header has an <codeVoice>onTap<\/codeVoice> handler.<\/Para><\/Abstract><Discussion><rawHTML><![CDATA[<h2>]]><\/rawHTML>Note<rawHTML><![CDATA[<\/h2>]]><\/rawHTML><Para>The default implementation of this method returns nil, and provides no selected background.<\/Para><Note><Para>This documentation comment was inherited from <codeVoice>BlueprintHeaderFooterContent<\/codeVoice>.<\/Para><\/Note><\/Discussion><\/CommentParts><\/Other>",
            "key.doc.line" : 90,
            "key.doc.name" : "pressedBackground",
            "key.doc.type" : "Other",
            "key.filepath" : "\/Users\/k\/Desktop\/Development\/Listable1\/BlueprintUILists\/Sources\/HeaderFooter.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>pressedBackground<\/decl.name>: <decl.var.type><ref.protocol usr=\"s:11BlueprintUI7ElementP\">Element<\/ref.protocol>?<\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 98,
            "key.name" : "pressedBackground",
            "key.namelength" : 17,
            "key.nameoffset" : 5109,
            "key.offset" : 5105,
            "key.overrides" : [
              {
                "key.usr" : "s:16BlueprintUILists0A19HeaderFooterContentP17pressedBackground0A2UI7Element_pSgvp"
              }
            ],
            "key.parsed_declaration" : "public var pressedBackground : Element?",
            "key.parsed_scope.end" : 148,
            "key.parsed_scope.start" : 146,
            "key.typename" : "Element?",
            "key.typeusr" : "$s11BlueprintUI7Element_pSgD",
            "key.usr" : "s:16BlueprintUILists0A19HeaderFooterContentP17pressedBackground0A2UI7Element_pSgvp"
          }
        ],
        "key.typename" : "BlueprintHeaderFooterContentWrapper<Represented>.Type",
        "key.typeusr" : "$s16BlueprintUILists0A26HeaderFooterContentWrapperVyxGmD",
        "key.usr" : "s:16BlueprintUILists0A26HeaderFooterContentWrapperV"
      }
    ]
  }
}, {
  "\/Users\/k\/Desktop\/Development\/Listable1\/BlueprintUILists\/Sources\/Item.swift" : {
    "key.diagnostic_stage" : "source.diagnostic.stage.swift.parse",
    "key.length" : 6138,
    "key.offset" : 0,
    "key.substructure" : [
      {
        "key.annotated_decl" : "<Declaration>struct Item&lt;Content&gt; : <Type usr=\"s:10ListableUI7AnyItemP\">AnyItem<\/Type> where Content : <Type usr=\"s:10ListableUI11ItemContentP\">ItemContent<\/Type><\/Declaration>",
        "key.bodylength" : 4597,
        "key.bodyoffset" : 143,
        "key.filepath" : "\/Users\/k\/Desktop\/Development\/Listable1\/ListableUI\/Sources\/Item\/Item.swift",
        "key.fully_annotated_decl" : "<decl.struct><syntaxtype.keyword>struct<\/syntaxtype.keyword> <decl.name>Item<\/decl.name>&lt;<decl.generic_type_param usr=\"s:10ListableUI4ItemV7Contentxmfp\"><decl.generic_type_param.name>Content<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt; : <ref.protocol usr=\"s:10ListableUI7AnyItemP\">AnyItem<\/ref.protocol> <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement>Content : <ref.protocol usr=\"s:10ListableUI11ItemContentP\">ItemContent<\/ref.protocol><\/decl.generic_type_requirement><\/decl.struct>",
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 4614,
        "key.modulename" : "ListableUI",
        "key.name" : "Item",
        "key.namelength" : 4,
        "key.nameoffset" : 137,
        "key.offset" : 127,
        "key.parsed_declaration" : "extension Item",
        "key.parsed_scope.end" : 129,
        "key.parsed_scope.start" : 12,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public init&lt;Represented, IDType&gt;(_ representing: <Type usr=\"s:10ListableUI4ItemV16BlueprintUIListsE_10identifier12isEquivalent7element10background18selectedBackground9configureACyAD0dC14ContentWrapperVyqd__qd_0_GGqd___s7KeyPathCyqd__qd_0_GSbqd___qd__tc0dB07Element_pqd___AA05ApplycN4InfoVtcArS_pSgqd___AUtcAVqd___AUtcyANzXEtcAMRszSHRd_0_r0_lufc11RepresentedL_qd__mfp\">Represented<\/Type>, identifier: <Type usr=\"s:s7KeyPathC\">KeyPath<\/Type>&lt;<Type usr=\"s:10ListableUI4ItemV16BlueprintUIListsE_10identifier12isEquivalent7element10background18selectedBackground9configureACyAD0dC14ContentWrapperVyqd__qd_0_GGqd___s7KeyPathCyqd__qd_0_GSbqd___qd__tc0dB07Element_pqd___AA05ApplycN4InfoVtcArS_pSgqd___AUtcAVqd___AUtcyANzXEtcAMRszSHRd_0_r0_lufc11RepresentedL_qd__mfp\">Represented<\/Type>, <Type usr=\"s:10ListableUI4ItemV16BlueprintUIListsE_10identifier12isEquivalent7element10background18selectedBackground9configureACyAD0dC14ContentWrapperVyqd__qd_0_GGqd___s7KeyPathCyqd__qd_0_GSbqd___qd__tc0dB07Element_pqd___AA05ApplycN4InfoVtcArS_pSgqd___AUtcAVqd___AUtcyANzXEtcAMRszSHRd_0_r0_lufc6IDTypeL_qd_0_mfp\">IDType<\/Type>&gt;, isEquivalent: @escaping (<Type usr=\"s:10ListableUI4ItemV16BlueprintUIListsE_10identifier12isEquivalent7element10background18selectedBackground9configureACyAD0dC14ContentWrapperVyqd__qd_0_GGqd___s7KeyPathCyqd__qd_0_GSbqd___qd__tc0dB07Element_pqd___AA05ApplycN4InfoVtcArS_pSgqd___AUtcAVqd___AUtcyANzXEtcAMRszSHRd_0_r0_lufc11RepresentedL_qd__mfp\">Represented<\/Type>, <Type usr=\"s:10ListableUI4ItemV16BlueprintUIListsE_10identifier12isEquivalent7element10background18selectedBackground9configureACyAD0dC14ContentWrapperVyqd__qd_0_GGqd___s7KeyPathCyqd__qd_0_GSbqd___qd__tc0dB07Element_pqd___AA05ApplycN4InfoVtcArS_pSgqd___AUtcAVqd___AUtcyANzXEtcAMRszSHRd_0_r0_lufc11RepresentedL_qd__mfp\">Represented<\/Type>) -&gt; <Type usr=\"s:Sb\">Bool<\/Type>, element: @escaping (<Type usr=\"s:10ListableUI4ItemV16BlueprintUIListsE_10identifier12isEquivalent7element10background18selectedBackground9configureACyAD0dC14ContentWrapperVyqd__qd_0_GGqd___s7KeyPathCyqd__qd_0_GSbqd___qd__tc0dB07Element_pqd___AA05ApplycN4InfoVtcArS_pSgqd___AUtcAVqd___AUtcyANzXEtcAMRszSHRd_0_r0_lufc11RepresentedL_qd__mfp\">Represented<\/Type>, <Type usr=\"s:10ListableUI20ApplyItemContentInfoV\">ApplyItemContentInfo<\/Type>) -&gt; <Type usr=\"s:11BlueprintUI7ElementP\">Element<\/Type>, background: @escaping (<Type usr=\"s:10ListableUI4ItemV16BlueprintUIListsE_10identifier12isEquivalent7element10background18selectedBackground9configureACyAD0dC14ContentWrapperVyqd__qd_0_GGqd___s7KeyPathCyqd__qd_0_GSbqd___qd__tc0dB07Element_pqd___AA05ApplycN4InfoVtcArS_pSgqd___AUtcAVqd___AUtcyANzXEtcAMRszSHRd_0_r0_lufc11RepresentedL_qd__mfp\">Represented<\/Type>, <Type usr=\"s:10ListableUI20ApplyItemContentInfoV\">ApplyItemContentInfo<\/Type>) -&gt; <Type usr=\"s:11BlueprintUI7ElementP\">Element<\/Type>? = { _, _ in nil }, selectedBackground: @escaping (<Type usr=\"s:10ListableUI4ItemV16BlueprintUIListsE_10identifier12isEquivalent7element10background18selectedBackground9configureACyAD0dC14ContentWrapperVyqd__qd_0_GGqd___s7KeyPathCyqd__qd_0_GSbqd___qd__tc0dB07Element_pqd___AA05ApplycN4InfoVtcArS_pSgqd___AUtcAVqd___AUtcyANzXEtcAMRszSHRd_0_r0_lufc11RepresentedL_qd__mfp\">Represented<\/Type>, <Type usr=\"s:10ListableUI20ApplyItemContentInfoV\">ApplyItemContentInfo<\/Type>) -&gt; <Type usr=\"s:11BlueprintUI7ElementP\">Element<\/Type>? = { _, _ in nil }, configure: (inout <Type usr=\"s:10ListableUI4ItemV\">Item<\/Type>&lt;<Type usr=\"s:16BlueprintUILists0A18ItemContentWrapperV\">BlueprintItemContentWrapper<\/Type>&lt;<Type usr=\"s:10ListableUI4ItemV16BlueprintUIListsE_10identifier12isEquivalent7element10background18selectedBackground9configureACyAD0dC14ContentWrapperVyqd__qd_0_GGqd___s7KeyPathCyqd__qd_0_GSbqd___qd__tc0dB07Element_pqd___AA05ApplycN4InfoVtcArS_pSgqd___AUtcAVqd___AUtcyANzXEtcAMRszSHRd_0_r0_lufc11RepresentedL_qd__mfp\">Represented<\/Type>, <Type usr=\"s:10ListableUI4ItemV16BlueprintUIListsE_10identifier12isEquivalent7element10background18selectedBackground9configureACyAD0dC14ContentWrapperVyqd__qd_0_GGqd___s7KeyPathCyqd__qd_0_GSbqd___qd__tc0dB07Element_pqd___AA05ApplycN4InfoVtcArS_pSgqd___AUtcAVqd___AUtcyANzXEtcAMRszSHRd_0_r0_lufc6IDTypeL_qd_0_mfp\">IDType<\/Type>&gt;&gt;) -&gt; () = { _ in }) where Content == <Type usr=\"s:16BlueprintUILists0A18ItemContentWrapperV\">BlueprintItemContentWrapper<\/Type>&lt;Represented, IDType&gt;, IDType : <Type usr=\"s:SH\">Hashable<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 1326
              }
            ],
            "key.bodylength" : 474,
            "key.bodyoffset" : 2029,
            "key.doc.column" : 12,
            "key.doc.comment" : "\nProvides a way to create an `Item` for your Blueprint elements without\nrequiring the creation of a new `BlueprintItemContent` struct.\n\nMost arguments on this method are not required – you must only\nprovide an input, a key path for the backing identifier value, and an element provider.\n\nNote\n----\nThis initializer is helpful if you have to nest an existing element that needs to be used in\na single place, without needing to define an entirely new type.\n\nIf your item is to be used in more than one place, it is recommended that you\ncreate a `BlueprintItemContent` struct to share logic to avoid duplicate code.\n\nExample\n-------\n```\nItem(podcast, identifier: \\.name) { lhs, rhs in\n    lhs.value != rhs.value\n} element: { podcast, info in\n    PodcastElement(podcast: podcast)\n} background: { podcast, info in\n    Box(...)\n} selectedBackground: { podcast, info in\n    Box(...)\n} configure: { item in\n    item.selectionStyle = .tappable\n}\n```",
            "key.doc.declaration" : "public init<Represented, IDType>(_ representing: Represented, identifier: KeyPath<Represented, IDType>, isEquivalent: @escaping (Represented, Represented) -> Bool, element: @escaping (Represented, ApplyItemContentInfo) -> Element, background: @escaping (Represented, ApplyItemContentInfo) -> Element? = { _, _ in nil }, selectedBackground: @escaping (Represented, ApplyItemContentInfo) -> Element? = { _, _ in nil }, configure: (inout Item<BlueprintItemContentWrapper<Represented, IDType>>) -> () = { _ in }) where Content == BlueprintUILists.BlueprintItemContentWrapper<Represented, IDType>, IDType : Hashable",
            "key.doc.discussion" : [
              {
                "Para" : "Most arguments on this method are not required – you must only provide an input, a key path for the backing identifier value, and an element provider."
              },
              {
                "Para" : "This initializer is helpful if you have to nest an existing element that needs to be used in a single place, without needing to define an entirely new type."
              },
              {
                "Para" : "If your item is to be used in more than one place, it is recommended that you create a `BlueprintItemContent` struct to share logic to avoid duplicate code."
              },
              {
                "CodeListing" : ""
              }
            ],
            "key.doc.file" : "\/Users\/k\/Desktop\/Development\/Listable1\/BlueprintUILists\/Sources\/Item.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/k\/Desktop\/Development\/Listable1\/BlueprintUILists\/Sources\/Item.swift\" line=\"44\" column=\"12\"><Name>init(_:identifier:isEquivalent:element:background:selectedBackground:configure:)<\/Name><USR>s:10ListableUI4ItemV16BlueprintUIListsE_10identifier12isEquivalent7element10background18selectedBackground9configureACyAD0dC14ContentWrapperVyqd__qd_0_GGqd___s7KeyPathCyqd__qd_0_GSbqd___qd__tc0dB07Element_pqd___AA05ApplycN4InfoVtcArS_pSgqd___AUtcAVqd___AUtcyANzXEtcAMRszSHRd_0_r0_lufc<\/USR><Declaration>public init&lt;Represented, IDType&gt;(_ representing: Represented, identifier: KeyPath&lt;Represented, IDType&gt;, isEquivalent: @escaping (Represented, Represented) -&gt; Bool, element: @escaping (Represented, ApplyItemContentInfo) -&gt; Element, background: @escaping (Represented, ApplyItemContentInfo) -&gt; Element? = { _, _ in nil }, selectedBackground: @escaping (Represented, ApplyItemContentInfo) -&gt; Element? = { _, _ in nil }, configure: (inout Item&lt;BlueprintItemContentWrapper&lt;Represented, IDType&gt;&gt;) -&gt; () = { _ in }) where Content == BlueprintUILists.BlueprintItemContentWrapper&lt;Represented, IDType&gt;, IDType : Hashable<\/Declaration><CommentParts><Abstract><Para>Provides a way to create an <codeVoice>Item<\/codeVoice> for your Blueprint elements without requiring the creation of a new <codeVoice>BlueprintItemContent<\/codeVoice> struct.<\/Para><\/Abstract><Discussion><Para>Most arguments on this method are not required – you must only provide an input, a key path for the backing identifier value, and an element provider.<\/Para><rawHTML><![CDATA[<h2>]]><\/rawHTML>Note<rawHTML><![CDATA[<\/h2>]]><\/rawHTML><Para>This initializer is helpful if you have to nest an existing element that needs to be used in a single place, without needing to define an entirely new type.<\/Para><Para>If your item is to be used in more than one place, it is recommended that you create a <codeVoice>BlueprintItemContent<\/codeVoice> struct to share logic to avoid duplicate code.<\/Para><rawHTML><![CDATA[<h2>]]><\/rawHTML>Example<rawHTML><![CDATA[<\/h2>]]><\/rawHTML><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[Item(podcast, identifier: \\.name) { lhs, rhs in]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    lhs.value != rhs.value]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[} element: { podcast, info in]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    PodcastElement(podcast: podcast)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[} background: { podcast, info in]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    Box(...)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[} selectedBackground: { podcast, info in]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    Box(...)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[} configure: { item in]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    item.selectionStyle = .tappable]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><\/Discussion><\/CommentParts><\/Function>",
            "key.doc.line" : 44,
            "key.doc.name" : "init(_:identifier:isEquivalent:element:background:selectedBackground:configure:)",
            "key.doc.type" : "Function",
            "key.doclength" : 1174,
            "key.docoffset" : 148,
            "key.filepath" : "\/Users\/k\/Desktop\/Development\/Listable1\/BlueprintUILists\/Sources\/Item.swift",
            "key.fully_annotated_decl" : "<decl.function.constructor><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>init<\/syntaxtype.keyword>&lt;<decl.generic_type_param usr=\"s:10ListableUI4ItemV16BlueprintUIListsE_10identifier12isEquivalent7element10background18selectedBackground9configureACyAD0dC14ContentWrapperVyqd__qd_0_GGqd___s7KeyPathCyqd__qd_0_GSbqd___qd__tc0dB07Element_pqd___AA05ApplycN4InfoVtcArS_pSgqd___AUtcAVqd___AUtcyANzXEtcAMRszSHRd_0_r0_lufc11RepresentedL_qd__mfp\"><decl.generic_type_param.name>Represented<\/decl.generic_type_param.name><\/decl.generic_type_param>, <decl.generic_type_param usr=\"s:10ListableUI4ItemV16BlueprintUIListsE_10identifier12isEquivalent7element10background18selectedBackground9configureACyAD0dC14ContentWrapperVyqd__qd_0_GGqd___s7KeyPathCyqd__qd_0_GSbqd___qd__tc0dB07Element_pqd___AA05ApplycN4InfoVtcArS_pSgqd___AUtcAVqd___AUtcyANzXEtcAMRszSHRd_0_r0_lufc6IDTypeL_qd_0_mfp\"><decl.generic_type_param.name>IDType<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>representing<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:10ListableUI4ItemV16BlueprintUIListsE_10identifier12isEquivalent7element10background18selectedBackground9configureACyAD0dC14ContentWrapperVyqd__qd_0_GGqd___s7KeyPathCyqd__qd_0_GSbqd___qd__tc0dB07Element_pqd___AA05ApplycN4InfoVtcArS_pSgqd___AUtcAVqd___AUtcyANzXEtcAMRszSHRd_0_r0_lufc11RepresentedL_qd__mfp\">Represented<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>identifier<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"s:s7KeyPathC\">KeyPath<\/ref.class>&lt;<ref.generic_type_param usr=\"s:10ListableUI4ItemV16BlueprintUIListsE_10identifier12isEquivalent7element10background18selectedBackground9configureACyAD0dC14ContentWrapperVyqd__qd_0_GGqd___s7KeyPathCyqd__qd_0_GSbqd___qd__tc0dB07Element_pqd___AA05ApplycN4InfoVtcArS_pSgqd___AUtcAVqd___AUtcyANzXEtcAMRszSHRd_0_r0_lufc11RepresentedL_qd__mfp\">Represented<\/ref.generic_type_param>, <ref.generic_type_param usr=\"s:10ListableUI4ItemV16BlueprintUIListsE_10identifier12isEquivalent7element10background18selectedBackground9configureACyAD0dC14ContentWrapperVyqd__qd_0_GGqd___s7KeyPathCyqd__qd_0_GSbqd___qd__tc0dB07Element_pqd___AA05ApplycN4InfoVtcArS_pSgqd___AUtcAVqd___AUtcyANzXEtcAMRszSHRd_0_r0_lufc6IDTypeL_qd_0_mfp\">IDType<\/ref.generic_type_param>&gt;<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>isEquivalent<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@escaping<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.type><ref.generic_type_param usr=\"s:10ListableUI4ItemV16BlueprintUIListsE_10identifier12isEquivalent7element10background18selectedBackground9configureACyAD0dC14ContentWrapperVyqd__qd_0_GGqd___s7KeyPathCyqd__qd_0_GSbqd___qd__tc0dB07Element_pqd___AA05ApplycN4InfoVtcArS_pSgqd___AUtcAVqd___AUtcyANzXEtcAMRszSHRd_0_r0_lufc11RepresentedL_qd__mfp\">Represented<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.generic_type_param usr=\"s:10ListableUI4ItemV16BlueprintUIListsE_10identifier12isEquivalent7element10background18selectedBackground9configureACyAD0dC14ContentWrapperVyqd__qd_0_GGqd___s7KeyPathCyqd__qd_0_GSbqd___qd__tc0dB07Element_pqd___AA05ApplycN4InfoVtcArS_pSgqd___AUtcAVqd___AUtcyANzXEtcAMRszSHRd_0_r0_lufc11RepresentedL_qd__mfp\">Represented<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.function.returntype><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>element<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@escaping<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.type><ref.generic_type_param usr=\"s:10ListableUI4ItemV16BlueprintUIListsE_10identifier12isEquivalent7element10background18selectedBackground9configureACyAD0dC14ContentWrapperVyqd__qd_0_GGqd___s7KeyPathCyqd__qd_0_GSbqd___qd__tc0dB07Element_pqd___AA05ApplycN4InfoVtcArS_pSgqd___AUtcAVqd___AUtcyANzXEtcAMRszSHRd_0_r0_lufc11RepresentedL_qd__mfp\">Represented<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:10ListableUI20ApplyItemContentInfoV\">ApplyItemContentInfo<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.protocol usr=\"s:11BlueprintUI7ElementP\">Element<\/ref.protocol><\/decl.function.returntype><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>background<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@escaping<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.type><ref.generic_type_param usr=\"s:10ListableUI4ItemV16BlueprintUIListsE_10identifier12isEquivalent7element10background18selectedBackground9configureACyAD0dC14ContentWrapperVyqd__qd_0_GGqd___s7KeyPathCyqd__qd_0_GSbqd___qd__tc0dB07Element_pqd___AA05ApplycN4InfoVtcArS_pSgqd___AUtcAVqd___AUtcyANzXEtcAMRszSHRd_0_r0_lufc11RepresentedL_qd__mfp\">Represented<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:10ListableUI20ApplyItemContentInfoV\">ApplyItemContentInfo<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.protocol usr=\"s:11BlueprintUI7ElementP\">Element<\/ref.protocol>?<\/decl.function.returntype><\/decl.var.parameter.type> = { _, _ in nil }<\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>selectedBackground<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@escaping<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.type><ref.generic_type_param usr=\"s:10ListableUI4ItemV16BlueprintUIListsE_10identifier12isEquivalent7element10background18selectedBackground9configureACyAD0dC14ContentWrapperVyqd__qd_0_GGqd___s7KeyPathCyqd__qd_0_GSbqd___qd__tc0dB07Element_pqd___AA05ApplycN4InfoVtcArS_pSgqd___AUtcAVqd___AUtcyANzXEtcAMRszSHRd_0_r0_lufc11RepresentedL_qd__mfp\">Represented<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:10ListableUI20ApplyItemContentInfoV\">ApplyItemContentInfo<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.protocol usr=\"s:11BlueprintUI7ElementP\">Element<\/ref.protocol>?<\/decl.function.returntype><\/decl.var.parameter.type> = { _, _ in nil }<\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>configure<\/decl.var.parameter.argument_label>: <decl.var.parameter.type>(<decl.var.parameter><decl.var.parameter.type><syntaxtype.keyword>inout<\/syntaxtype.keyword> <ref.struct usr=\"s:10ListableUI4ItemV\">Item<\/ref.struct>&lt;<ref.struct usr=\"s:16BlueprintUILists0A18ItemContentWrapperV\">BlueprintItemContentWrapper<\/ref.struct>&lt;<ref.generic_type_param usr=\"s:10ListableUI4ItemV16BlueprintUIListsE_10identifier12isEquivalent7element10background18selectedBackground9configureACyAD0dC14ContentWrapperVyqd__qd_0_GGqd___s7KeyPathCyqd__qd_0_GSbqd___qd__tc0dB07Element_pqd___AA05ApplycN4InfoVtcArS_pSgqd___AUtcAVqd___AUtcyANzXEtcAMRszSHRd_0_r0_lufc11RepresentedL_qd__mfp\">Represented<\/ref.generic_type_param>, <ref.generic_type_param usr=\"s:10ListableUI4ItemV16BlueprintUIListsE_10identifier12isEquivalent7element10background18selectedBackground9configureACyAD0dC14ContentWrapperVyqd__qd_0_GGqd___s7KeyPathCyqd__qd_0_GSbqd___qd__tc0dB07Element_pqd___AA05ApplycN4InfoVtcArS_pSgqd___AUtcAVqd___AUtcyANzXEtcAMRszSHRd_0_r0_lufc6IDTypeL_qd_0_mfp\">IDType<\/ref.generic_type_param>&gt;&gt;<\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><tuple>()<\/tuple><\/decl.function.returntype><\/decl.var.parameter.type> = { _ in }<\/decl.var.parameter>) <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement>Content == <ref.struct usr=\"s:16BlueprintUILists0A18ItemContentWrapperV\">BlueprintItemContentWrapper<\/ref.struct>&lt;Represented, IDType&gt;<\/decl.generic_type_requirement>, <decl.generic_type_requirement>IDType : <ref.protocol usr=\"s:SH\">Hashable<\/ref.protocol><\/decl.generic_type_requirement><\/decl.function.constructor>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 1171,
            "key.name" : "init(_:identifier:isEquivalent:element:background:selectedBackground:configure:)",
            "key.namelength" : 624,
            "key.nameoffset" : 1333,
            "key.offset" : 1333,
            "key.parsed_declaration" : "public init<Represented, IDType:Hashable>(\n    _ representing : Represented,\n    \n    identifier : KeyPath<Represented, IDType>,\n    \n    isEquivalent : @escaping (Represented, Represented) -> Bool,\n    \n    element : @escaping (Represented, ApplyItemContentInfo) -> Element,\n    background : @escaping (Represented, ApplyItemContentInfo) -> Element? = { _, _ in nil },\n    selectedBackground : @escaping (Represented, ApplyItemContentInfo) -> Element? = { _, _ in nil },\n    \n    configure : (inout Item<BlueprintItemContentWrapper<Represented, IDType>>) -> () = { _ in }\n    \n) where Content == BlueprintItemContentWrapper<Represented, IDType>",
            "key.parsed_scope.end" : 72,
            "key.parsed_scope.start" : 44,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:10ListableUI4ItemV16BlueprintUIListsE_10identifier7element10background18selectedBackground9configureACyAD0dC14ContentWrapperVyqd__qd_0_GGqd___s7KeyPathCyqd__qd_0_G0dB07Element_pqd___AA05ApplycL4InfoVtcAqR_pSgqd___ATtcAUqd___ATtcyAMzXEtcALRszSQRd__SHRd_0_r0_lufc\">init(_:identifier:element:background:selectedBackground:configure:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:10ListableUI4ItemV_9configureACyxGx_yAEzXEtcfc\">init(_:configure:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:10ListableUI4ItemV_6sizing7layouts14selectionStyle25insertAndRemoveAnimations12swipeActions10reordering9onDisplay0o3EndP00O6Select0O8Deselect0O6Insert0oJ00O4Move0O6UpdateACyxGx_AA6SizingOSgAA0C7LayoutsVSgAA0c9SelectionG0OSgAA0ctijK0VSgAA05SwipeM13ConfigurationVSgAA10ReorderingVSgyAC02OnP0Vyx_GcSgyAC02OnqP0Vyx_GcSgyAC02OnR0Vyx_GcSgyAC02OnS0Vyx_GcSgyAC02OnT0Vyx_GcSgyAC02OnJ0Vyx_GcSgyAC02OnU0Vyx_GcSgyAC02OnV0Vyx_GcSgtcfc\">init(_:sizing:layouts:selectionStyle:insertAndRemoveAnimations:swipeActions:reordering:onDisplay:onEndDisplay:onSelect:onDeselect:onInsert:onRemove:onMove:onUpdate:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>Represented<\/Declaration>",
                "key.filepath" : "\/Users\/k\/Desktop\/Development\/Listable1\/BlueprintUILists\/Sources\/Item.swift",
                "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>Represented<\/decl.generic_type_param.name><\/decl.generic_type_param>",
                "key.kind" : "source.lang.swift.decl.generic_type_param",
                "key.length" : 11,
                "key.name" : "Represented",
                "key.namelength" : 11,
                "key.nameoffset" : 1338,
                "key.offset" : 1338,
                "key.parsed_declaration" : "public init<Represented",
                "key.parsed_scope.end" : 44,
                "key.parsed_scope.start" : 44,
                "key.typename" : "Represented.Type",
                "key.typeusr" : "$sqd__mD",
                "key.usr" : "s:10ListableUI4ItemV16BlueprintUIListsE_10identifier12isEquivalent7element10background18selectedBackground9configureACyAD0dC14ContentWrapperVyqd__qd_0_GGqd___s7KeyPathCyqd__qd_0_GSbqd___qd__tc0dB07Element_pqd___AA05ApplycN4InfoVtcArS_pSgqd___AUtcAVqd___AUtcyANzXEtcAMRszSHRd_0_r0_lufc11RepresentedL_qd__mfp"
              },
              {
                "key.annotated_decl" : "<Declaration>IDType : <Type usr=\"s:SH\">Hashable<\/Type><\/Declaration>",
                "key.elements" : [
                  {
                    "key.kind" : "source.lang.swift.structure.elem.typeref",
                    "key.length" : 8,
                    "key.offset" : 1358
                  }
                ],
                "key.filepath" : "\/Users\/k\/Desktop\/Development\/Listable1\/BlueprintUILists\/Sources\/Item.swift",
                "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>IDType<\/decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.protocol usr=\"s:SH\">Hashable<\/ref.protocol><\/decl.generic_type_param.constraint><\/decl.generic_type_param>",
                "key.inheritedtypes" : [
                  {
                    "key.name" : "Hashable"
                  }
                ],
                "key.kind" : "source.lang.swift.decl.generic_type_param",
                "key.length" : 15,
                "key.name" : "IDType",
                "key.namelength" : 6,
                "key.nameoffset" : 1351,
                "key.offset" : 1351,
                "key.parsed_declaration" : "public init<Represented, IDType:Hashable",
                "key.parsed_scope.end" : 44,
                "key.parsed_scope.start" : 44,
                "key.typename" : "IDType.Type",
                "key.typeusr" : "$sqd_0_mD",
                "key.usr" : "s:10ListableUI4ItemV16BlueprintUIListsE_10identifier12isEquivalent7element10background18selectedBackground9configureACyAD0dC14ContentWrapperVyqd__qd_0_GGqd___s7KeyPathCyqd__qd_0_GSbqd___qd__tc0dB07Element_pqd___AA05ApplycN4InfoVtcArS_pSgqd___AUtcAVqd___AUtcyANzXEtcAMRszSHRd_0_r0_lufc6IDTypeL_qd_0_mfp"
              }
            ],
            "key.typename" : "<Content, Represented, IDType where Content == BlueprintItemContentWrapper<Represented, IDType>, IDType : Hashable> (Item<Content>.Type) -> (Represented, KeyPath<Represented, IDType>, @escaping (Represented, Represented) -> Bool, @escaping (Represented, ApplyItemContentInfo) -> Element, @escaping (Represented, ApplyItemContentInfo) -> Element?, @escaping (Represented, ApplyItemContentInfo) -> Element?, (inout Item<BlueprintItemContentWrapper<Represented, IDType>>) -> ()) -> Item<Content>",
            "key.typeusr" : "$s_10identifier12isEquivalent7element10background18selectedBackground9configure10ListableUI4ItemVy16BlueprintUILists0lK14ContentWrapperVyqd__qd_0_GGqd___s7KeyPathCyqd__qd_0_GSbqd___qd__tc0lJ07Element_pqd___AG05ApplykN4InfoVtcArS_pSgqd___AUtcAVqd___AUtcyANzXEtcAMRszSHRd_0_r0_luD",
            "key.usr" : "s:10ListableUI4ItemV16BlueprintUIListsE_10identifier12isEquivalent7element10background18selectedBackground9configureACyAD0dC14ContentWrapperVyqd__qd_0_GGqd___s7KeyPathCyqd__qd_0_GSbqd___qd__tc0dB07Element_pqd___AA05ApplycN4InfoVtcArS_pSgqd___AUtcAVqd___AUtcyANzXEtcAMRszSHRd_0_r0_lufc"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public init&lt;Represented, IDType&gt;(_ representing: <Type usr=\"s:10ListableUI4ItemV16BlueprintUIListsE_10identifier7element10background18selectedBackground9configureACyAD0dC14ContentWrapperVyqd__qd_0_GGqd___s7KeyPathCyqd__qd_0_G0dB07Element_pqd___AA05ApplycL4InfoVtcAqR_pSgqd___ATtcAUqd___ATtcyAMzXEtcALRszSQRd__SHRd_0_r0_lufc11RepresentedL_qd__mfp\">Represented<\/Type>, identifier: <Type usr=\"s:s7KeyPathC\">KeyPath<\/Type>&lt;<Type usr=\"s:10ListableUI4ItemV16BlueprintUIListsE_10identifier7element10background18selectedBackground9configureACyAD0dC14ContentWrapperVyqd__qd_0_GGqd___s7KeyPathCyqd__qd_0_G0dB07Element_pqd___AA05ApplycL4InfoVtcAqR_pSgqd___ATtcAUqd___ATtcyAMzXEtcALRszSQRd__SHRd_0_r0_lufc11RepresentedL_qd__mfp\">Represented<\/Type>, <Type usr=\"s:10ListableUI4ItemV16BlueprintUIListsE_10identifier7element10background18selectedBackground9configureACyAD0dC14ContentWrapperVyqd__qd_0_GGqd___s7KeyPathCyqd__qd_0_G0dB07Element_pqd___AA05ApplycL4InfoVtcAqR_pSgqd___ATtcAUqd___ATtcyAMzXEtcALRszSQRd__SHRd_0_r0_lufc6IDTypeL_qd_0_mfp\">IDType<\/Type>&gt;, element: @escaping (<Type usr=\"s:10ListableUI4ItemV16BlueprintUIListsE_10identifier7element10background18selectedBackground9configureACyAD0dC14ContentWrapperVyqd__qd_0_GGqd___s7KeyPathCyqd__qd_0_G0dB07Element_pqd___AA05ApplycL4InfoVtcAqR_pSgqd___ATtcAUqd___ATtcyAMzXEtcALRszSQRd__SHRd_0_r0_lufc11RepresentedL_qd__mfp\">Represented<\/Type>, <Type usr=\"s:10ListableUI20ApplyItemContentInfoV\">ApplyItemContentInfo<\/Type>) -&gt; <Type usr=\"s:11BlueprintUI7ElementP\">Element<\/Type>, background: @escaping (<Type usr=\"s:10ListableUI4ItemV16BlueprintUIListsE_10identifier7element10background18selectedBackground9configureACyAD0dC14ContentWrapperVyqd__qd_0_GGqd___s7KeyPathCyqd__qd_0_G0dB07Element_pqd___AA05ApplycL4InfoVtcAqR_pSgqd___ATtcAUqd___ATtcyAMzXEtcALRszSQRd__SHRd_0_r0_lufc11RepresentedL_qd__mfp\">Represented<\/Type>, <Type usr=\"s:10ListableUI20ApplyItemContentInfoV\">ApplyItemContentInfo<\/Type>) -&gt; <Type usr=\"s:11BlueprintUI7ElementP\">Element<\/Type>? = { _, _ in nil }, selectedBackground: @escaping (<Type usr=\"s:10ListableUI4ItemV16BlueprintUIListsE_10identifier7element10background18selectedBackground9configureACyAD0dC14ContentWrapperVyqd__qd_0_GGqd___s7KeyPathCyqd__qd_0_G0dB07Element_pqd___AA05ApplycL4InfoVtcAqR_pSgqd___ATtcAUqd___ATtcyAMzXEtcALRszSQRd__SHRd_0_r0_lufc11RepresentedL_qd__mfp\">Represented<\/Type>, <Type usr=\"s:10ListableUI20ApplyItemContentInfoV\">ApplyItemContentInfo<\/Type>) -&gt; <Type usr=\"s:11BlueprintUI7ElementP\">Element<\/Type>? = { _, _ in nil }, configure: (inout <Type usr=\"s:10ListableUI4ItemV\">Item<\/Type>&lt;<Type usr=\"s:16BlueprintUILists0A18ItemContentWrapperV\">BlueprintItemContentWrapper<\/Type>&lt;<Type usr=\"s:10ListableUI4ItemV16BlueprintUIListsE_10identifier7element10background18selectedBackground9configureACyAD0dC14ContentWrapperVyqd__qd_0_GGqd___s7KeyPathCyqd__qd_0_G0dB07Element_pqd___AA05ApplycL4InfoVtcAqR_pSgqd___ATtcAUqd___ATtcyAMzXEtcALRszSQRd__SHRd_0_r0_lufc11RepresentedL_qd__mfp\">Represented<\/Type>, <Type usr=\"s:10ListableUI4ItemV16BlueprintUIListsE_10identifier7element10background18selectedBackground9configureACyAD0dC14ContentWrapperVyqd__qd_0_GGqd___s7KeyPathCyqd__qd_0_G0dB07Element_pqd___AA05ApplycL4InfoVtcAqR_pSgqd___ATtcAUqd___ATtcyAMzXEtcALRszSQRd__SHRd_0_r0_lufc6IDTypeL_qd_0_mfp\">IDType<\/Type>&gt;&gt;) -&gt; () = { _ in }) where Content == <Type usr=\"s:16BlueprintUILists0A18ItemContentWrapperV\">BlueprintItemContentWrapper<\/Type>&lt;Represented, IDType&gt;, Represented : <Type usr=\"s:SQ\">Equatable<\/Type>, IDType : <Type usr=\"s:SH\">Hashable<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 3624
              }
            ],
            "key.bodylength" : 474,
            "key.bodyoffset" : 4264,
            "key.doc.column" : 12,
            "key.doc.comment" : "\nProvides a way to create an `Item` for your Blueprint elements without\nrequiring the creation of a new `BlueprintItemContent` struct.\n\nMost arguments on this method are not required – you must only\nprovide an input, a key path for the backing identifier value, and an element provider.\n\nNote\n----\nThis initializer is helpful if you have to nest an existing element that needs to be used in\na single place, without needing to define an entirely new type.\n\nIf your item is to be used in more than one place, it is recommended that you\ncreate a `BlueprintItemContent` struct to share logic to avoid duplicate code.\n\nExample\n-------\n```\nItem(podcast, identifier: \\.name) { podcast, info in\n    PodcastElement(podcast: podcast)\n} background: { podcast, info in\n    Box(...)\n} selectedBackground: { podcast, info in\n    Box(...)\n} configure: { item in\n    item.selectionStyle = .tappable\n}\n```",
            "key.doc.declaration" : "public init<Represented, IDType>(_ representing: Represented, identifier: KeyPath<Represented, IDType>, element: @escaping (Represented, ApplyItemContentInfo) -> Element, background: @escaping (Represented, ApplyItemContentInfo) -> Element? = { _, _ in nil }, selectedBackground: @escaping (Represented, ApplyItemContentInfo) -> Element? = { _, _ in nil }, configure: (inout Item<BlueprintItemContentWrapper<Represented, IDType>>) -> () = { _ in }) where Content == BlueprintUILists.BlueprintItemContentWrapper<Represented, IDType>, Represented : Equatable, IDType : Hashable",
            "key.doc.discussion" : [
              {
                "Para" : "Most arguments on this method are not required – you must only provide an input, a key path for the backing identifier value, and an element provider."
              },
              {
                "Para" : "This initializer is helpful if you have to nest an existing element that needs to be used in a single place, without needing to define an entirely new type."
              },
              {
                "Para" : "If your item is to be used in more than one place, it is recommended that you create a `BlueprintItemContent` struct to share logic to avoid duplicate code."
              },
              {
                "CodeListing" : ""
              }
            ],
            "key.doc.file" : "\/Users\/k\/Desktop\/Development\/Listable1\/BlueprintUILists\/Sources\/Item.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/k\/Desktop\/Development\/Listable1\/BlueprintUILists\/Sources\/Item.swift\" line=\"102\" column=\"12\"><Name>init(_:identifier:element:background:selectedBackground:configure:)<\/Name><USR>s:10ListableUI4ItemV16BlueprintUIListsE_10identifier7element10background18selectedBackground9configureACyAD0dC14ContentWrapperVyqd__qd_0_GGqd___s7KeyPathCyqd__qd_0_G0dB07Element_pqd___AA05ApplycL4InfoVtcAqR_pSgqd___ATtcAUqd___ATtcyAMzXEtcALRszSQRd__SHRd_0_r0_lufc<\/USR><Declaration>public init&lt;Represented, IDType&gt;(_ representing: Represented, identifier: KeyPath&lt;Represented, IDType&gt;, element: @escaping (Represented, ApplyItemContentInfo) -&gt; Element, background: @escaping (Represented, ApplyItemContentInfo) -&gt; Element? = { _, _ in nil }, selectedBackground: @escaping (Represented, ApplyItemContentInfo) -&gt; Element? = { _, _ in nil }, configure: (inout Item&lt;BlueprintItemContentWrapper&lt;Represented, IDType&gt;&gt;) -&gt; () = { _ in }) where Content == BlueprintUILists.BlueprintItemContentWrapper&lt;Represented, IDType&gt;, Represented : Equatable, IDType : Hashable<\/Declaration><CommentParts><Abstract><Para>Provides a way to create an <codeVoice>Item<\/codeVoice> for your Blueprint elements without requiring the creation of a new <codeVoice>BlueprintItemContent<\/codeVoice> struct.<\/Para><\/Abstract><Discussion><Para>Most arguments on this method are not required – you must only provide an input, a key path for the backing identifier value, and an element provider.<\/Para><rawHTML><![CDATA[<h2>]]><\/rawHTML>Note<rawHTML><![CDATA[<\/h2>]]><\/rawHTML><Para>This initializer is helpful if you have to nest an existing element that needs to be used in a single place, without needing to define an entirely new type.<\/Para><Para>If your item is to be used in more than one place, it is recommended that you create a <codeVoice>BlueprintItemContent<\/codeVoice> struct to share logic to avoid duplicate code.<\/Para><rawHTML><![CDATA[<h2>]]><\/rawHTML>Example<rawHTML><![CDATA[<\/h2>]]><\/rawHTML><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[Item(podcast, identifier: \\.name) { podcast, info in]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    PodcastElement(podcast: podcast)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[} background: { podcast, info in]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    Box(...)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[} selectedBackground: { podcast, info in]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    Box(...)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[} configure: { item in]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    item.selectionStyle = .tappable]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><\/Discussion><\/CommentParts><\/Function>",
            "key.doc.line" : 102,
            "key.doc.name" : "init(_:identifier:element:background:selectedBackground:configure:)",
            "key.doc.type" : "Function",
            "key.doclength" : 1106,
            "key.docoffset" : 2514,
            "key.filepath" : "\/Users\/k\/Desktop\/Development\/Listable1\/BlueprintUILists\/Sources\/Item.swift",
            "key.fully_annotated_decl" : "<decl.function.constructor><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>init<\/syntaxtype.keyword>&lt;<decl.generic_type_param usr=\"s:10ListableUI4ItemV16BlueprintUIListsE_10identifier7element10background18selectedBackground9configureACyAD0dC14ContentWrapperVyqd__qd_0_GGqd___s7KeyPathCyqd__qd_0_G0dB07Element_pqd___AA05ApplycL4InfoVtcAqR_pSgqd___ATtcAUqd___ATtcyAMzXEtcALRszSQRd__SHRd_0_r0_lufc11RepresentedL_qd__mfp\"><decl.generic_type_param.name>Represented<\/decl.generic_type_param.name><\/decl.generic_type_param>, <decl.generic_type_param usr=\"s:10ListableUI4ItemV16BlueprintUIListsE_10identifier7element10background18selectedBackground9configureACyAD0dC14ContentWrapperVyqd__qd_0_GGqd___s7KeyPathCyqd__qd_0_G0dB07Element_pqd___AA05ApplycL4InfoVtcAqR_pSgqd___ATtcAUqd___ATtcyAMzXEtcALRszSQRd__SHRd_0_r0_lufc6IDTypeL_qd_0_mfp\"><decl.generic_type_param.name>IDType<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.argument_label>_<\/decl.var.parameter.argument_label> <decl.var.parameter.name>representing<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:10ListableUI4ItemV16BlueprintUIListsE_10identifier7element10background18selectedBackground9configureACyAD0dC14ContentWrapperVyqd__qd_0_GGqd___s7KeyPathCyqd__qd_0_G0dB07Element_pqd___AA05ApplycL4InfoVtcAqR_pSgqd___ATtcAUqd___ATtcyAMzXEtcALRszSQRd__SHRd_0_r0_lufc11RepresentedL_qd__mfp\">Represented<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>identifier<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"s:s7KeyPathC\">KeyPath<\/ref.class>&lt;<ref.generic_type_param usr=\"s:10ListableUI4ItemV16BlueprintUIListsE_10identifier7element10background18selectedBackground9configureACyAD0dC14ContentWrapperVyqd__qd_0_GGqd___s7KeyPathCyqd__qd_0_G0dB07Element_pqd___AA05ApplycL4InfoVtcAqR_pSgqd___ATtcAUqd___ATtcyAMzXEtcALRszSQRd__SHRd_0_r0_lufc11RepresentedL_qd__mfp\">Represented<\/ref.generic_type_param>, <ref.generic_type_param usr=\"s:10ListableUI4ItemV16BlueprintUIListsE_10identifier7element10background18selectedBackground9configureACyAD0dC14ContentWrapperVyqd__qd_0_GGqd___s7KeyPathCyqd__qd_0_G0dB07Element_pqd___AA05ApplycL4InfoVtcAqR_pSgqd___ATtcAUqd___ATtcyAMzXEtcALRszSQRd__SHRd_0_r0_lufc6IDTypeL_qd_0_mfp\">IDType<\/ref.generic_type_param>&gt;<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>element<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@escaping<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.type><ref.generic_type_param usr=\"s:10ListableUI4ItemV16BlueprintUIListsE_10identifier7element10background18selectedBackground9configureACyAD0dC14ContentWrapperVyqd__qd_0_GGqd___s7KeyPathCyqd__qd_0_G0dB07Element_pqd___AA05ApplycL4InfoVtcAqR_pSgqd___ATtcAUqd___ATtcyAMzXEtcALRszSQRd__SHRd_0_r0_lufc11RepresentedL_qd__mfp\">Represented<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:10ListableUI20ApplyItemContentInfoV\">ApplyItemContentInfo<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.protocol usr=\"s:11BlueprintUI7ElementP\">Element<\/ref.protocol><\/decl.function.returntype><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>background<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@escaping<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.type><ref.generic_type_param usr=\"s:10ListableUI4ItemV16BlueprintUIListsE_10identifier7element10background18selectedBackground9configureACyAD0dC14ContentWrapperVyqd__qd_0_GGqd___s7KeyPathCyqd__qd_0_G0dB07Element_pqd___AA05ApplycL4InfoVtcAqR_pSgqd___ATtcAUqd___ATtcyAMzXEtcALRszSQRd__SHRd_0_r0_lufc11RepresentedL_qd__mfp\">Represented<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:10ListableUI20ApplyItemContentInfoV\">ApplyItemContentInfo<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.protocol usr=\"s:11BlueprintUI7ElementP\">Element<\/ref.protocol>?<\/decl.function.returntype><\/decl.var.parameter.type> = { _, _ in nil }<\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>selectedBackground<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@escaping<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.type><ref.generic_type_param usr=\"s:10ListableUI4ItemV16BlueprintUIListsE_10identifier7element10background18selectedBackground9configureACyAD0dC14ContentWrapperVyqd__qd_0_GGqd___s7KeyPathCyqd__qd_0_G0dB07Element_pqd___AA05ApplycL4InfoVtcAqR_pSgqd___ATtcAUqd___ATtcyAMzXEtcALRszSQRd__SHRd_0_r0_lufc11RepresentedL_qd__mfp\">Represented<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:10ListableUI20ApplyItemContentInfoV\">ApplyItemContentInfo<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.protocol usr=\"s:11BlueprintUI7ElementP\">Element<\/ref.protocol>?<\/decl.function.returntype><\/decl.var.parameter.type> = { _, _ in nil }<\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>configure<\/decl.var.parameter.argument_label>: <decl.var.parameter.type>(<decl.var.parameter><decl.var.parameter.type><syntaxtype.keyword>inout<\/syntaxtype.keyword> <ref.struct usr=\"s:10ListableUI4ItemV\">Item<\/ref.struct>&lt;<ref.struct usr=\"s:16BlueprintUILists0A18ItemContentWrapperV\">BlueprintItemContentWrapper<\/ref.struct>&lt;<ref.generic_type_param usr=\"s:10ListableUI4ItemV16BlueprintUIListsE_10identifier7element10background18selectedBackground9configureACyAD0dC14ContentWrapperVyqd__qd_0_GGqd___s7KeyPathCyqd__qd_0_G0dB07Element_pqd___AA05ApplycL4InfoVtcAqR_pSgqd___ATtcAUqd___ATtcyAMzXEtcALRszSQRd__SHRd_0_r0_lufc11RepresentedL_qd__mfp\">Represented<\/ref.generic_type_param>, <ref.generic_type_param usr=\"s:10ListableUI4ItemV16BlueprintUIListsE_10identifier7element10background18selectedBackground9configureACyAD0dC14ContentWrapperVyqd__qd_0_GGqd___s7KeyPathCyqd__qd_0_G0dB07Element_pqd___AA05ApplycL4InfoVtcAqR_pSgqd___ATtcAUqd___ATtcyAMzXEtcALRszSQRd__SHRd_0_r0_lufc6IDTypeL_qd_0_mfp\">IDType<\/ref.generic_type_param>&gt;&gt;<\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><tuple>()<\/tuple><\/decl.function.returntype><\/decl.var.parameter.type> = { _ in }<\/decl.var.parameter>) <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement>Content == <ref.struct usr=\"s:16BlueprintUILists0A18ItemContentWrapperV\">BlueprintItemContentWrapper<\/ref.struct>&lt;Represented, IDType&gt;<\/decl.generic_type_requirement>, <decl.generic_type_requirement>Represented : <ref.protocol usr=\"s:SQ\">Equatable<\/ref.protocol><\/decl.generic_type_requirement>, <decl.generic_type_requirement>IDType : <ref.protocol usr=\"s:SH\">Hashable<\/ref.protocol><\/decl.generic_type_requirement><\/decl.function.constructor>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 1108,
            "key.name" : "init(_:identifier:element:background:selectedBackground:configure:)",
            "key.namelength" : 538,
            "key.nameoffset" : 3631,
            "key.offset" : 3631,
            "key.parsed_declaration" : "public init<Represented, IDType:Hashable>(\n    _ representing : Represented,\n    \n    identifier : KeyPath<Represented, IDType>,\n\n    element : @escaping (Represented, ApplyItemContentInfo) -> Element,\n    background : @escaping (Represented, ApplyItemContentInfo) -> Element? = { _, _ in nil },\n    selectedBackground : @escaping (Represented, ApplyItemContentInfo) -> Element? = { _, _ in nil },\n    \n    configure : (inout Item<BlueprintItemContentWrapper<Represented, IDType>>) -> () = { _ in }\n    \n) where Content == BlueprintItemContentWrapper<Represented, IDType>, Represented:Equatable",
            "key.parsed_scope.end" : 128,
            "key.parsed_scope.start" : 102,
            "key.related_decls" : [
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:10ListableUI4ItemV16BlueprintUIListsE_10identifier12isEquivalent7element10background18selectedBackground9configureACyAD0dC14ContentWrapperVyqd__qd_0_GGqd___s7KeyPathCyqd__qd_0_GSbqd___qd__tc0dB07Element_pqd___AA05ApplycN4InfoVtcArS_pSgqd___AUtcAVqd___AUtcyANzXEtcAMRszSHRd_0_r0_lufc\">init(_:identifier:isEquivalent:element:background:selectedBackground:configure:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:10ListableUI4ItemV_9configureACyxGx_yAEzXEtcfc\">init(_:configure:)<\/RelatedName>"
              },
              {
                "key.annotated_decl" : "<RelatedName usr=\"s:10ListableUI4ItemV_6sizing7layouts14selectionStyle25insertAndRemoveAnimations12swipeActions10reordering9onDisplay0o3EndP00O6Select0O8Deselect0O6Insert0oJ00O4Move0O6UpdateACyxGx_AA6SizingOSgAA0C7LayoutsVSgAA0c9SelectionG0OSgAA0ctijK0VSgAA05SwipeM13ConfigurationVSgAA10ReorderingVSgyAC02OnP0Vyx_GcSgyAC02OnqP0Vyx_GcSgyAC02OnR0Vyx_GcSgyAC02OnS0Vyx_GcSgyAC02OnT0Vyx_GcSgyAC02OnJ0Vyx_GcSgyAC02OnU0Vyx_GcSgyAC02OnV0Vyx_GcSgtcfc\">init(_:sizing:layouts:selectionStyle:insertAndRemoveAnimations:swipeActions:reordering:onDisplay:onEndDisplay:onSelect:onDeselect:onInsert:onRemove:onMove:onUpdate:)<\/RelatedName>"
              }
            ],
            "key.substructure" : [
              {
                "key.annotated_decl" : "<Declaration>Represented<\/Declaration>",
                "key.filepath" : "\/Users\/k\/Desktop\/Development\/Listable1\/BlueprintUILists\/Sources\/Item.swift",
                "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>Represented<\/decl.generic_type_param.name><\/decl.generic_type_param>",
                "key.kind" : "source.lang.swift.decl.generic_type_param",
                "key.length" : 11,
                "key.name" : "Represented",
                "key.namelength" : 11,
                "key.nameoffset" : 3636,
                "key.offset" : 3636,
                "key.parsed_declaration" : "public init<Represented",
                "key.parsed_scope.end" : 102,
                "key.parsed_scope.start" : 102,
                "key.typename" : "Represented.Type",
                "key.typeusr" : "$sqd__mD",
                "key.usr" : "s:10ListableUI4ItemV16BlueprintUIListsE_10identifier7element10background18selectedBackground9configureACyAD0dC14ContentWrapperVyqd__qd_0_GGqd___s7KeyPathCyqd__qd_0_G0dB07Element_pqd___AA05ApplycL4InfoVtcAqR_pSgqd___ATtcAUqd___ATtcyAMzXEtcALRszSQRd__SHRd_0_r0_lufc11RepresentedL_qd__mfp"
              },
              {
                "key.annotated_decl" : "<Declaration>IDType : <Type usr=\"s:SH\">Hashable<\/Type><\/Declaration>",
                "key.elements" : [
                  {
                    "key.kind" : "source.lang.swift.structure.elem.typeref",
                    "key.length" : 8,
                    "key.offset" : 3656
                  }
                ],
                "key.filepath" : "\/Users\/k\/Desktop\/Development\/Listable1\/BlueprintUILists\/Sources\/Item.swift",
                "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>IDType<\/decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.protocol usr=\"s:SH\">Hashable<\/ref.protocol><\/decl.generic_type_param.constraint><\/decl.generic_type_param>",
                "key.inheritedtypes" : [
                  {
                    "key.name" : "Hashable"
                  }
                ],
                "key.kind" : "source.lang.swift.decl.generic_type_param",
                "key.length" : 15,
                "key.name" : "IDType",
                "key.namelength" : 6,
                "key.nameoffset" : 3649,
                "key.offset" : 3649,
                "key.parsed_declaration" : "public init<Represented, IDType:Hashable",
                "key.parsed_scope.end" : 102,
                "key.parsed_scope.start" : 102,
                "key.typename" : "IDType.Type",
                "key.typeusr" : "$sqd_0_mD",
                "key.usr" : "s:10ListableUI4ItemV16BlueprintUIListsE_10identifier7element10background18selectedBackground9configureACyAD0dC14ContentWrapperVyqd__qd_0_GGqd___s7KeyPathCyqd__qd_0_G0dB07Element_pqd___AA05ApplycL4InfoVtcAqR_pSgqd___ATtcAUqd___ATtcyAMzXEtcALRszSQRd__SHRd_0_r0_lufc6IDTypeL_qd_0_mfp"
              }
            ],
            "key.typename" : "<Content, Represented, IDType where Content == BlueprintItemContentWrapper<Represented, IDType>, Represented : Equatable, IDType : Hashable> (Item<Content>.Type) -> (Represented, KeyPath<Represented, IDType>, @escaping (Represented, ApplyItemContentInfo) -> Element, @escaping (Represented, ApplyItemContentInfo) -> Element?, @escaping (Represented, ApplyItemContentInfo) -> Element?, (inout Item<BlueprintItemContentWrapper<Represented, IDType>>) -> ()) -> Item<Content>",
            "key.typeusr" : "$s_10identifier7element10background18selectedBackground9configure10ListableUI4ItemVy16BlueprintUILists0jI14ContentWrapperVyqd__qd_0_GGqd___s7KeyPathCyqd__qd_0_G0jH07Element_pqd___AF05ApplyiL4InfoVtcAqR_pSgqd___ATtcAUqd___ATtcyAMzXEtcALRszSQRd__SHRd_0_r0_luD",
            "key.usr" : "s:10ListableUI4ItemV16BlueprintUIListsE_10identifier7element10background18selectedBackground9configureACyAD0dC14ContentWrapperVyqd__qd_0_GGqd___s7KeyPathCyqd__qd_0_G0dB07Element_pqd___AA05ApplycL4InfoVtcAqR_pSgqd___ATtcAUqd___ATtcyAMzXEtcALRszSQRd__SHRd_0_r0_lufc"
          }
        ],
        "key.typename" : "Item<Content>.Type",
        "key.typeusr" : "$s10ListableUI4ItemVyxGmD",
        "key.usr" : "s:10ListableUI4ItemV"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public struct BlueprintItemContentWrapper&lt;Represented, IDType&gt; : <Type usr=\"s:16BlueprintUILists0A11ItemContentP\">BlueprintItemContent<\/Type> where IDType : <Type usr=\"s:SH\">Hashable<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 4927
          }
        ],
        "key.bodylength" : 1113,
        "key.bodyoffset" : 5023,
        "key.doc.column" : 15,
        "key.doc.comment" : "The `BlueprintItemContent` type that is used to provide\na lightweight way to present an `Element`, without needing to provide an entirely\nnew `BlueprintItemContent` type.",
        "key.doc.declaration" : "public struct BlueprintItemContentWrapper<Represented, IDType> : BlueprintItemContent where IDType : Hashable",
        "key.doc.file" : "\/Users\/k\/Desktop\/Development\/Listable1\/BlueprintUILists\/Sources\/Item.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/k\/Desktop\/Development\/Listable1\/BlueprintUILists\/Sources\/Item.swift\" line=\"135\" column=\"15\"><Name>BlueprintItemContentWrapper<\/Name><USR>s:16BlueprintUILists0A18ItemContentWrapperV<\/USR><Declaration>public struct BlueprintItemContentWrapper&lt;Represented, IDType&gt; : BlueprintItemContent where IDType : Hashable<\/Declaration><CommentParts><Abstract><Para>The <codeVoice>BlueprintItemContent<\/codeVoice> type that is used to provide a lightweight way to present an <codeVoice>Element<\/codeVoice>, without needing to provide an entirely new <codeVoice>BlueprintItemContent<\/codeVoice> type.<\/Para><\/Abstract><\/CommentParts><\/Class>",
        "key.doc.line" : 135,
        "key.doc.name" : "BlueprintItemContentWrapper",
        "key.doc.type" : "Class",
        "key.doclength" : 183,
        "key.docoffset" : 4744,
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 20,
            "key.offset" : 5001
          }
        ],
        "key.filepath" : "\/Users\/k\/Desktop\/Development\/Listable1\/BlueprintUILists\/Sources\/Item.swift",
        "key.fully_annotated_decl" : "<decl.struct><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>struct<\/syntaxtype.keyword> <decl.name>BlueprintItemContentWrapper<\/decl.name>&lt;<decl.generic_type_param usr=\"s:16BlueprintUILists0A18ItemContentWrapperV11Representedxmfp\"><decl.generic_type_param.name>Represented<\/decl.generic_type_param.name><\/decl.generic_type_param>, <decl.generic_type_param usr=\"s:16BlueprintUILists0A18ItemContentWrapperV6IDTypeq_mfp\"><decl.generic_type_param.name>IDType<\/decl.generic_type_param.name><\/decl.generic_type_param>&gt; : <ref.protocol usr=\"s:16BlueprintUILists0A11ItemContentP\">BlueprintItemContent<\/ref.protocol> <syntaxtype.keyword>where<\/syntaxtype.keyword> <decl.generic_type_requirement>IDType : <ref.protocol usr=\"s:SH\">Hashable<\/ref.protocol><\/decl.generic_type_requirement><\/decl.struct>",
        "key.inheritedtypes" : [
          {
            "key.name" : "BlueprintItemContent"
          }
        ],
        "key.kind" : "source.lang.swift.decl.struct",
        "key.length" : 1203,
        "key.name" : "BlueprintItemContentWrapper",
        "key.namelength" : 27,
        "key.nameoffset" : 4941,
        "key.offset" : 4934,
        "key.parsed_declaration" : "public struct BlueprintItemContentWrapper<Represented, IDType:Hashable> : BlueprintItemContent",
        "key.parsed_scope.end" : 164,
        "key.parsed_scope.start" : 135,
        "key.substructure" : [
          {
            "key.annotated_decl" : "<Declaration>Represented<\/Declaration>",
            "key.filepath" : "\/Users\/k\/Desktop\/Development\/Listable1\/BlueprintUILists\/Sources\/Item.swift",
            "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>Represented<\/decl.generic_type_param.name><\/decl.generic_type_param>",
            "key.kind" : "source.lang.swift.decl.generic_type_param",
            "key.length" : 11,
            "key.name" : "Represented",
            "key.namelength" : 11,
            "key.nameoffset" : 4969,
            "key.offset" : 4969,
            "key.parsed_declaration" : "public struct BlueprintItemContentWrapper<Represented",
            "key.parsed_scope.end" : 135,
            "key.parsed_scope.start" : 135,
            "key.typename" : "Represented.Type",
            "key.typeusr" : "$sxmD",
            "key.usr" : "s:16BlueprintUILists0A18ItemContentWrapperV11Representedxmfp"
          },
          {
            "key.annotated_decl" : "<Declaration>IDType : <Type usr=\"s:SH\">Hashable<\/Type><\/Declaration>",
            "key.elements" : [
              {
                "key.kind" : "source.lang.swift.structure.elem.typeref",
                "key.length" : 8,
                "key.offset" : 4989
              }
            ],
            "key.filepath" : "\/Users\/k\/Desktop\/Development\/Listable1\/BlueprintUILists\/Sources\/Item.swift",
            "key.fully_annotated_decl" : "<decl.generic_type_param><decl.generic_type_param.name>IDType<\/decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.protocol usr=\"s:SH\">Hashable<\/ref.protocol><\/decl.generic_type_param.constraint><\/decl.generic_type_param>",
            "key.inheritedtypes" : [
              {
                "key.name" : "Hashable"
              }
            ],
            "key.kind" : "source.lang.swift.decl.generic_type_param",
            "key.length" : 15,
            "key.name" : "IDType",
            "key.namelength" : 6,
            "key.nameoffset" : 4982,
            "key.offset" : 4982,
            "key.parsed_declaration" : "public struct BlueprintItemContentWrapper<Represented, IDType:Hashable",
            "key.parsed_scope.end" : 135,
            "key.parsed_scope.start" : 135,
            "key.typename" : "IDType.Type",
            "key.typeusr" : "$sq_mD",
            "key.usr" : "s:16BlueprintUILists0A18ItemContentWrapperV6IDTypeq_mfp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public let representing: <Type usr=\"s:16BlueprintUILists0A18ItemContentWrapperV11Representedxmfp\">Represented<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 5028
              }
            ],
            "key.filepath" : "\/Users\/k\/Desktop\/Development\/Listable1\/BlueprintUILists\/Sources\/Item.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>representing<\/decl.name>: <decl.var.type><ref.generic_type_param usr=\"s:16BlueprintUILists0A18ItemContentWrapperV11Representedxmfp\">Represented<\/ref.generic_type_param><\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 30,
            "key.name" : "representing",
            "key.namelength" : 12,
            "key.nameoffset" : 5039,
            "key.offset" : 5035,
            "key.parsed_declaration" : "public let representing : Represented",
            "key.parsed_scope.end" : 137,
            "key.parsed_scope.start" : 137,
            "key.typename" : "Represented",
            "key.typeusr" : "$sxD",
            "key.usr" : "s:16BlueprintUILists0A18ItemContentWrapperV12representingxvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>let identifierKeyPath: <Type usr=\"s:s7KeyPathC\">KeyPath<\/Type>&lt;<Type usr=\"s:16BlueprintUILists0A18ItemContentWrapperV11Representedxmfp\">Represented<\/Type>, <Type usr=\"s:16BlueprintUILists0A18ItemContentWrapperV6IDTypeq_mfp\">IDType<\/Type>&gt;<\/Declaration>",
            "key.filepath" : "\/Users\/k\/Desktop\/Development\/Listable1\/BlueprintUILists\/Sources\/Item.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>identifierKeyPath<\/decl.name>: <decl.var.type><ref.class usr=\"s:s7KeyPathC\">KeyPath<\/ref.class>&lt;<ref.generic_type_param usr=\"s:16BlueprintUILists0A18ItemContentWrapperV11Representedxmfp\">Represented<\/ref.generic_type_param>, <ref.generic_type_param usr=\"s:16BlueprintUILists0A18ItemContentWrapperV6IDTypeq_mfp\">IDType<\/ref.generic_type_param>&gt;<\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 52,
            "key.name" : "identifierKeyPath",
            "key.namelength" : 17,
            "key.nameoffset" : 5075,
            "key.offset" : 5071,
            "key.parsed_declaration" : "let identifierKeyPath : KeyPath<Represented, IDType>",
            "key.parsed_scope.end" : 139,
            "key.parsed_scope.start" : 139,
            "key.typename" : "KeyPath<Represented, IDType>",
            "key.typeusr" : "$ss7KeyPathCyxq_GD",
            "key.usr" : "s:16BlueprintUILists0A18ItemContentWrapperV17identifierKeyPaths0gH0Cyxq_Gvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>let isEquivalentProvider: (<Type usr=\"s:16BlueprintUILists0A18ItemContentWrapperV11Representedxmfp\">Represented<\/Type>, <Type usr=\"s:16BlueprintUILists0A18ItemContentWrapperV11Representedxmfp\">Represented<\/Type>) -&gt; <Type usr=\"s:Sb\">Bool<\/Type><\/Declaration>",
            "key.filepath" : "\/Users\/k\/Desktop\/Development\/Listable1\/BlueprintUILists\/Sources\/Item.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>isEquivalentProvider<\/decl.name>: <decl.var.type>(<decl.var.parameter><decl.var.parameter.type><ref.generic_type_param usr=\"s:16BlueprintUILists0A18ItemContentWrapperV11Representedxmfp\">Represented<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.generic_type_param usr=\"s:16BlueprintUILists0A18ItemContentWrapperV11Representedxmfp\">Represented<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.function.returntype><\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 61,
            "key.name" : "isEquivalentProvider",
            "key.namelength" : 20,
            "key.nameoffset" : 5132,
            "key.offset" : 5128,
            "key.parsed_declaration" : "let isEquivalentProvider : (Represented, Represented) -> Bool",
            "key.parsed_scope.end" : 140,
            "key.parsed_scope.start" : 140,
            "key.typename" : "(Represented, Represented) -> Bool",
            "key.typeusr" : "$sySbx_xtcD",
            "key.usr" : "s:16BlueprintUILists0A18ItemContentWrapperV20isEquivalentProviderySbx_xtcvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>let elementProvider: (<Type usr=\"s:16BlueprintUILists0A18ItemContentWrapperV11Representedxmfp\">Represented<\/Type>, <Type usr=\"s:10ListableUI20ApplyItemContentInfoV\">ApplyItemContentInfo<\/Type>) -&gt; <Type usr=\"s:11BlueprintUI7ElementP\">Element<\/Type><\/Declaration>",
            "key.filepath" : "\/Users\/k\/Desktop\/Development\/Listable1\/BlueprintUILists\/Sources\/Item.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>elementProvider<\/decl.name>: <decl.var.type>(<decl.var.parameter><decl.var.parameter.type><ref.generic_type_param usr=\"s:16BlueprintUILists0A18ItemContentWrapperV11Representedxmfp\">Represented<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:10ListableUI20ApplyItemContentInfoV\">ApplyItemContentInfo<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.protocol usr=\"s:11BlueprintUI7ElementP\">Element<\/ref.protocol><\/decl.function.returntype><\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 68,
            "key.name" : "elementProvider",
            "key.namelength" : 15,
            "key.nameoffset" : 5198,
            "key.offset" : 5194,
            "key.parsed_declaration" : "let elementProvider : (Represented, ApplyItemContentInfo) -> Element",
            "key.parsed_scope.end" : 141,
            "key.parsed_scope.start" : 141,
            "key.typename" : "(Represented, ApplyItemContentInfo) -> Element",
            "key.typeusr" : "$sy11BlueprintUI7Element_px_08ListableB020ApplyItemContentInfoVtcD",
            "key.usr" : "s:16BlueprintUILists0A18ItemContentWrapperV15elementProvidery0A2UI7Element_px_08ListableH005ApplycD4InfoVtcvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>let backgroundProvider: (<Type usr=\"s:16BlueprintUILists0A18ItemContentWrapperV11Representedxmfp\">Represented<\/Type>, <Type usr=\"s:10ListableUI20ApplyItemContentInfoV\">ApplyItemContentInfo<\/Type>) -&gt; <Type usr=\"s:11BlueprintUI7ElementP\">Element<\/Type>?<\/Declaration>",
            "key.filepath" : "\/Users\/k\/Desktop\/Development\/Listable1\/BlueprintUILists\/Sources\/Item.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>backgroundProvider<\/decl.name>: <decl.var.type>(<decl.var.parameter><decl.var.parameter.type><ref.generic_type_param usr=\"s:16BlueprintUILists0A18ItemContentWrapperV11Representedxmfp\">Represented<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:10ListableUI20ApplyItemContentInfoV\">ApplyItemContentInfo<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.protocol usr=\"s:11BlueprintUI7ElementP\">Element<\/ref.protocol>?<\/decl.function.returntype><\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 72,
            "key.name" : "backgroundProvider",
            "key.namelength" : 18,
            "key.nameoffset" : 5271,
            "key.offset" : 5267,
            "key.parsed_declaration" : "let backgroundProvider : (Represented, ApplyItemContentInfo) -> Element?",
            "key.parsed_scope.end" : 142,
            "key.parsed_scope.start" : 142,
            "key.typename" : "(Represented, ApplyItemContentInfo) -> Element?",
            "key.typeusr" : "$sy11BlueprintUI7Element_pSgx_08ListableB020ApplyItemContentInfoVtcD",
            "key.usr" : "s:16BlueprintUILists0A18ItemContentWrapperV18backgroundProvidery0A2UI7Element_pSgx_08ListableH005ApplycD4InfoVtcvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>let selectedBackgroundProvider: (<Type usr=\"s:16BlueprintUILists0A18ItemContentWrapperV11Representedxmfp\">Represented<\/Type>, <Type usr=\"s:10ListableUI20ApplyItemContentInfoV\">ApplyItemContentInfo<\/Type>) -&gt; <Type usr=\"s:11BlueprintUI7ElementP\">Element<\/Type>?<\/Declaration>",
            "key.filepath" : "\/Users\/k\/Desktop\/Development\/Listable1\/BlueprintUILists\/Sources\/Item.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>selectedBackgroundProvider<\/decl.name>: <decl.var.type>(<decl.var.parameter><decl.var.parameter.type><ref.generic_type_param usr=\"s:16BlueprintUILists0A18ItemContentWrapperV11Representedxmfp\">Represented<\/ref.generic_type_param><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:10ListableUI20ApplyItemContentInfoV\">ApplyItemContentInfo<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.protocol usr=\"s:11BlueprintUI7ElementP\">Element<\/ref.protocol>?<\/decl.function.returntype><\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 80,
            "key.name" : "selectedBackgroundProvider",
            "key.namelength" : 26,
            "key.nameoffset" : 5348,
            "key.offset" : 5344,
            "key.parsed_declaration" : "let selectedBackgroundProvider : (Represented, ApplyItemContentInfo) -> Element?",
            "key.parsed_scope.end" : 143,
            "key.parsed_scope.start" : 143,
            "key.typename" : "(Represented, ApplyItemContentInfo) -> Element?",
            "key.typeusr" : "$sy11BlueprintUI7Element_pSgx_08ListableB020ApplyItemContentInfoVtcD",
            "key.usr" : "s:16BlueprintUILists0A18ItemContentWrapperV26selectedBackgroundProvidery0A2UI7Element_pSgx_08ListableI005ApplycD4InfoVtcvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public var identifier: <Type usr=\"s:10ListableUI10IdentifierC\">Identifier<\/Type>&lt;`Self`&gt; { get }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 5434
              }
            ],
            "key.bodylength" : 71,
            "key.bodyoffset" : 5475,
            "key.doc.column" : 9,
            "key.doc.declaration" : "var identifier: ListableUI.Identifier<Self> { get }",
            "key.doc.discussion" : [
              {
                "Para" : "Does not have to be globally unique – the list will make a “best guess” if there are multiple items with the same identifier. However, diffing of changes will be more correct with a unique identifier."
              },
              {
                "Para" : "If you’re backing your content with some sort of client or server-provided data, consider using its server or client UUID here, or some other unique identifier from the underlying data model."
              },
              {
                "Note" : ""
              }
            ],
            "key.doc.file" : "\/Users\/k\/Desktop\/Development\/Listable1\/ListableUI\/Sources\/Item\/ItemContent.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/k\/Desktop\/Development\/Listable1\/ListableUI\/Sources\/Item\/ItemContent.swift\" line=\"54\" column=\"9\"><Name>identifier<\/Name><USR>s:10ListableUI11ItemContentP10identifierAA10IdentifierCyxGvp<\/USR><Declaration>var identifier: ListableUI.Identifier&lt;Self&gt; { get }<\/Declaration><CommentParts><Abstract><Para>Identifies the content across updates to the list. This value must remain the same, otherwise the content will be considered a new item, and the old one removed from the list.<\/Para><\/Abstract><Discussion><Para>Does not have to be globally unique – the list will make a “best guess” if there are multiple items with the same identifier. However, diffing of changes will be more correct with a unique identifier.<\/Para><Para>If you’re backing your content with some sort of client or server-provided data, consider using its server or client UUID here, or some other unique identifier from the underlying data model.<\/Para><Note><Para>This documentation comment was inherited from <codeVoice>ItemContent<\/codeVoice>.<\/Para><\/Note><\/Discussion><\/CommentParts><\/Other>",
            "key.doc.line" : 54,
            "key.doc.name" : "identifier",
            "key.doc.type" : "Other",
            "key.filepath" : "\/Users\/k\/Desktop\/Development\/Listable1\/BlueprintUILists\/Sources\/Item.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>identifier<\/decl.name>: <decl.var.type><ref.class usr=\"s:10ListableUI10IdentifierC\">Identifier<\/ref.class>&lt;`Self`&gt;<\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 106,
            "key.name" : "identifier",
            "key.namelength" : 10,
            "key.nameoffset" : 5445,
            "key.offset" : 5441,
            "key.overrides" : [
              {
                "key.usr" : "s:10ListableUI11ItemContentP10identifierAA10IdentifierCyxGvp"
              }
            ],
            "key.parsed_declaration" : "public var identifier: Identifier<Self>",
            "key.parsed_scope.end" : 147,
            "key.parsed_scope.start" : 145,
            "key.typename" : "Identifier<BlueprintItemContentWrapper<Represented, IDType>>",
            "key.typeusr" : "$s10ListableUI10IdentifierCy16BlueprintUILists0D18ItemContentWrapperVyxq_GGD",
            "key.usr" : "s:10ListableUI11ItemContentP10identifierAA10IdentifierCyxGvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func isEquivalent(to other: `Self`) -&gt; <Type usr=\"s:Sb\">Bool<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 5557
              }
            ],
            "key.bodylength" : 78,
            "key.bodyoffset" : 5607,
            "key.doc.column" : 10,
            "key.doc.declaration" : "func isEquivalent(to other: Self) -> Bool",
            "key.doc.discussion" : [
              {
                "Para" : "If this method returns false, the row representing the content is reloaded."
              },
              {
                "Para" : "There is a default implementation of this method when `ItemContent ` conforms to `Equatable` which returns `self == other`."
              },
              {
                "Note" : ""
              }
            ],
            "key.doc.file" : "\/Users\/k\/Desktop\/Development\/Listable1\/ListableUI\/Sources\/Item\/ItemContent.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/k\/Desktop\/Development\/Listable1\/ListableUI\/Sources\/Item\/ItemContent.swift\" line=\"105\" column=\"10\"><Name>isEquivalent(to:)<\/Name><USR>s:10ListableUI11ItemContentP12isEquivalent2toSbx_tF<\/USR><Declaration>func isEquivalent(to other: Self) -&gt; Bool<\/Declaration><CommentParts><Abstract><Para>Return false if the content’ changed based on the old value passed into the function.<\/Para><\/Abstract><Discussion><Para>If this method returns false, the row representing the content is reloaded.<\/Para><rawHTML><![CDATA[<h2>]]><\/rawHTML>Note<rawHTML><![CDATA[<\/h2>]]><\/rawHTML><Para>There is a default implementation of this method when <codeVoice>ItemContent <\/codeVoice> conforms to <codeVoice>Equatable<\/codeVoice> which returns <codeVoice>self == other<\/codeVoice>.<\/Para><Note><Para>This documentation comment was inherited from <codeVoice>ItemContent<\/codeVoice>.<\/Para><\/Note><\/Discussion><\/CommentParts><\/Function>",
            "key.doc.line" : 105,
            "key.doc.name" : "isEquivalent(to:)",
            "key.doc.type" : "Function",
            "key.filepath" : "\/Users\/k\/Desktop\/Development\/Listable1\/BlueprintUILists\/Sources\/Item.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>isEquivalent<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>to<\/decl.var.parameter.argument_label> <decl.var.parameter.name>other<\/decl.var.parameter.name>: <decl.var.parameter.type>`Self`<\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 122,
            "key.name" : "isEquivalent(to:)",
            "key.namelength" : 28,
            "key.nameoffset" : 5569,
            "key.offset" : 5564,
            "key.overrides" : [
              {
                "key.usr" : "s:10ListableUI11ItemContentP12isEquivalent2toSbx_tF"
              }
            ],
            "key.parsed_declaration" : "public func isEquivalent(to other: Self) -> Bool",
            "key.parsed_scope.end" : 151,
            "key.parsed_scope.start" : 149,
            "key.substructure" : [

            ],
            "key.typename" : "<Represented, IDType where IDType : Hashable> (BlueprintItemContentWrapper<Represented, IDType>) -> (BlueprintItemContentWrapper<Represented, IDType>) -> Bool",
            "key.typeusr" : "$s2toSb16BlueprintUILists0B18ItemContentWrapperVyxq_G_tcD",
            "key.usr" : "s:10ListableUI11ItemContentP12isEquivalent2toSbx_tF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func element(with info: <Type usr=\"s:10ListableUI20ApplyItemContentInfoV\">ApplyItemContentInfo<\/Type>) -&gt; <Type usr=\"s:11BlueprintUI7ElementP\">Element<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 5696
              }
            ],
            "key.bodylength" : 59,
            "key.bodyoffset" : 5761,
            "key.doc.column" : 10,
            "key.doc.declaration" : "func element(with info: ApplyItemContentInfo) -> Element",
            "key.doc.discussion" : [
              {
                "Para" : "You can use the provided `ApplyItemContentInfo` to vary the appearance of the element based on the current state of the item."
              },
              {
                "Note" : ""
              }
            ],
            "key.doc.file" : "\/Users\/k\/Desktop\/Development\/Listable1\/BlueprintUILists\/Sources\/BlueprintItemContent.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/k\/Desktop\/Development\/Listable1\/BlueprintUILists\/Sources\/BlueprintItemContent.swift\" line=\"70\" column=\"10\"><Name>element(with:)<\/Name><USR>s:16BlueprintUILists0A11ItemContentP7element4with0A2UI7Element_p08ListableG005ApplycD4InfoV_tF<\/USR><Declaration>func element(with info: ApplyItemContentInfo) -&gt; Element<\/Declaration><CommentParts><Abstract><Para>Required. Create and return the Blueprint element used to represent the content.<\/Para><\/Abstract><Discussion><Para>You can use the provided <codeVoice>ApplyItemContentInfo<\/codeVoice> to vary the appearance of the element based on the current state of the item.<\/Para><Note><Para>This documentation comment was inherited from <codeVoice>BlueprintItemContent<\/codeVoice>.<\/Para><\/Note><\/Discussion><\/CommentParts><\/Function>",
            "key.doc.line" : 70,
            "key.doc.name" : "element(with:)",
            "key.doc.type" : "Function",
            "key.filepath" : "\/Users\/k\/Desktop\/Development\/Listable1\/BlueprintUILists\/Sources\/Item.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>element<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>with<\/decl.var.parameter.argument_label> <decl.var.parameter.name>info<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:10ListableUI20ApplyItemContentInfoV\">ApplyItemContentInfo<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.protocol usr=\"s:11BlueprintUI7ElementP\">Element<\/ref.protocol><\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 118,
            "key.name" : "element(with:)",
            "key.namelength" : 40,
            "key.nameoffset" : 5708,
            "key.offset" : 5703,
            "key.overrides" : [
              {
                "key.usr" : "s:16BlueprintUILists0A11ItemContentP7element4with0A2UI7Element_p08ListableG005ApplycD4InfoV_tF"
              }
            ],
            "key.parsed_declaration" : "public func element(with info: ApplyItemContentInfo) -> Element",
            "key.parsed_scope.end" : 155,
            "key.parsed_scope.start" : 153,
            "key.substructure" : [

            ],
            "key.typename" : "<Represented, IDType where IDType : Hashable> (BlueprintItemContentWrapper<Represented, IDType>) -> (ApplyItemContentInfo) -> Element",
            "key.typeusr" : "$s4with11BlueprintUI7Element_p08ListableC020ApplyItemContentInfoV_tcD",
            "key.usr" : "s:16BlueprintUILists0A11ItemContentP7element4with0A2UI7Element_p08ListableG005ApplycD4InfoV_tF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func backgroundElement(with info: <Type usr=\"s:10ListableUI20ApplyItemContentInfoV\">ApplyItemContentInfo<\/Type>) -&gt; <Type usr=\"s:11BlueprintUI7ElementP\">Element<\/Type>?<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 5831
              }
            ],
            "key.bodylength" : 62,
            "key.bodyoffset" : 5907,
            "key.doc.column" : 10,
            "key.doc.declaration" : "func backgroundElement(with info: ApplyItemContentInfo) -> Element?",
            "key.doc.discussion" : [
              {
                "Para" : "You can use the provided `ApplyItemContentInfo` to vary the appearance of the element based on the current state of the item."
              },
              {
                "Para" : "The default implementation of this method returns nil, and provides no background."
              },
              {
                "Note" : ""
              }
            ],
            "key.doc.file" : "\/Users\/k\/Desktop\/Development\/Listable1\/BlueprintUILists\/Sources\/BlueprintItemContent.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/k\/Desktop\/Development\/Listable1\/BlueprintUILists\/Sources\/BlueprintItemContent.swift\" line=\"83\" column=\"10\"><Name>backgroundElement(with:)<\/Name><USR>s:16BlueprintUILists0A11ItemContentP17backgroundElement4with0A2UI0F0_pSg08ListableH005ApplycD4InfoV_tF<\/USR><Declaration>func backgroundElement(with info: ApplyItemContentInfo) -&gt; Element?<\/Declaration><CommentParts><Abstract><Para>Optional. Create and return the Blueprint element used to represent the background of the content. You usually provide this method alongside <codeVoice>selectedBackgroundElement<\/codeVoice>, if your content supports selection or highlighting.<\/Para><\/Abstract><Discussion><Para>You can use the provided <codeVoice>ApplyItemContentInfo<\/codeVoice> to vary the appearance of the element based on the current state of the item.<\/Para><rawHTML><![CDATA[<h2>]]><\/rawHTML>Note<rawHTML><![CDATA[<\/h2>]]><\/rawHTML><Para>The default implementation of this method returns nil, and provides no background.<\/Para><Note><Para>This documentation comment was inherited from <codeVoice>BlueprintItemContent<\/codeVoice>.<\/Para><\/Note><\/Discussion><\/CommentParts><\/Function>",
            "key.doc.line" : 83,
            "key.doc.name" : "backgroundElement(with:)",
            "key.doc.type" : "Function",
            "key.filepath" : "\/Users\/k\/Desktop\/Development\/Listable1\/BlueprintUILists\/Sources\/Item.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>backgroundElement<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>with<\/decl.var.parameter.argument_label> <decl.var.parameter.name>info<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:10ListableUI20ApplyItemContentInfoV\">ApplyItemContentInfo<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.protocol usr=\"s:11BlueprintUI7ElementP\">Element<\/ref.protocol>?<\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 132,
            "key.name" : "backgroundElement(with:)",
            "key.namelength" : 50,
            "key.nameoffset" : 5843,
            "key.offset" : 5838,
            "key.overrides" : [
              {
                "key.usr" : "s:16BlueprintUILists0A11ItemContentP17backgroundElement4with0A2UI0F0_pSg08ListableH005ApplycD4InfoV_tF"
              }
            ],
            "key.parsed_declaration" : "public func backgroundElement(with info: ApplyItemContentInfo) -> Element?",
            "key.parsed_scope.end" : 159,
            "key.parsed_scope.start" : 157,
            "key.substructure" : [

            ],
            "key.typename" : "<Represented, IDType where IDType : Hashable> (BlueprintItemContentWrapper<Represented, IDType>) -> (ApplyItemContentInfo) -> Element?",
            "key.typeusr" : "$s4with11BlueprintUI7Element_pSg08ListableC020ApplyItemContentInfoV_tcD",
            "key.usr" : "s:16BlueprintUILists0A11ItemContentP17backgroundElement4with0A2UI0F0_pSg08ListableH005ApplycD4InfoV_tF"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func selectedBackgroundElement(with info: <Type usr=\"s:10ListableUI20ApplyItemContentInfoV\">ApplyItemContentInfo<\/Type>) -&gt; <Type usr=\"s:11BlueprintUI7ElementP\">Element<\/Type>?<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 5980
              }
            ],
            "key.bodylength" : 70,
            "key.bodyoffset" : 6064,
            "key.doc.column" : 10,
            "key.doc.declaration" : "func selectedBackgroundElement(with info: ApplyItemContentInfo) -> Element?",
            "key.doc.discussion" : [
              {
                "Para" : "You can use the provided `ApplyItemContentInfo` to vary the appearance of the element based on the current state of the item."
              },
              {
                "Para" : "The default implementation of this method returns nil, and provides no selected background."
              },
              {
                "Note" : ""
              }
            ],
            "key.doc.file" : "\/Users\/k\/Desktop\/Development\/Listable1\/BlueprintUILists\/Sources\/BlueprintItemContent.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/k\/Desktop\/Development\/Listable1\/BlueprintUILists\/Sources\/BlueprintItemContent.swift\" line=\"95\" column=\"10\"><Name>selectedBackgroundElement(with:)<\/Name><USR>s:16BlueprintUILists0A11ItemContentP25selectedBackgroundElement4with0A2UI0G0_pSg08ListableI005ApplycD4InfoV_tF<\/USR><Declaration>func selectedBackgroundElement(with info: ApplyItemContentInfo) -&gt; Element?<\/Declaration><CommentParts><Abstract><Para>Optional. Create and return the Blueprint element used to represent the background of the content when it is selected or highlighted. You usually provide this method alongside <codeVoice>backgroundElement<\/codeVoice>, if your content supports selection or highlighting.<\/Para><\/Abstract><Discussion><Para>You can use the provided <codeVoice>ApplyItemContentInfo<\/codeVoice> to vary the appearance of the element based on the current state of the item.<\/Para><rawHTML><![CDATA[<h2>]]><\/rawHTML>Note<rawHTML><![CDATA[<\/h2>]]><\/rawHTML><Para>The default implementation of this method returns nil, and provides no selected background.<\/Para><Note><Para>This documentation comment was inherited from <codeVoice>BlueprintItemContent<\/codeVoice>.<\/Para><\/Note><\/Discussion><\/CommentParts><\/Function>",
            "key.doc.line" : 95,
            "key.doc.name" : "selectedBackgroundElement(with:)",
            "key.doc.type" : "Function",
            "key.filepath" : "\/Users\/k\/Desktop\/Development\/Listable1\/BlueprintUILists\/Sources\/Item.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>selectedBackgroundElement<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>with<\/decl.var.parameter.argument_label> <decl.var.parameter.name>info<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:10ListableUI20ApplyItemContentInfoV\">ApplyItemContentInfo<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.protocol usr=\"s:11BlueprintUI7ElementP\">Element<\/ref.protocol>?<\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 148,
            "key.name" : "selectedBackgroundElement(with:)",
            "key.namelength" : 58,
            "key.nameoffset" : 5992,
            "key.offset" : 5987,
            "key.overrides" : [
              {
                "key.usr" : "s:16BlueprintUILists0A11ItemContentP25selectedBackgroundElement4with0A2UI0G0_pSg08ListableI005ApplycD4InfoV_tF"
              }
            ],
            "key.parsed_declaration" : "public func selectedBackgroundElement(with info: ApplyItemContentInfo) -> Element?",
            "key.parsed_scope.end" : 163,
            "key.parsed_scope.start" : 161,
            "key.substructure" : [

            ],
            "key.typename" : "<Represented, IDType where IDType : Hashable> (BlueprintItemContentWrapper<Represented, IDType>) -> (ApplyItemContentInfo) -> Element?",
            "key.typeusr" : "$s4with11BlueprintUI7Element_pSg08ListableC020ApplyItemContentInfoV_tcD",
            "key.usr" : "s:16BlueprintUILists0A11ItemContentP25selectedBackgroundElement4with0A2UI0G0_pSg08ListableI005ApplycD4InfoV_tF"
          }
        ],
        "key.typename" : "BlueprintItemContentWrapper<Represented, IDType>.Type",
        "key.typeusr" : "$s16BlueprintUILists0A18ItemContentWrapperVyxq_GmD",
        "key.usr" : "s:16BlueprintUILists0A18ItemContentWrapperV"
      }
    ]
  }
}, {
  "\/Users\/k\/Desktop\/Development\/Listable1\/BlueprintUILists\/Sources\/List.swift" : {
    "key.diagnostic_stage" : "source.diagnostic.stage.swift.parse",
    "key.length" : 4763,
    "key.offset" : 0,
    "key.substructure" : [
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public struct List : <Type usr=\"s:11BlueprintUI7ElementP\">Element<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 1300
          }
        ],
        "key.bodylength" : 1471,
        "key.bodyoffset" : 1330,
        "key.doc.column" : 15,
        "key.doc.comment" : "\nA Blueprint element which can be used to display a Listable `ListView` within\nan element tree.\n\nYou should use the `List` element as follows, just like you'd use the `configure(with:)` method\non `ListView` itself.\n```\nList { list in\n    list.content.header = HeaderFooter(PodcastsHeader())\n\n    let podcasts = Podcast.podcasts.sorted { $0.episode < $1.episode }\n\n    list += Section(\"podcasts\") { section in\n\n        section.header = HeaderFooter(PodcastsSectionHeader())\n\n        section += podcasts.map { podcast in\n            PodcastRow(podcast: podcast)\n        }\n    }\n}\n```\nThe parameter passed to the initialization closure is an instance of `ListProperties`,\nwhich holds the various configuration options and content for the list. See `ListProperties` for\na full overview of all the configuration options available such as animation, layout configuration, etc.\n\nWhen being laid out, a `List` will take up as much space as it is allowed. If you'd like to constrain\nthe size of a list, wrap it in a `ConstrainedSize`, or other size constraining element.",
        "key.doc.declaration" : "public struct List : Element",
        "key.doc.discussion" : [
          {
            "Para" : "You should use the `List` element as follows, just like you’d use the `configure(with:)` method on `ListView` itself."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "The parameter passed to the initialization closure is an instance of `ListProperties`, which holds the various configuration options and content for the list. See `ListProperties` for a full overview of all the configuration options available such as animation, layout configuration, etc."
          },
          {
            "Para" : "When being laid out, a `List` will take up as much space as it is allowed. If you’d like to constrain the size of a list, wrap it in a `ConstrainedSize`, or other size constraining element."
          }
        ],
        "key.doc.file" : "\/Users\/k\/Desktop\/Development\/Listable1\/BlueprintUILists\/Sources\/List.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/k\/Desktop\/Development\/Listable1\/BlueprintUILists\/Sources\/List.swift\" line=\"42\" column=\"15\"><Name>List<\/Name><USR>s:16BlueprintUILists4ListV<\/USR><Declaration>public struct List : Element<\/Declaration><CommentParts><Abstract><Para>A Blueprint element which can be used to display a Listable <codeVoice>ListView<\/codeVoice> within an element tree.<\/Para><\/Abstract><Discussion><Para>You should use the <codeVoice>List<\/codeVoice> element as follows, just like you’d use the <codeVoice>configure(with:)<\/codeVoice> method on <codeVoice>ListView<\/codeVoice> itself.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[List { list in]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    list.content.header = HeaderFooter(PodcastsHeader())]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    let podcasts = Podcast.podcasts.sorted { $0.episode < $1.episode }]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    list += Section(\"podcasts\") { section in]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[        section.header = HeaderFooter(PodcastsSectionHeader())]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[        section += podcasts.map { podcast in]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[            PodcastRow(podcast: podcast)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[        }]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    }]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>The parameter passed to the initialization closure is an instance of <codeVoice>ListProperties<\/codeVoice>, which holds the various configuration options and content for the list. See <codeVoice>ListProperties<\/codeVoice> for a full overview of all the configuration options available such as animation, layout configuration, etc.<\/Para><Para>When being laid out, a <codeVoice>List<\/codeVoice> will take up as much space as it is allowed. If you’d like to constrain the size of a list, wrap it in a <codeVoice>ConstrainedSize<\/codeVoice>, or other size constraining element.<\/Para><\/Discussion><\/CommentParts><\/Class>",
        "key.doc.line" : 42,
        "key.doc.name" : "List",
        "key.doc.type" : "Class",
        "key.doclength" : 1171,
        "key.docoffset" : 129,
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 7,
            "key.offset" : 1321
          }
        ],
        "key.filepath" : "\/Users\/k\/Desktop\/Development\/Listable1\/BlueprintUILists\/Sources\/List.swift",
        "key.fully_annotated_decl" : "<decl.struct><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>struct<\/syntaxtype.keyword> <decl.name>List<\/decl.name> : <ref.protocol usr=\"s:11BlueprintUI7ElementP\">Element<\/ref.protocol><\/decl.struct>",
        "key.inheritedtypes" : [
          {
            "key.name" : "Element"
          }
        ],
        "key.kind" : "source.lang.swift.decl.struct",
        "key.length" : 1495,
        "key.name" : "List",
        "key.namelength" : 4,
        "key.nameoffset" : 1314,
        "key.offset" : 1307,
        "key.parsed_declaration" : "public struct List : Element",
        "key.parsed_scope.end" : 91,
        "key.parsed_scope.start" : 42,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public var properties: <Type usr=\"s:10ListableUI14ListPropertiesV\">ListProperties<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 1580
              }
            ],
            "key.doc.column" : 16,
            "key.doc.comment" : "The properties which back the on-screen list.\n\nWhen it comes time to render the `List` on screen,\n`ListView.configure(with: properties)` is called\nto update the on-screen list with the provided properties.",
            "key.doc.declaration" : "public var properties: ListProperties",
            "key.doc.discussion" : [
              {
                "Para" : "When it comes time to render the `List` on screen, `ListView.configure(with: properties)` is called to update the on-screen list with the provided properties."
              }
            ],
            "key.doc.file" : "\/Users\/k\/Desktop\/Development\/Listable1\/BlueprintUILists\/Sources\/List.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/k\/Desktop\/Development\/Listable1\/BlueprintUILists\/Sources\/List.swift\" line=\"49\" column=\"16\"><Name>properties<\/Name><USR>s:16BlueprintUILists4ListV10properties10ListableUI0C10PropertiesVvp<\/USR><Declaration>public var properties: ListProperties<\/Declaration><CommentParts><Abstract><Para>The properties which back the on-screen list.<\/Para><\/Abstract><Discussion><Para>When it comes time to render the <codeVoice>List<\/codeVoice> on screen, <codeVoice>ListView.configure(with: properties)<\/codeVoice> is called to update the on-screen list with the provided properties.<\/Para><\/Discussion><\/CommentParts><\/Other>",
            "key.doc.line" : 49,
            "key.doc.name" : "properties",
            "key.doc.type" : "Other",
            "key.doclength" : 241,
            "key.docoffset" : 1335,
            "key.filepath" : "\/Users\/k\/Desktop\/Development\/Listable1\/BlueprintUILists\/Sources\/List.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>properties<\/decl.name>: <decl.var.type><ref.struct usr=\"s:10ListableUI14ListPropertiesV\">ListProperties<\/ref.struct><\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 31,
            "key.name" : "properties",
            "key.namelength" : 10,
            "key.nameoffset" : 1591,
            "key.offset" : 1587,
            "key.parsed_declaration" : "public var properties : ListProperties",
            "key.parsed_scope.end" : 49,
            "key.parsed_scope.start" : 49,
            "key.setter_accessibility" : "source.lang.swift.accessibility.public",
            "key.typename" : "ListProperties",
            "key.typeusr" : "$s10ListableUI14ListPropertiesVD",
            "key.usr" : "s:16BlueprintUILists4ListV10properties10ListableUI0C10PropertiesVvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public var sizing: <Type usr=\"s:16BlueprintUILists10ListSizingO\">ListSizing<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 1951
              }
            ],
            "key.doc.column" : 16,
            "key.doc.comment" : "How the `List` is measured when the element is laid out\nby Blueprint.  Defaults to `.fillParent`, which means\nit will take up all the size it is given. You can change this to\n`.measureContent` to instead measure the optimal size.\n\nSee the `ListSizing` documentation for more.",
            "key.doc.declaration" : "public var sizing: ListSizing",
            "key.doc.discussion" : [
              {
                "Para" : "See the `ListSizing` documentation for more."
              }
            ],
            "key.doc.file" : "\/Users\/k\/Desktop\/Development\/Listable1\/BlueprintUILists\/Sources\/List.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/k\/Desktop\/Development\/Listable1\/BlueprintUILists\/Sources\/List.swift\" line=\"57\" column=\"16\"><Name>sizing<\/Name><USR>s:16BlueprintUILists4ListV6sizingAA0C6SizingOvp<\/USR><Declaration>public var sizing: ListSizing<\/Declaration><CommentParts><Abstract><Para>How the <codeVoice>List<\/codeVoice> is measured when the element is laid out by Blueprint.  Defaults to <codeVoice>.fillParent<\/codeVoice>, which means it will take up all the size it is given. You can change this to <codeVoice>.measureContent<\/codeVoice> to instead measure the optimal size.<\/Para><\/Abstract><Discussion><Para>See the <codeVoice>ListSizing<\/codeVoice> documentation for more.<\/Para><\/Discussion><\/CommentParts><\/Other>",
            "key.doc.line" : 57,
            "key.doc.name" : "sizing",
            "key.doc.type" : "Other",
            "key.doclength" : 319,
            "key.docoffset" : 1628,
            "key.filepath" : "\/Users\/k\/Desktop\/Development\/Listable1\/BlueprintUILists\/Sources\/List.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>sizing<\/decl.name>: <decl.var.type><ref.enum usr=\"s:16BlueprintUILists10ListSizingO\">ListSizing<\/ref.enum><\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 23,
            "key.name" : "sizing",
            "key.namelength" : 6,
            "key.nameoffset" : 1962,
            "key.offset" : 1958,
            "key.parsed_declaration" : "public var sizing : ListSizing",
            "key.parsed_scope.end" : 57,
            "key.parsed_scope.start" : 57,
            "key.setter_accessibility" : "source.lang.swift.accessibility.public",
            "key.typename" : "ListSizing",
            "key.typeusr" : "$s16BlueprintUILists10ListSizingOD",
            "key.usr" : "s:16BlueprintUILists4ListV6sizingAA0C6SizingOvp"
          },
          {
            "key.kind" : "source.lang.swift.syntaxtype.comment.mark",
            "key.length" : 20,
            "key.name" : "MARK: Initialization",
            "key.namelength" : 0,
            "key.nameoffset" : 0,
            "key.offset" : 2001
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public init(sizing: <Type usr=\"s:16BlueprintUILists10ListSizingO\">ListSizing<\/Type> = .fillParent, configure: <Type usr=\"s:10ListableUI14ListPropertiesV\">ListProperties<\/Type>.<Type usr=\"s:10ListableUI14ListPropertiesV9Configurea\">Configure<\/Type>)<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 2173
              }
            ],
            "key.bodylength" : 95,
            "key.bodyoffset" : 2281,
            "key.doc.column" : 12,
            "key.doc.comment" : "Create a new list, configured with the provided properties,\nconfigured with the provided `ListProperties` builder.",
            "key.doc.declaration" : "public init(sizing: ListSizing = .fillParent, configure: ListProperties.Configure)",
            "key.doc.file" : "\/Users\/k\/Desktop\/Development\/Listable1\/BlueprintUILists\/Sources\/List.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/k\/Desktop\/Development\/Listable1\/BlueprintUILists\/Sources\/List.swift\" line=\"65\" column=\"12\"><Name>init(sizing:configure:)<\/Name><USR>s:16BlueprintUILists4ListV6sizing9configureAcA0C6SizingO_y10ListableUI0C10PropertiesVzXEtcfc<\/USR><Declaration>public init(sizing: ListSizing = .fillParent, configure: ListProperties.Configure)<\/Declaration><CommentParts><Abstract><Para>Create a new list, configured with the provided properties, configured with the provided <codeVoice>ListProperties<\/codeVoice> builder.<\/Para><\/Abstract><\/CommentParts><\/Function>",
            "key.doc.line" : 65,
            "key.doc.name" : "init(sizing:configure:)",
            "key.doc.type" : "Function",
            "key.doclength" : 127,
            "key.docoffset" : 2042,
            "key.filepath" : "\/Users\/k\/Desktop\/Development\/Listable1\/BlueprintUILists\/Sources\/List.swift",
            "key.fully_annotated_decl" : "<decl.function.constructor><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>init<\/syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>sizing<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.enum usr=\"s:16BlueprintUILists10ListSizingO\">ListSizing<\/ref.enum><\/decl.var.parameter.type> = .fillParent<\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>configure<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:10ListableUI14ListPropertiesV\">ListProperties<\/ref.struct>.<ref.typealias usr=\"s:10ListableUI14ListPropertiesV9Configurea\">Configure<\/ref.typealias><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.constructor>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 197,
            "key.name" : "init(sizing:configure:)",
            "key.namelength" : 99,
            "key.nameoffset" : 2180,
            "key.offset" : 2180,
            "key.parsed_declaration" : "public init(\n    sizing : ListSizing = .fillParent,\n    configure : ListProperties.Configure\n)",
            "key.parsed_scope.end" : 72,
            "key.parsed_scope.start" : 65,
            "key.substructure" : [

            ],
            "key.typename" : "(List.Type) -> (ListSizing, (inout ListProperties) -> ()) -> List",
            "key.typeusr" : "$s6sizing9configure16BlueprintUILists4ListVAC0E6SizingO_y10ListableUI0E10PropertiesVzXEtcD",
            "key.usr" : "s:16BlueprintUILists4ListV6sizing9configureAcA0C6SizingO_y10ListableUI0C10PropertiesVzXEtcfc"
          },
          {
            "key.kind" : "source.lang.swift.syntaxtype.comment.mark",
            "key.length" : 13,
            "key.name" : "MARK: Element",
            "key.namelength" : 0,
            "key.nameoffset" : 0,
            "key.offset" : 2397
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public var content: <Type usr=\"s:11BlueprintUI14ElementContentV\">ElementContent<\/Type> { get }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 2431
              }
            ],
            "key.bodylength" : 207,
            "key.bodyoffset" : 2468,
            "key.doc.column" : 9,
            "key.doc.declaration" : "var content: BlueprintUI.ElementContent { get }",
            "key.doc.discussion" : [
              {
                "Para" : "Elements generally fall into two types:"
              },
              {
                "List-Bullet" : ""
              },
              {
                "Note" : ""
              }
            ],
            "key.doc.file" : "\/Users\/k\/Desktop\/Development\/Listable1\/Pods\/BlueprintUI\/BlueprintUI\/Sources\/Element\/Element.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/k\/Desktop\/Development\/Listable1\/Pods\/BlueprintUI\/BlueprintUI\/Sources\/Element\/Element.swift\" line=\"52\" column=\"9\"><Name>content<\/Name><USR>s:11BlueprintUI7ElementP7contentAA0C7ContentVvp<\/USR><Declaration>var content: BlueprintUI.ElementContent { get }<\/Declaration><CommentParts><Abstract><Para>Returns the content of this element.<\/Para><\/Abstract><Discussion><Para>Elements generally fall into two types:<\/Para><List-Bullet><Item><Para>Leaf elements, or elements that have no children. These elements commonly have an intrinsic size, or some content that can be measured. Leaf elements typically instantiate their content with <codeVoice>ElementContent(measurable:)<\/codeVoice> or similar.<\/Para><\/Item><Item><Para>Container elements: these element have one or more children, which are arranged by a layout implementation. Container elements typically use methods like <codeVoice>ElementContent(layout:configure:)<\/codeVoice> to instantiate their content.<\/Para><\/Item><\/List-Bullet><Note><Para>This documentation comment was inherited from <codeVoice>Element<\/codeVoice>.<\/Para><\/Note><\/Discussion><\/CommentParts><\/Other>",
            "key.doc.line" : 52,
            "key.doc.name" : "content",
            "key.doc.type" : "Other",
            "key.filepath" : "\/Users\/k\/Desktop\/Development\/Listable1\/BlueprintUILists\/Sources\/List.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>content<\/decl.name>: <decl.var.type><ref.struct usr=\"s:11BlueprintUI14ElementContentV\">ElementContent<\/ref.struct><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 238,
            "key.name" : "content",
            "key.namelength" : 7,
            "key.nameoffset" : 2442,
            "key.offset" : 2438,
            "key.overrides" : [
              {
                "key.usr" : "s:11BlueprintUI7ElementP7contentAA0C7ContentVvp"
              }
            ],
            "key.parsed_declaration" : "public var content : ElementContent",
            "key.parsed_scope.end" : 86,
            "key.parsed_scope.start" : 78,
            "key.typename" : "ElementContent",
            "key.typeusr" : "$s11BlueprintUI14ElementContentVD",
            "key.usr" : "s:11BlueprintUI7ElementP7contentAA0C7ContentVvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func backingViewDescription(bounds: <Type usr=\"c:@S@CGRect\">CGRect<\/Type>, subtreeExtent: <Type usr=\"c:@S@CGRect\">CGRect<\/Type>?) -&gt; <Type usr=\"s:11BlueprintUI15ViewDescriptionV\">ViewDescription<\/Type>?<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 2686
              }
            ],
            "key.bodylength" : 17,
            "key.bodyoffset" : 2782,
            "key.doc.column" : 10,
            "key.doc.declaration" : "func backingViewDescription(bounds: CGRect, subtreeExtent: CGRect?) -> BlueprintUI.ViewDescription?",
            "key.doc.discussion" : [
              {
                "Para" : "In Blueprint, elements that are displayed using a live `UIView` instance are referred to as “view-backed”. Elements become view-backed by returning a `ViewDescription` value from this method."
              },
              {
                "Note" : ""
              }
            ],
            "key.doc.file" : "\/Users\/k\/Desktop\/Development\/Listable1\/Pods\/BlueprintUI\/BlueprintUI\/Sources\/Element\/Element.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/k\/Desktop\/Development\/Listable1\/Pods\/BlueprintUI\/BlueprintUI\/Sources\/Element\/Element.swift\" line=\"64\" column=\"10\"><Name>backingViewDescription(bounds:subtreeExtent:)<\/Name><USR>s:11BlueprintUI7ElementP22backingViewDescription6bounds13subtreeExtentAA0eF0VSgSo6CGRectV_AKSgtF<\/USR><Declaration>func backingViewDescription(bounds: CGRect, subtreeExtent: CGRect?) -&gt; BlueprintUI.ViewDescription?<\/Declaration><CommentParts><Abstract><Para>Returns an (optional) description of the view that should back this element.<\/Para><\/Abstract><Parameters><Parameter><Name>bounds<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The bounds of this element after layout is complete.<\/Para><\/Discussion><\/Parameter><Parameter><Name>subtreeExtent<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>A rectangle in the local coordinate space that contains any children. <codeVoice>subtreeExtent<\/codeVoice> will be nil if there are no children.<\/Para><\/Discussion><\/Parameter><\/Parameters><ResultDiscussion><Para>An optional <codeVoice>ViewDescription<\/codeVoice>.<\/Para><\/ResultDiscussion><Discussion><Para>In Blueprint, elements that are displayed using a live <codeVoice>UIView<\/codeVoice> instance are referred to as “view-backed”. Elements become view-backed by returning a <codeVoice>ViewDescription<\/codeVoice> value from this method.<\/Para><Note><Para>This documentation comment was inherited from <codeVoice>Element<\/codeVoice>.<\/Para><\/Note><\/Discussion><\/CommentParts><\/Function>",
            "key.doc.line" : 64,
            "key.doc.name" : "backingViewDescription(bounds:subtreeExtent:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "The bounds of this element after layout is complete."
                  }
                ],
                "name" : "bounds"
              },
              {
                "discussion" : [
                  {
                    "Para" : "A rectangle in the local coordinate space that contains any children. `subtreeExtent` will be nil if there are no children."
                  }
                ],
                "name" : "subtreeExtent"
              }
            ],
            "key.doc.result_discussion" : [
              {
                "Para" : "An optional `ViewDescription`."
              }
            ],
            "key.doc.type" : "Function",
            "key.filepath" : "\/Users\/k\/Desktop\/Development\/Listable1\/BlueprintUILists\/Sources\/List.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>backingViewDescription<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>bounds<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"c:@S@CGRect\">CGRect<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>subtreeExtent<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"c:@S@CGRect\">CGRect<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:11BlueprintUI15ViewDescriptionV\">ViewDescription<\/ref.struct>?<\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 107,
            "key.name" : "backingViewDescription(bounds:subtreeExtent:)",
            "key.namelength" : 62,
            "key.nameoffset" : 2698,
            "key.offset" : 2693,
            "key.overrides" : [
              {
                "key.usr" : "s:11BlueprintUI7ElementP22backingViewDescription6bounds13subtreeExtentAA0eF0VSgSo6CGRectV_AKSgtF"
              }
            ],
            "key.parsed_declaration" : "public func backingViewDescription(bounds: CGRect, subtreeExtent: CGRect?) -> ViewDescription?",
            "key.parsed_scope.end" : 90,
            "key.parsed_scope.start" : 88,
            "key.substructure" : [

            ],
            "key.typename" : "(List) -> (CGRect, CGRect?) -> ViewDescription?",
            "key.typeusr" : "$s6bounds13subtreeExtent11BlueprintUI15ViewDescriptionVSgSo6CGRectV_AHSgtcD",
            "key.usr" : "s:11BlueprintUI7ElementP22backingViewDescription6bounds13subtreeExtentAA0eF0VSgSo6CGRectV_AKSgtF"
          }
        ],
        "key.typename" : "List.Type",
        "key.typeusr" : "$s16BlueprintUILists4ListVmD",
        "key.usr" : "s:16BlueprintUILists4ListV"
      },
      {
        "key.annotated_decl" : "<Declaration>public struct List : <Type usr=\"s:11BlueprintUI7ElementP\">Element<\/Type><\/Declaration>",
        "key.bodylength" : 1940,
        "key.bodyoffset" : 2821,
        "key.doc.column" : 15,
        "key.doc.declaration" : "public struct List : Element",
        "key.doc.discussion" : [
          {
            "Para" : "You should use the `List` element as follows, just like you’d use the `configure(with:)` method on `ListView` itself."
          },
          {
            "CodeListing" : ""
          },
          {
            "Para" : "The parameter passed to the initialization closure is an instance of `ListProperties`, which holds the various configuration options and content for the list. See `ListProperties` for a full overview of all the configuration options available such as animation, layout configuration, etc."
          },
          {
            "Para" : "When being laid out, a `List` will take up as much space as it is allowed. If you’d like to constrain the size of a list, wrap it in a `ConstrainedSize`, or other size constraining element."
          }
        ],
        "key.doc.file" : "\/Users\/k\/Desktop\/Development\/Listable1\/BlueprintUILists\/Sources\/List.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/k\/Desktop\/Development\/Listable1\/BlueprintUILists\/Sources\/List.swift\" line=\"42\" column=\"15\"><Name>List<\/Name><USR>s:16BlueprintUILists4ListV<\/USR><Declaration>public struct List : Element<\/Declaration><CommentParts><Abstract><Para>A Blueprint element which can be used to display a Listable <codeVoice>ListView<\/codeVoice> within an element tree.<\/Para><\/Abstract><Discussion><Para>You should use the <codeVoice>List<\/codeVoice> element as follows, just like you’d use the <codeVoice>configure(with:)<\/codeVoice> method on <codeVoice>ListView<\/codeVoice> itself.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[List { list in]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    list.content.header = HeaderFooter(PodcastsHeader())]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    let podcasts = Podcast.podcasts.sorted { $0.episode < $1.episode }]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    list += Section(\"podcasts\") { section in]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[        section.header = HeaderFooter(PodcastsSectionHeader())]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[        section += podcasts.map { podcast in]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[            PodcastRow(podcast: podcast)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[        }]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    }]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><Para>The parameter passed to the initialization closure is an instance of <codeVoice>ListProperties<\/codeVoice>, which holds the various configuration options and content for the list. See <codeVoice>ListProperties<\/codeVoice> for a full overview of all the configuration options available such as animation, layout configuration, etc.<\/Para><Para>When being laid out, a <codeVoice>List<\/codeVoice> will take up as much space as it is allowed. If you’d like to constrain the size of a list, wrap it in a <codeVoice>ConstrainedSize<\/codeVoice>, or other size constraining element.<\/Para><\/Discussion><\/CommentParts><\/Class>",
        "key.doc.line" : 42,
        "key.doc.name" : "List",
        "key.doc.type" : "Class",
        "key.filepath" : "\/Users\/k\/Desktop\/Development\/Listable1\/BlueprintUILists\/Sources\/List.swift",
        "key.fully_annotated_decl" : "<decl.struct><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>struct<\/syntaxtype.keyword> <decl.name>List<\/decl.name> : <ref.protocol usr=\"s:11BlueprintUI7ElementP\">Element<\/ref.protocol><\/decl.struct>",
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 1957,
        "key.name" : "List",
        "key.namelength" : 4,
        "key.nameoffset" : 2815,
        "key.offset" : 2805,
        "key.parsed_declaration" : "extension List",
        "key.parsed_scope.end" : 155,
        "key.parsed_scope.start" : 94,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.fileprivate",
            "key.annotated_decl" : "<Declaration>fileprivate struct ListContent : <Type usr=\"s:11BlueprintUI7ElementP\">Element<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.fileprivate",
                "key.length" : 11,
                "key.offset" : 2831
              }
            ],
            "key.bodylength" : 1886,
            "key.bodyoffset" : 2873,
            "key.elements" : [
              {
                "key.kind" : "source.lang.swift.structure.elem.typeref",
                "key.length" : 7,
                "key.offset" : 2864
              }
            ],
            "key.filepath" : "\/Users\/k\/Desktop\/Development\/Listable1\/BlueprintUILists\/Sources\/List.swift",
            "key.fully_annotated_decl" : "<decl.struct><syntaxtype.keyword>fileprivate<\/syntaxtype.keyword> <syntaxtype.keyword>struct<\/syntaxtype.keyword> <decl.name>ListContent<\/decl.name> : <ref.protocol usr=\"s:11BlueprintUI7ElementP\">Element<\/ref.protocol><\/decl.struct>",
            "key.inheritedtypes" : [
              {
                "key.name" : "Element"
              }
            ],
            "key.kind" : "source.lang.swift.decl.struct",
            "key.length" : 1917,
            "key.name" : "ListContent",
            "key.namelength" : 11,
            "key.nameoffset" : 2850,
            "key.offset" : 2843,
            "key.parsed_declaration" : "fileprivate struct ListContent : Element",
            "key.parsed_scope.end" : 154,
            "key.parsed_scope.start" : 96,
            "key.substructure" : [
              {
                "key.accessibility" : "source.lang.swift.accessibility.internal",
                "key.annotated_decl" : "<Declaration>var properties: <Type usr=\"s:10ListableUI14ListPropertiesV\">ListProperties<\/Type><\/Declaration>",
                "key.filepath" : "\/Users\/k\/Desktop\/Development\/Listable1\/BlueprintUILists\/Sources\/List.swift",
                "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>properties<\/decl.name>: <decl.var.type><ref.struct usr=\"s:10ListableUI14ListPropertiesV\">ListProperties<\/ref.struct><\/decl.var.type><\/decl.var.instance>",
                "key.kind" : "source.lang.swift.decl.var.instance",
                "key.length" : 31,
                "key.name" : "properties",
                "key.namelength" : 10,
                "key.nameoffset" : 2895,
                "key.offset" : 2891,
                "key.parsed_declaration" : "var properties : ListProperties",
                "key.parsed_scope.end" : 98,
                "key.parsed_scope.start" : 98,
                "key.setter_accessibility" : "source.lang.swift.accessibility.internal",
                "key.typename" : "ListProperties",
                "key.typeusr" : "$s10ListableUI14ListPropertiesVD",
                "key.usr" : "s:16BlueprintUILists4ListV0C7Content33_1D008FD48BBA46D37B823B02ED201314LLV10properties10ListableUI0C10PropertiesVvp"
              },
              {
                "key.accessibility" : "source.lang.swift.accessibility.internal",
                "key.annotated_decl" : "<Declaration>var sizing: <Type usr=\"s:16BlueprintUILists10ListSizingO\">ListSizing<\/Type><\/Declaration>",
                "key.filepath" : "\/Users\/k\/Desktop\/Development\/Listable1\/BlueprintUILists\/Sources\/List.swift",
                "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>sizing<\/decl.name>: <decl.var.type><ref.enum usr=\"s:16BlueprintUILists10ListSizingO\">ListSizing<\/ref.enum><\/decl.var.type><\/decl.var.instance>",
                "key.kind" : "source.lang.swift.decl.var.instance",
                "key.length" : 23,
                "key.name" : "sizing",
                "key.namelength" : 6,
                "key.nameoffset" : 2935,
                "key.offset" : 2931,
                "key.parsed_declaration" : "var sizing : ListSizing",
                "key.parsed_scope.end" : 99,
                "key.parsed_scope.start" : 99,
                "key.setter_accessibility" : "source.lang.swift.accessibility.internal",
                "key.typename" : "ListSizing",
                "key.typeusr" : "$s16BlueprintUILists10ListSizingOD",
                "key.usr" : "s:16BlueprintUILists4ListV0C7Content33_1D008FD48BBA46D37B823B02ED201314LLV6sizingAA0C6SizingOvp"
              },
              {
                "key.accessibility" : "source.lang.swift.accessibility.internal",
                "key.annotated_decl" : "<Declaration>init(properties: <Type usr=\"s:10ListableUI14ListPropertiesV\">ListProperties<\/Type>, sizing: <Type usr=\"s:16BlueprintUILists10ListSizingO\">ListSizing<\/Type>, environment: <Type usr=\"s:11BlueprintUI11EnvironmentV\">Environment<\/Type>)<\/Declaration>",
                "key.bodylength" : 219,
                "key.bodyoffset" : 3101,
                "key.filepath" : "\/Users\/k\/Desktop\/Development\/Listable1\/BlueprintUILists\/Sources\/List.swift",
                "key.fully_annotated_decl" : "<decl.function.constructor><syntaxtype.keyword>init<\/syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>properties<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:10ListableUI14ListPropertiesV\">ListProperties<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>sizing<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.enum usr=\"s:16BlueprintUILists10ListSizingO\">ListSizing<\/ref.enum><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>environment<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:11BlueprintUI11EnvironmentV\">Environment<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.constructor>",
                "key.kind" : "source.lang.swift.decl.function.method.instance",
                "key.length" : 349,
                "key.name" : "init(properties:sizing:environment:)",
                "key.namelength" : 127,
                "key.nameoffset" : 2972,
                "key.offset" : 2972,
                "key.parsed_declaration" : "init(\n    properties : ListProperties,\n    sizing : ListSizing,\n    environment : Environment\n)",
                "key.parsed_scope.end" : 112,
                "key.parsed_scope.start" : 101,
                "key.substructure" : [
                  {
                    "key.annotated_decl" : "<Declaration>var properties: <Type usr=\"s:10ListableUI14ListPropertiesV\">ListProperties<\/Type><\/Declaration>",
                    "key.filepath" : "\/Users\/k\/Desktop\/Development\/Listable1\/BlueprintUILists\/Sources\/List.swift",
                    "key.fully_annotated_decl" : "<decl.var.local><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>properties<\/decl.name>: <decl.var.type><ref.struct usr=\"s:10ListableUI14ListPropertiesV\">ListProperties<\/ref.struct><\/decl.var.type><\/decl.var.local>",
                    "key.kind" : "source.lang.swift.decl.var.local",
                    "key.length" : 27,
                    "key.name" : "properties",
                    "key.namelength" : 10,
                    "key.nameoffset" : 3118,
                    "key.offset" : 3114,
                    "key.parsed_declaration" : "var properties = properties",
                    "key.parsed_scope.end" : 106,
                    "key.parsed_scope.start" : 106,
                    "key.related_decls" : [
                      {
                        "key.annotated_decl" : "<RelatedName usr=\"s:16BlueprintUILists4ListV0C7Content33_1D008FD48BBA46D37B823B02ED201314LLV10properties10ListableUI0C10PropertiesVvp\">properties<\/RelatedName>"
                      }
                    ],
                    "key.typename" : "ListProperties",
                    "key.typeusr" : "$s10ListableUI14ListPropertiesVD",
                    "key.usr" : "s:16BlueprintUILists4ListV0C7Content33_1D008FD48BBA46D37B823B02ED201314LLV10properties6sizing11environmentAF10ListableUI0C10PropertiesV_AA0C6SizingO0aP011EnvironmentVtcfcAGL0_ALvp"
                  }
                ],
                "key.typename" : "(List.ListContent.Type) -> (ListProperties, ListSizing, Environment) -> List.ListContent",
                "key.typeusr" : "$s10properties6sizing11environment16BlueprintUILists4ListV0F7Content33_1D008FD48BBA46D37B823B02ED201314LLV10ListableUI0F10PropertiesV_AD0F6SizingO0dP011EnvironmentVtcD",
                "key.usr" : "s:16BlueprintUILists4ListV0C7Content33_1D008FD48BBA46D37B823B02ED201314LLV10properties6sizing11environmentAF10ListableUI0C10PropertiesV_AA0C6SizingO0aP011EnvironmentVtcfc"
              },
              {
                "key.kind" : "source.lang.swift.syntaxtype.comment.mark",
                "key.length" : 13,
                "key.name" : "MARK: Element",
                "key.namelength" : 0,
                "key.nameoffset" : 0,
                "key.offset" : 3342
              },
              {
                "key.accessibility" : "source.lang.swift.accessibility.public",
                "key.annotated_decl" : "<Declaration>public var content: <Type usr=\"s:11BlueprintUI14ElementContentV\">ElementContent<\/Type> { get }<\/Declaration>",
                "key.attributes" : [
                  {
                    "key.attribute" : "source.decl.attribute.public",
                    "key.length" : 6,
                    "key.offset" : 3377
                  }
                ],
                "key.bodylength" : 874,
                "key.bodyoffset" : 3414,
                "key.doc.column" : 9,
                "key.doc.declaration" : "var content: BlueprintUI.ElementContent { get }",
                "key.doc.discussion" : [
                  {
                    "Para" : "Elements generally fall into two types:"
                  },
                  {
                    "List-Bullet" : ""
                  },
                  {
                    "Note" : ""
                  }
                ],
                "key.doc.file" : "\/Users\/k\/Desktop\/Development\/Listable1\/Pods\/BlueprintUI\/BlueprintUI\/Sources\/Element\/Element.swift",
                "key.doc.full_as_xml" : "<Other file=\"\/Users\/k\/Desktop\/Development\/Listable1\/Pods\/BlueprintUI\/BlueprintUI\/Sources\/Element\/Element.swift\" line=\"52\" column=\"9\"><Name>content<\/Name><USR>s:11BlueprintUI7ElementP7contentAA0C7ContentVvp<\/USR><Declaration>var content: BlueprintUI.ElementContent { get }<\/Declaration><CommentParts><Abstract><Para>Returns the content of this element.<\/Para><\/Abstract><Discussion><Para>Elements generally fall into two types:<\/Para><List-Bullet><Item><Para>Leaf elements, or elements that have no children. These elements commonly have an intrinsic size, or some content that can be measured. Leaf elements typically instantiate their content with <codeVoice>ElementContent(measurable:)<\/codeVoice> or similar.<\/Para><\/Item><Item><Para>Container elements: these element have one or more children, which are arranged by a layout implementation. Container elements typically use methods like <codeVoice>ElementContent(layout:configure:)<\/codeVoice> to instantiate their content.<\/Para><\/Item><\/List-Bullet><Note><Para>This documentation comment was inherited from <codeVoice>Element<\/codeVoice>.<\/Para><\/Note><\/Discussion><\/CommentParts><\/Other>",
                "key.doc.line" : 52,
                "key.doc.name" : "content",
                "key.doc.type" : "Other",
                "key.filepath" : "\/Users\/k\/Desktop\/Development\/Listable1\/BlueprintUILists\/Sources\/List.swift",
                "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>content<\/decl.name>: <decl.var.type><ref.struct usr=\"s:11BlueprintUI14ElementContentV\">ElementContent<\/ref.struct><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
                "key.kind" : "source.lang.swift.decl.var.instance",
                "key.length" : 905,
                "key.name" : "content",
                "key.namelength" : 7,
                "key.nameoffset" : 3388,
                "key.offset" : 3384,
                "key.overrides" : [
                  {
                    "key.usr" : "s:11BlueprintUI7ElementP7contentAA0C7ContentVvp"
                  }
                ],
                "key.parsed_declaration" : "public var content : ElementContent",
                "key.parsed_scope.end" : 140,
                "key.parsed_scope.start" : 116,
                "key.typename" : "ElementContent",
                "key.typeusr" : "$s11BlueprintUI14ElementContentVD",
                "key.usr" : "s:11BlueprintUI7ElementP7contentAA0C7ContentVvp"
              },
              {
                "key.accessibility" : "source.lang.swift.accessibility.public",
                "key.annotated_decl" : "<Declaration>public func backingViewDescription(bounds: <Type usr=\"c:@S@CGRect\">CGRect<\/Type>, subtreeExtent: <Type usr=\"c:@S@CGRect\">CGRect<\/Type>?) -&gt; <Type usr=\"s:11BlueprintUI15ViewDescriptionV\">ViewDescription<\/Type>?<\/Declaration>",
                "key.attributes" : [
                  {
                    "key.attribute" : "source.decl.attribute.public",
                    "key.length" : 6,
                    "key.offset" : 4307
                  }
                ],
                "key.bodylength" : 342,
                "key.bodyoffset" : 4411,
                "key.doc.column" : 10,
                "key.doc.declaration" : "func backingViewDescription(bounds: CGRect, subtreeExtent: CGRect?) -> BlueprintUI.ViewDescription?",
                "key.doc.discussion" : [
                  {
                    "Para" : "In Blueprint, elements that are displayed using a live `UIView` instance are referred to as “view-backed”. Elements become view-backed by returning a `ViewDescription` value from this method."
                  },
                  {
                    "Note" : ""
                  }
                ],
                "key.doc.file" : "\/Users\/k\/Desktop\/Development\/Listable1\/Pods\/BlueprintUI\/BlueprintUI\/Sources\/Element\/Element.swift",
                "key.doc.full_as_xml" : "<Function file=\"\/Users\/k\/Desktop\/Development\/Listable1\/Pods\/BlueprintUI\/BlueprintUI\/Sources\/Element\/Element.swift\" line=\"64\" column=\"10\"><Name>backingViewDescription(bounds:subtreeExtent:)<\/Name><USR>s:11BlueprintUI7ElementP22backingViewDescription6bounds13subtreeExtentAA0eF0VSgSo6CGRectV_AKSgtF<\/USR><Declaration>func backingViewDescription(bounds: CGRect, subtreeExtent: CGRect?) -&gt; BlueprintUI.ViewDescription?<\/Declaration><CommentParts><Abstract><Para>Returns an (optional) description of the view that should back this element.<\/Para><\/Abstract><Parameters><Parameter><Name>bounds<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The bounds of this element after layout is complete.<\/Para><\/Discussion><\/Parameter><Parameter><Name>subtreeExtent<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>A rectangle in the local coordinate space that contains any children. <codeVoice>subtreeExtent<\/codeVoice> will be nil if there are no children.<\/Para><\/Discussion><\/Parameter><\/Parameters><ResultDiscussion><Para>An optional <codeVoice>ViewDescription<\/codeVoice>.<\/Para><\/ResultDiscussion><Discussion><Para>In Blueprint, elements that are displayed using a live <codeVoice>UIView<\/codeVoice> instance are referred to as “view-backed”. Elements become view-backed by returning a <codeVoice>ViewDescription<\/codeVoice> value from this method.<\/Para><Note><Para>This documentation comment was inherited from <codeVoice>Element<\/codeVoice>.<\/Para><\/Note><\/Discussion><\/CommentParts><\/Function>",
                "key.doc.line" : 64,
                "key.doc.name" : "backingViewDescription(bounds:subtreeExtent:)",
                "key.doc.parameters" : [
                  {
                    "discussion" : [
                      {
                        "Para" : "The bounds of this element after layout is complete."
                      }
                    ],
                    "name" : "bounds"
                  },
                  {
                    "discussion" : [
                      {
                        "Para" : "A rectangle in the local coordinate space that contains any children. `subtreeExtent` will be nil if there are no children."
                      }
                    ],
                    "name" : "subtreeExtent"
                  }
                ],
                "key.doc.result_discussion" : [
                  {
                    "Para" : "An optional `ViewDescription`."
                  }
                ],
                "key.doc.type" : "Function",
                "key.filepath" : "\/Users\/k\/Desktop\/Development\/Listable1\/BlueprintUILists\/Sources\/List.swift",
                "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>backingViewDescription<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>bounds<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"c:@S@CGRect\">CGRect<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>subtreeExtent<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"c:@S@CGRect\">CGRect<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:11BlueprintUI15ViewDescriptionV\">ViewDescription<\/ref.struct>?<\/decl.function.returntype><\/decl.function.method.instance>",
                "key.kind" : "source.lang.swift.decl.function.method.instance",
                "key.length" : 440,
                "key.name" : "backingViewDescription(bounds:subtreeExtent:)",
                "key.namelength" : 62,
                "key.nameoffset" : 4319,
                "key.offset" : 4314,
                "key.overrides" : [
                  {
                    "key.usr" : "s:11BlueprintUI7ElementP22backingViewDescription6bounds13subtreeExtentAA0eF0VSgSo6CGRectV_AKSgtF"
                  }
                ],
                "key.parsed_declaration" : "public func backingViewDescription(bounds: CGRect, subtreeExtent: CGRect?) -> ViewDescription?",
                "key.parsed_scope.end" : 153,
                "key.parsed_scope.start" : 142,
                "key.substructure" : [

                ],
                "key.typename" : "(List.ListContent) -> (CGRect, CGRect?) -> ViewDescription?",
                "key.typeusr" : "$s6bounds13subtreeExtent11BlueprintUI15ViewDescriptionVSgSo6CGRectV_AHSgtcD",
                "key.usr" : "s:11BlueprintUI7ElementP22backingViewDescription6bounds13subtreeExtentAA0eF0VSgSo6CGRectV_AKSgtF"
              }
            ],
            "key.typename" : "List.ListContent.Type",
            "key.typeusr" : "$s16BlueprintUILists4ListV0C7Content33_1D008FD48BBA46D37B823B02ED201314LLVmD",
            "key.usr" : "s:16BlueprintUILists4ListV0C7Content33_1D008FD48BBA46D37B823B02ED201314LLV"
          }
        ],
        "key.typename" : "List.Type",
        "key.typeusr" : "$s16BlueprintUILists4ListVmD",
        "key.usr" : "s:16BlueprintUILists4ListV"
      }
    ]
  }
}, {
  "\/Users\/k\/Desktop\/Development\/Listable1\/BlueprintUILists\/Sources\/ListReorderGesture.swift" : {
    "key.diagnostic_stage" : "source.diagnostic.stage.swift.parse",
    "key.length" : 4865,
    "key.offset" : 0,
    "key.substructure" : [
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public struct ListReorderGesture : <Type usr=\"s:11BlueprintUI7ElementP\">Element<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 1081
          }
        ],
        "key.bodylength" : 1721,
        "key.bodyoffset" : 1125,
        "key.doc.column" : 15,
        "key.doc.comment" : "\nAn element that wraps your provided element, to enable support\nfor user-driven re-ordering in a list view.\n\nIf you do not support reordering items, you do not need\nto add this element anywhere in your hierarchy.\n\nThis element on its own has no visual appearance. Thus, you should\nstill render your own reorder dragger \/ handle \/ etc in the passed in element.\n\nIn the below example, we see how to set up the content of a simple item, which contains\na text label and a reorder grabber.\n\n```\nfunc element(with info : ApplyItemContentInfo) -> Element\n{\n    Row { row in\n        row.add(child: Label(text: \"...\"))\n\n        row.add(child: ListReorderGesture(actions: info.actions, wrapping: MyReorderGrabber()))\n\n        \/\/ Could also be written as:\n        row.add(child: MyReorderGrabber().listReorderGesture(with: info.reordering))\n    }\n}\n```",
        "key.doc.declaration" : "public struct ListReorderGesture : Element",
        "key.doc.discussion" : [
          {
            "Para" : "If you do not support reordering items, you do not need to add this element anywhere in your hierarchy."
          },
          {
            "Para" : "This element on its own has no visual appearance. Thus, you should still render your own reorder dragger \/ handle \/ etc in the passed in element."
          },
          {
            "Para" : "In the below example, we see how to set up the content of a simple item, which contains a text label and a reorder grabber."
          },
          {
            "CodeListing" : ""
          }
        ],
        "key.doc.file" : "\/Users\/k\/Desktop\/Development\/Listable1\/BlueprintUILists\/Sources\/ListReorderGesture.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/k\/Desktop\/Development\/Listable1\/BlueprintUILists\/Sources\/ListReorderGesture.swift\" line=\"38\" column=\"15\"><Name>ListReorderGesture<\/Name><USR>s:16BlueprintUILists18ListReorderGestureV<\/USR><Declaration>public struct ListReorderGesture : Element<\/Declaration><CommentParts><Abstract><Para>An element that wraps your provided element, to enable support for user-driven re-ordering in a list view.<\/Para><\/Abstract><Discussion><Para>If you do not support reordering items, you do not need to add this element anywhere in your hierarchy.<\/Para><Para>This element on its own has no visual appearance. Thus, you should still render your own reorder dragger \/ handle \/ etc in the passed in element.<\/Para><Para>In the below example, we see how to set up the content of a simple item, which contains a text label and a reorder grabber.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[func element(with info : ApplyItemContentInfo) -> Element]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[{]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    Row { row in]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[        row.add(child: Label(text: \"...\"))]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[        row.add(child: ListReorderGesture(actions: info.actions, wrapping: MyReorderGrabber()))]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[        \/\/ Could also be written as:]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[        row.add(child: MyReorderGrabber().listReorderGesture(with: info.reordering))]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    }]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><\/Discussion><\/CommentParts><\/Class>",
        "key.doc.line" : 38,
        "key.doc.name" : "ListReorderGesture",
        "key.doc.type" : "Class",
        "key.doclength" : 939,
        "key.docoffset" : 142,
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 7,
            "key.offset" : 1116
          }
        ],
        "key.filepath" : "\/Users\/k\/Desktop\/Development\/Listable1\/BlueprintUILists\/Sources\/ListReorderGesture.swift",
        "key.fully_annotated_decl" : "<decl.struct><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>struct<\/syntaxtype.keyword> <decl.name>ListReorderGesture<\/decl.name> : <ref.protocol usr=\"s:11BlueprintUI7ElementP\">Element<\/ref.protocol><\/decl.struct>",
        "key.inheritedtypes" : [
          {
            "key.name" : "Element"
          }
        ],
        "key.kind" : "source.lang.swift.decl.struct",
        "key.length" : 1759,
        "key.name" : "ListReorderGesture",
        "key.namelength" : 18,
        "key.nameoffset" : 1095,
        "key.offset" : 1088,
        "key.parsed_declaration" : "public struct ListReorderGesture : Element",
        "key.parsed_scope.end" : 97,
        "key.parsed_scope.start" : 38,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public var element: <Type usr=\"s:11BlueprintUI7ElementP\">Element<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 1197
              }
            ],
            "key.doc.column" : 16,
            "key.doc.comment" : "The element which is being wrapped by the reorder gesture.",
            "key.doc.declaration" : "public var element: Element",
            "key.doc.file" : "\/Users\/k\/Desktop\/Development\/Listable1\/BlueprintUILists\/Sources\/ListReorderGesture.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/k\/Desktop\/Development\/Listable1\/BlueprintUILists\/Sources\/ListReorderGesture.swift\" line=\"41\" column=\"16\"><Name>element<\/Name><USR>s:16BlueprintUILists18ListReorderGestureV7element0A2UI7Element_pvp<\/USR><Declaration>public var element: Element<\/Declaration><CommentParts><Abstract><Para>The element which is being wrapped by the reorder gesture.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 41,
            "key.doc.name" : "element",
            "key.doc.type" : "Other",
            "key.doclength" : 63,
            "key.docoffset" : 1130,
            "key.filepath" : "\/Users\/k\/Desktop\/Development\/Listable1\/BlueprintUILists\/Sources\/ListReorderGesture.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>element<\/decl.name>: <decl.var.type><ref.protocol usr=\"s:11BlueprintUI7ElementP\">Element<\/ref.protocol><\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 21,
            "key.name" : "element",
            "key.namelength" : 7,
            "key.nameoffset" : 1208,
            "key.offset" : 1204,
            "key.parsed_declaration" : "public var element : Element",
            "key.parsed_scope.end" : 41,
            "key.parsed_scope.start" : 41,
            "key.setter_accessibility" : "source.lang.swift.accessibility.public",
            "key.typename" : "Element",
            "key.typeusr" : "$s11BlueprintUI7Element_pD",
            "key.usr" : "s:16BlueprintUILists18ListReorderGestureV7element0A2UI7Element_pvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public var isEnabled: <Type usr=\"s:Sb\">Bool<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 1277
              }
            ],
            "key.doc.column" : 16,
            "key.doc.comment" : "If the gesture is enabled or not.",
            "key.doc.declaration" : "public var isEnabled: Bool",
            "key.doc.file" : "\/Users\/k\/Desktop\/Development\/Listable1\/BlueprintUILists\/Sources\/ListReorderGesture.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/k\/Desktop\/Development\/Listable1\/BlueprintUILists\/Sources\/ListReorderGesture.swift\" line=\"44\" column=\"16\"><Name>isEnabled<\/Name><USR>s:16BlueprintUILists18ListReorderGestureV9isEnabledSbvp<\/USR><Declaration>public var isEnabled: Bool<\/Declaration><CommentParts><Abstract><Para>If the gesture is enabled or not.<\/Para><\/Abstract><\/CommentParts><\/Other>",
            "key.doc.line" : 44,
            "key.doc.name" : "isEnabled",
            "key.doc.type" : "Other",
            "key.doclength" : 38,
            "key.docoffset" : 1235,
            "key.filepath" : "\/Users\/k\/Desktop\/Development\/Listable1\/BlueprintUILists\/Sources\/ListReorderGesture.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>isEnabled<\/decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 20,
            "key.name" : "isEnabled",
            "key.namelength" : 9,
            "key.nameoffset" : 1288,
            "key.offset" : 1284,
            "key.parsed_declaration" : "public var isEnabled : Bool",
            "key.parsed_scope.end" : 44,
            "key.parsed_scope.start" : 44,
            "key.setter_accessibility" : "source.lang.swift.accessibility.public",
            "key.typename" : "Bool",
            "key.typeusr" : "$sSbD",
            "key.usr" : "s:16BlueprintUILists18ListReorderGestureV9isEnabledSbvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>typealias <Type usr=\"s:16BlueprintUILists18ListReorderGestureV\">ListReorderGesture<\/Type>.OnStart = () -&gt; <Type usr=\"s:Sb\">Bool<\/Type><\/Declaration>",
            "key.filepath" : "\/Users\/k\/Desktop\/Development\/Listable1\/BlueprintUILists\/Sources\/ListReorderGesture.swift",
            "key.fully_annotated_decl" : "<decl.typealias><syntaxtype.keyword>typealias<\/syntaxtype.keyword> <ref.struct usr=\"s:16BlueprintUILists18ListReorderGestureV\">ListReorderGesture<\/ref.struct>.<decl.name>OnStart<\/decl.name> = () -&gt; <decl.function.returntype><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.function.returntype><\/decl.typealias>",
            "key.kind" : "source.lang.swift.decl.typealias",
            "key.length" : 30,
            "key.name" : "OnStart",
            "key.namelength" : 7,
            "key.nameoffset" : 1324,
            "key.offset" : 1314,
            "key.parsed_declaration" : "typealias OnStart = () -> Bool",
            "key.parsed_scope.end" : 46,
            "key.parsed_scope.start" : 46,
            "key.typename" : "(() -> Bool).Type",
            "key.typeusr" : "$sSbycmD",
            "key.usr" : "s:16BlueprintUILists18ListReorderGestureV7OnStarta"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>var onStart: <Type usr=\"s:16BlueprintUILists18ListReorderGestureV7OnStarta\">OnStart<\/Type><\/Declaration>",
            "key.filepath" : "\/Users\/k\/Desktop\/Development\/Listable1\/BlueprintUILists\/Sources\/ListReorderGesture.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>onStart<\/decl.name>: <decl.var.type><ref.typealias usr=\"s:16BlueprintUILists18ListReorderGestureV7OnStarta\">OnStart<\/ref.typealias><\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 21,
            "key.name" : "onStart",
            "key.namelength" : 7,
            "key.nameoffset" : 1353,
            "key.offset" : 1349,
            "key.parsed_declaration" : "var onStart : OnStart",
            "key.parsed_scope.end" : 47,
            "key.parsed_scope.start" : 47,
            "key.setter_accessibility" : "source.lang.swift.accessibility.internal",
            "key.typename" : "() -> Bool",
            "key.typeusr" : "$sSbycD",
            "key.usr" : "s:16BlueprintUILists18ListReorderGestureV7onStartSbycvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>typealias <Type usr=\"s:16BlueprintUILists18ListReorderGestureV\">ListReorderGesture<\/Type>.OnMove = (<Type usr=\"c:objc(cs)UIPanGestureRecognizer\">UIPanGestureRecognizer<\/Type>) -&gt; ()<\/Declaration>",
            "key.filepath" : "\/Users\/k\/Desktop\/Development\/Listable1\/BlueprintUILists\/Sources\/ListReorderGesture.swift",
            "key.fully_annotated_decl" : "<decl.typealias><syntaxtype.keyword>typealias<\/syntaxtype.keyword> <ref.struct usr=\"s:16BlueprintUILists18ListReorderGestureV\">ListReorderGesture<\/ref.struct>.<decl.name>OnMove<\/decl.name> = (<decl.var.parameter><decl.var.parameter.type><ref.class usr=\"c:objc(cs)UIPanGestureRecognizer\">UIPanGestureRecognizer<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><tuple>()<\/tuple><\/decl.function.returntype><\/decl.typealias>",
            "key.kind" : "source.lang.swift.decl.typealias",
            "key.length" : 49,
            "key.name" : "OnMove",
            "key.namelength" : 6,
            "key.nameoffset" : 1390,
            "key.offset" : 1380,
            "key.parsed_declaration" : "typealias OnMove = (UIPanGestureRecognizer) -> ()",
            "key.parsed_scope.end" : 49,
            "key.parsed_scope.start" : 49,
            "key.typename" : "((UIPanGestureRecognizer) -> ()).Type",
            "key.typeusr" : "$sySo22UIPanGestureRecognizerCcmD",
            "key.usr" : "s:16BlueprintUILists18ListReorderGestureV6OnMovea"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>var onMove: <Type usr=\"s:16BlueprintUILists18ListReorderGestureV6OnMovea\">OnMove<\/Type><\/Declaration>",
            "key.filepath" : "\/Users\/k\/Desktop\/Development\/Listable1\/BlueprintUILists\/Sources\/ListReorderGesture.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>onMove<\/decl.name>: <decl.var.type><ref.typealias usr=\"s:16BlueprintUILists18ListReorderGestureV6OnMovea\">OnMove<\/ref.typealias><\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 19,
            "key.name" : "onMove",
            "key.namelength" : 6,
            "key.nameoffset" : 1438,
            "key.offset" : 1434,
            "key.parsed_declaration" : "var onMove : OnMove",
            "key.parsed_scope.end" : 50,
            "key.parsed_scope.start" : 50,
            "key.setter_accessibility" : "source.lang.swift.accessibility.internal",
            "key.typename" : "(UIPanGestureRecognizer) -> ()",
            "key.typeusr" : "$syySo22UIPanGestureRecognizerCcD",
            "key.usr" : "s:16BlueprintUILists18ListReorderGestureV6onMoveyySo05UIPanE10RecognizerCcvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>typealias <Type usr=\"s:16BlueprintUILists18ListReorderGestureV\">ListReorderGesture<\/Type>.OnDone = () -&gt; ()<\/Declaration>",
            "key.filepath" : "\/Users\/k\/Desktop\/Development\/Listable1\/BlueprintUILists\/Sources\/ListReorderGesture.swift",
            "key.fully_annotated_decl" : "<decl.typealias><syntaxtype.keyword>typealias<\/syntaxtype.keyword> <ref.struct usr=\"s:16BlueprintUILists18ListReorderGestureV\">ListReorderGesture<\/ref.struct>.<decl.name>OnDone<\/decl.name> = () -&gt; <decl.function.returntype><tuple>()<\/tuple><\/decl.function.returntype><\/decl.typealias>",
            "key.kind" : "source.lang.swift.decl.typealias",
            "key.length" : 27,
            "key.name" : "OnDone",
            "key.namelength" : 6,
            "key.nameoffset" : 1473,
            "key.offset" : 1463,
            "key.parsed_declaration" : "typealias OnDone = () -> ()",
            "key.parsed_scope.end" : 52,
            "key.parsed_scope.start" : 52,
            "key.typename" : "(() -> ()).Type",
            "key.typeusr" : "$syycmD",
            "key.usr" : "s:16BlueprintUILists18ListReorderGestureV6OnDonea"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.internal",
            "key.annotated_decl" : "<Declaration>var onDone: <Type usr=\"s:16BlueprintUILists18ListReorderGestureV6OnDonea\">OnDone<\/Type><\/Declaration>",
            "key.filepath" : "\/Users\/k\/Desktop\/Development\/Listable1\/BlueprintUILists\/Sources\/ListReorderGesture.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>onDone<\/decl.name>: <decl.var.type><ref.typealias usr=\"s:16BlueprintUILists18ListReorderGestureV6OnDonea\">OnDone<\/ref.typealias><\/decl.var.type><\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 19,
            "key.name" : "onDone",
            "key.namelength" : 6,
            "key.nameoffset" : 1499,
            "key.offset" : 1495,
            "key.parsed_declaration" : "var onDone : OnDone",
            "key.parsed_scope.end" : 53,
            "key.parsed_scope.start" : 53,
            "key.setter_accessibility" : "source.lang.swift.accessibility.internal",
            "key.typename" : "() -> ()",
            "key.typeusr" : "$syycD",
            "key.usr" : "s:16BlueprintUILists18ListReorderGestureV6onDoneyycvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public init(isEnabled: <Type usr=\"s:Sb\">Bool<\/Type> = true, actions: <Type usr=\"s:10ListableUI17ReorderingActionsC\">ReorderingActions<\/Type>, wrapping element: <Type usr=\"s:11BlueprintUI7ElementP\">Element<\/Type>)<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 1768
              }
            ],
            "key.bodylength" : 229,
            "key.bodyoffset" : 1893,
            "key.doc.column" : 12,
            "key.doc.comment" : "Creates a new re-order gesture which wraps the provided element.\n\nThis element on its own has no visual appearance. Thus, you should\nstill render your own reorder dragger \/ handle \/ etc in the passed in element.",
            "key.doc.declaration" : "public init(isEnabled: Bool = true, actions: ReorderingActions, wrapping element: Element)",
            "key.doc.discussion" : [
              {
                "Para" : "This element on its own has no visual appearance. Thus, you should still render your own reorder dragger \/ handle \/ etc in the passed in element."
              }
            ],
            "key.doc.file" : "\/Users\/k\/Desktop\/Development\/Listable1\/BlueprintUILists\/Sources\/ListReorderGesture.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/k\/Desktop\/Development\/Listable1\/BlueprintUILists\/Sources\/ListReorderGesture.swift\" line=\"59\" column=\"12\"><Name>init(isEnabled:actions:wrapping:)<\/Name><USR>s:16BlueprintUILists18ListReorderGestureV9isEnabled7actions8wrappingACSb_10ListableUI17ReorderingActionsC0aK07Element_ptcfc<\/USR><Declaration>public init(isEnabled: Bool = true, actions: ReorderingActions, wrapping element: Element)<\/Declaration><CommentParts><Abstract><Para>Creates a new re-order gesture which wraps the provided element.<\/Para><\/Abstract><Discussion><Para>This element on its own has no visual appearance. Thus, you should still render your own reorder dragger \/ handle \/ etc in the passed in element.<\/Para><\/Discussion><\/CommentParts><\/Function>",
            "key.doc.line" : 59,
            "key.doc.name" : "init(isEnabled:actions:wrapping:)",
            "key.doc.type" : "Function",
            "key.doclength" : 240,
            "key.docoffset" : 1524,
            "key.filepath" : "\/Users\/k\/Desktop\/Development\/Listable1\/BlueprintUILists\/Sources\/ListReorderGesture.swift",
            "key.fully_annotated_decl" : "<decl.function.constructor><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>init<\/syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>isEnabled<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.var.parameter.type> = true<\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>actions<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"s:10ListableUI17ReorderingActionsC\">ReorderingActions<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>wrapping<\/decl.var.parameter.argument_label> <decl.var.parameter.name>element<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.protocol usr=\"s:11BlueprintUI7ElementP\">Element<\/ref.protocol><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.constructor>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 348,
            "key.name" : "init(isEnabled:actions:wrapping:)",
            "key.namelength" : 116,
            "key.nameoffset" : 1775,
            "key.offset" : 1775,
            "key.parsed_declaration" : "public init(\n    isEnabled : Bool = true,\n    actions : ReorderingActions,\n    wrapping element : Element\n)",
            "key.parsed_scope.end" : 71,
            "key.parsed_scope.start" : 59,
            "key.substructure" : [

            ],
            "key.typename" : "(ListReorderGesture.Type) -> (Bool, ReorderingActions, Element) -> ListReorderGesture",
            "key.typeusr" : "$s9isEnabled7actions8wrapping16BlueprintUILists18ListReorderGestureVSb_10ListableUI17ReorderingActionsC0eK07Element_ptcD",
            "key.usr" : "s:16BlueprintUILists18ListReorderGestureV9isEnabled7actions8wrappingACSb_10ListableUI17ReorderingActionsC0aK07Element_ptcfc"
          },
          {
            "key.kind" : "source.lang.swift.syntaxtype.comment.mark",
            "key.length" : 13,
            "key.name" : "MARK: Element",
            "key.namelength" : 0,
            "key.nameoffset" : 0,
            "key.offset" : 2139
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public var content: <Type usr=\"s:11BlueprintUI14ElementContentV\">ElementContent<\/Type> { get }<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 2169
              }
            ],
            "key.bodylength" : 49,
            "key.bodyoffset" : 2205,
            "key.doc.column" : 9,
            "key.doc.declaration" : "var content: BlueprintUI.ElementContent { get }",
            "key.doc.discussion" : [
              {
                "Para" : "Elements generally fall into two types:"
              },
              {
                "List-Bullet" : ""
              },
              {
                "Note" : ""
              }
            ],
            "key.doc.file" : "\/Users\/k\/Desktop\/Development\/Listable1\/Pods\/BlueprintUI\/BlueprintUI\/Sources\/Element\/Element.swift",
            "key.doc.full_as_xml" : "<Other file=\"\/Users\/k\/Desktop\/Development\/Listable1\/Pods\/BlueprintUI\/BlueprintUI\/Sources\/Element\/Element.swift\" line=\"52\" column=\"9\"><Name>content<\/Name><USR>s:11BlueprintUI7ElementP7contentAA0C7ContentVvp<\/USR><Declaration>var content: BlueprintUI.ElementContent { get }<\/Declaration><CommentParts><Abstract><Para>Returns the content of this element.<\/Para><\/Abstract><Discussion><Para>Elements generally fall into two types:<\/Para><List-Bullet><Item><Para>Leaf elements, or elements that have no children. These elements commonly have an intrinsic size, or some content that can be measured. Leaf elements typically instantiate their content with <codeVoice>ElementContent(measurable:)<\/codeVoice> or similar.<\/Para><\/Item><Item><Para>Container elements: these element have one or more children, which are arranged by a layout implementation. Container elements typically use methods like <codeVoice>ElementContent(layout:configure:)<\/codeVoice> to instantiate their content.<\/Para><\/Item><\/List-Bullet><Note><Para>This documentation comment was inherited from <codeVoice>Element<\/codeVoice>.<\/Para><\/Note><\/Discussion><\/CommentParts><\/Other>",
            "key.doc.line" : 52,
            "key.doc.name" : "content",
            "key.doc.type" : "Other",
            "key.filepath" : "\/Users\/k\/Desktop\/Development\/Listable1\/BlueprintUILists\/Sources\/ListReorderGesture.swift",
            "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>content<\/decl.name>: <decl.var.type><ref.struct usr=\"s:11BlueprintUI14ElementContentV\">ElementContent<\/ref.struct><\/decl.var.type> { <syntaxtype.keyword>get<\/syntaxtype.keyword> }<\/decl.var.instance>",
            "key.kind" : "source.lang.swift.decl.var.instance",
            "key.length" : 79,
            "key.name" : "content",
            "key.namelength" : 7,
            "key.nameoffset" : 2180,
            "key.offset" : 2176,
            "key.overrides" : [
              {
                "key.usr" : "s:11BlueprintUI7ElementP7contentAA0C7ContentVvp"
              }
            ],
            "key.parsed_declaration" : "public var content: ElementContent",
            "key.parsed_scope.end" : 79,
            "key.parsed_scope.start" : 77,
            "key.typename" : "ElementContent",
            "key.typeusr" : "$s11BlueprintUI14ElementContentVD",
            "key.usr" : "s:11BlueprintUI7ElementP7contentAA0C7ContentVvp"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>public func backingViewDescription(bounds: <Type usr=\"c:@S@CGRect\">CGRect<\/Type>, subtreeExtent: <Type usr=\"c:@S@CGRect\">CGRect<\/Type>?) -&gt; <Type usr=\"s:11BlueprintUI15ViewDescriptionV\">ViewDescription<\/Type>?<\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.public",
                "key.length" : 6,
                "key.offset" : 2265
              }
            ],
            "key.bodylength" : 479,
            "key.bodyoffset" : 2365,
            "key.doc.column" : 10,
            "key.doc.declaration" : "func backingViewDescription(bounds: CGRect, subtreeExtent: CGRect?) -> BlueprintUI.ViewDescription?",
            "key.doc.discussion" : [
              {
                "Para" : "In Blueprint, elements that are displayed using a live `UIView` instance are referred to as “view-backed”. Elements become view-backed by returning a `ViewDescription` value from this method."
              },
              {
                "Note" : ""
              }
            ],
            "key.doc.file" : "\/Users\/k\/Desktop\/Development\/Listable1\/Pods\/BlueprintUI\/BlueprintUI\/Sources\/Element\/Element.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/k\/Desktop\/Development\/Listable1\/Pods\/BlueprintUI\/BlueprintUI\/Sources\/Element\/Element.swift\" line=\"64\" column=\"10\"><Name>backingViewDescription(bounds:subtreeExtent:)<\/Name><USR>s:11BlueprintUI7ElementP22backingViewDescription6bounds13subtreeExtentAA0eF0VSgSo6CGRectV_AKSgtF<\/USR><Declaration>func backingViewDescription(bounds: CGRect, subtreeExtent: CGRect?) -&gt; BlueprintUI.ViewDescription?<\/Declaration><CommentParts><Abstract><Para>Returns an (optional) description of the view that should back this element.<\/Para><\/Abstract><Parameters><Parameter><Name>bounds<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>The bounds of this element after layout is complete.<\/Para><\/Discussion><\/Parameter><Parameter><Name>subtreeExtent<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>A rectangle in the local coordinate space that contains any children. <codeVoice>subtreeExtent<\/codeVoice> will be nil if there are no children.<\/Para><\/Discussion><\/Parameter><\/Parameters><ResultDiscussion><Para>An optional <codeVoice>ViewDescription<\/codeVoice>.<\/Para><\/ResultDiscussion><Discussion><Para>In Blueprint, elements that are displayed using a live <codeVoice>UIView<\/codeVoice> instance are referred to as “view-backed”. Elements become view-backed by returning a <codeVoice>ViewDescription<\/codeVoice> value from this method.<\/Para><Note><Para>This documentation comment was inherited from <codeVoice>Element<\/codeVoice>.<\/Para><\/Note><\/Discussion><\/CommentParts><\/Function>",
            "key.doc.line" : 64,
            "key.doc.name" : "backingViewDescription(bounds:subtreeExtent:)",
            "key.doc.parameters" : [
              {
                "discussion" : [
                  {
                    "Para" : "The bounds of this element after layout is complete."
                  }
                ],
                "name" : "bounds"
              },
              {
                "discussion" : [
                  {
                    "Para" : "A rectangle in the local coordinate space that contains any children. `subtreeExtent` will be nil if there are no children."
                  }
                ],
                "name" : "subtreeExtent"
              }
            ],
            "key.doc.result_discussion" : [
              {
                "Para" : "An optional `ViewDescription`."
              }
            ],
            "key.doc.type" : "Function",
            "key.filepath" : "\/Users\/k\/Desktop\/Development\/Listable1\/BlueprintUILists\/Sources\/ListReorderGesture.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>backingViewDescription<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>bounds<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"c:@S@CGRect\">CGRect<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>subtreeExtent<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"c:@S@CGRect\">CGRect<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:11BlueprintUI15ViewDescriptionV\">ViewDescription<\/ref.struct>?<\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 573,
            "key.name" : "backingViewDescription(bounds:subtreeExtent:)",
            "key.namelength" : 62,
            "key.nameoffset" : 2277,
            "key.offset" : 2272,
            "key.overrides" : [
              {
                "key.usr" : "s:11BlueprintUI7ElementP22backingViewDescription6bounds13subtreeExtentAA0eF0VSgSo6CGRectV_AKSgtF"
              }
            ],
            "key.parsed_declaration" : "public func backingViewDescription(bounds: CGRect, subtreeExtent: CGRect?) -> ViewDescription?",
            "key.parsed_scope.end" : 96,
            "key.parsed_scope.start" : 81,
            "key.substructure" : [

            ],
            "key.typename" : "(ListReorderGesture) -> (CGRect, CGRect?) -> ViewDescription?",
            "key.typeusr" : "$s6bounds13subtreeExtent11BlueprintUI15ViewDescriptionVSgSo6CGRectV_AHSgtcD",
            "key.usr" : "s:11BlueprintUI7ElementP22backingViewDescription6bounds13subtreeExtentAA0eF0VSgSo6CGRectV_AKSgtF"
          }
        ],
        "key.typename" : "ListReorderGesture.Type",
        "key.typeusr" : "$s16BlueprintUILists18ListReorderGestureVmD",
        "key.usr" : "s:16BlueprintUILists18ListReorderGestureV"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>protocol Element<\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 2850
          }
        ],
        "key.bodylength" : 243,
        "key.bodyoffset" : 2876,
        "key.doc.column" : 17,
        "key.doc.declaration" : "protocol Element",
        "key.doc.discussion" : [
          {
            "Para" : "The ultimate purpose of an element is to provide visual content. This can be done in two ways:"
          },
          {
            "List-Bullet" : ""
          },
          {
            "Para" : "A custom element might look something like this:"
          },
          {
            "CodeListing" : ""
          }
        ],
        "key.doc.file" : "\/Users\/k\/Desktop\/Development\/Listable1\/Pods\/BlueprintUI\/BlueprintUI\/Sources\/Element\/Element.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/k\/Desktop\/Development\/Listable1\/Pods\/BlueprintUI\/BlueprintUI\/Sources\/Element\/Element.swift\" line=\"41\" column=\"17\"><Name>Element<\/Name><USR>s:11BlueprintUI7ElementP<\/USR><Declaration>protocol Element<\/Declaration><CommentParts><Abstract><Para>Conforming types represent a rectangular content area in a two-dimensional layout space.<\/Para><\/Abstract><Discussion><rawHTML><![CDATA[<hr\/>]]><\/rawHTML><Para>The ultimate purpose of an element is to provide visual content. This can be done in two ways:<\/Para><List-Bullet><Item><Para>By providing a view description (<codeVoice>ViewDescription<\/codeVoice>).<\/Para><\/Item><Item><Para>By providing child elements that will be displayed recursively within the local coordinate space.<\/Para><\/Item><\/List-Bullet><rawHTML><![CDATA[<hr\/>]]><\/rawHTML><Para>A custom element might look something like this:<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[struct MyElement: Element {]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    var backgroundColor: UIColor = .red]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    \/\/ Returns a single child element.]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    var content: ElementContent {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[        return ElementContent(child: Label(text: \"😂\"))]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    }]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    \/\/ Providing a view description means that this element will be]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    \/\/ backed by a UIView instance when displayed in a `BlueprintView`.]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    func backingViewDescription(bounds: CGRect, subtreeExtent: CGRect?) -> ViewDescription? {]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[        return UIView.describe { config in]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[            config.bind(backgroundColor, to: \\.backgrouncColor)]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[        }]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    }]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><\/Discussion><\/CommentParts><\/Class>",
        "key.doc.line" : 41,
        "key.doc.name" : "Element",
        "key.doc.type" : "Class",
        "key.filepath" : "\/Users\/k\/Desktop\/Development\/Listable1\/Pods\/BlueprintUI\/BlueprintUI\/Sources\/Element\/Element.swift",
        "key.fully_annotated_decl" : "<decl.protocol><syntaxtype.keyword>protocol<\/syntaxtype.keyword> <decl.name>Element<\/decl.name><\/decl.protocol>",
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 263,
        "key.modulename" : "BlueprintUI",
        "key.name" : "Element",
        "key.namelength" : 7,
        "key.nameoffset" : 2867,
        "key.offset" : 2857,
        "key.parsed_declaration" : "public extension Element",
        "key.parsed_scope.end" : 107,
        "key.parsed_scope.start" : 100,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.public",
            "key.annotated_decl" : "<Declaration>func listReorderGesture(with actions: <Type usr=\"s:10ListableUI17ReorderingActionsC\">ReorderingActions<\/Type>, isEnabled: <Type usr=\"s:Sb\">Bool<\/Type> = true) -&gt; <Type usr=\"s:11BlueprintUI7ElementP\">Element<\/Type><\/Declaration>",
            "key.bodylength" : 88,
            "key.bodyoffset" : 3029,
            "key.doc.column" : 10,
            "key.doc.comment" : "Wraps the element in a re-order gesture.",
            "key.doc.declaration" : "func listReorderGesture(with actions: ReorderingActions, isEnabled: Bool = true) -> Element",
            "key.doc.file" : "\/Users\/k\/Desktop\/Development\/Listable1\/BlueprintUILists\/Sources\/ListReorderGesture.swift",
            "key.doc.full_as_xml" : "<Function file=\"\/Users\/k\/Desktop\/Development\/Listable1\/BlueprintUILists\/Sources\/ListReorderGesture.swift\" line=\"103\" column=\"10\"><Name>listReorderGesture(with:isEnabled:)<\/Name><USR>s:11BlueprintUI7ElementP0A7UIListsE18listReorderGesture4with9isEnabledAaB_p08ListableB017ReorderingActionsC_SbtF<\/USR><Declaration>func listReorderGesture(with actions: ReorderingActions, isEnabled: Bool = true) -&gt; Element<\/Declaration><CommentParts><Abstract><Para>Wraps the element in a re-order gesture.<\/Para><\/Abstract><\/CommentParts><\/Function>",
            "key.doc.line" : 103,
            "key.doc.name" : "listReorderGesture(with:isEnabled:)",
            "key.doc.type" : "Function",
            "key.doclength" : 45,
            "key.docoffset" : 2881,
            "key.filepath" : "\/Users\/k\/Desktop\/Development\/Listable1\/BlueprintUILists\/Sources\/ListReorderGesture.swift",
            "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>listReorderGesture<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>with<\/decl.var.parameter.argument_label> <decl.var.parameter.name>actions<\/decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"s:10ListableUI17ReorderingActionsC\">ReorderingActions<\/ref.class><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>isEnabled<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sb\">Bool<\/ref.struct><\/decl.var.parameter.type> = true<\/decl.var.parameter>) -&gt; <decl.function.returntype><ref.protocol usr=\"s:11BlueprintUI7ElementP\">Element<\/ref.protocol><\/decl.function.returntype><\/decl.function.method.instance>",
            "key.kind" : "source.lang.swift.decl.function.method.instance",
            "key.length" : 188,
            "key.name" : "listReorderGesture(with:isEnabled:)",
            "key.namelength" : 77,
            "key.nameoffset" : 2935,
            "key.offset" : 2930,
            "key.parsed_declaration" : "func listReorderGesture(with actions : ReorderingActions, isEnabled : Bool = true) -> Element",
            "key.parsed_scope.end" : 106,
            "key.parsed_scope.start" : 103,
            "key.substructure" : [

            ],
            "key.typename" : "<Self where Self : Element> (Self) -> (ReorderingActions, Bool) -> Element",
            "key.typeusr" : "$s4with9isEnabled11BlueprintUI7Element_p08ListableE017ReorderingActionsC_SbtcD",
            "key.usr" : "s:11BlueprintUI7ElementP0A7UIListsE18listReorderGesture4with9isEnabledAaB_p08ListableB017ReorderingActionsC_SbtF"
          }
        ],
        "key.typename" : "Element.Protocol",
        "key.typeusr" : "$s11BlueprintUI7Element_pmD",
        "key.usr" : "s:11BlueprintUI7ElementP"
      },
      {
        "key.accessibility" : "source.lang.swift.accessibility.fileprivate",
        "key.annotated_decl" : "<Declaration>public struct ListReorderGesture : <Type usr=\"s:11BlueprintUI7ElementP\">Element<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.fileprivate",
            "key.length" : 11,
            "key.offset" : 3123
          }
        ],
        "key.bodylength" : 1698,
        "key.bodyoffset" : 3165,
        "key.doc.column" : 15,
        "key.doc.declaration" : "public struct ListReorderGesture : Element",
        "key.doc.discussion" : [
          {
            "Para" : "If you do not support reordering items, you do not need to add this element anywhere in your hierarchy."
          },
          {
            "Para" : "This element on its own has no visual appearance. Thus, you should still render your own reorder dragger \/ handle \/ etc in the passed in element."
          },
          {
            "Para" : "In the below example, we see how to set up the content of a simple item, which contains a text label and a reorder grabber."
          },
          {
            "CodeListing" : ""
          }
        ],
        "key.doc.file" : "\/Users\/k\/Desktop\/Development\/Listable1\/BlueprintUILists\/Sources\/ListReorderGesture.swift",
        "key.doc.full_as_xml" : "<Class file=\"\/Users\/k\/Desktop\/Development\/Listable1\/BlueprintUILists\/Sources\/ListReorderGesture.swift\" line=\"38\" column=\"15\"><Name>ListReorderGesture<\/Name><USR>s:16BlueprintUILists18ListReorderGestureV<\/USR><Declaration>public struct ListReorderGesture : Element<\/Declaration><CommentParts><Abstract><Para>An element that wraps your provided element, to enable support for user-driven re-ordering in a list view.<\/Para><\/Abstract><Discussion><Para>If you do not support reordering items, you do not need to add this element anywhere in your hierarchy.<\/Para><Para>This element on its own has no visual appearance. Thus, you should still render your own reorder dragger \/ handle \/ etc in the passed in element.<\/Para><Para>In the below example, we see how to set up the content of a simple item, which contains a text label and a reorder grabber.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[func element(with info : ApplyItemContentInfo) -> Element]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[{]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    Row { row in]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[        row.add(child: Label(text: \"...\"))]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[        row.add(child: ListReorderGesture(actions: info.actions, wrapping: MyReorderGrabber()))]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[        \/\/ Could also be written as:]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[        row.add(child: MyReorderGrabber().listReorderGesture(with: info.reordering))]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[    }]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><\/Discussion><\/CommentParts><\/Class>",
        "key.doc.line" : 38,
        "key.doc.name" : "ListReorderGesture",
        "key.doc.type" : "Class",
        "key.filepath" : "\/Users\/k\/Desktop\/Development\/Listable1\/BlueprintUILists\/Sources\/ListReorderGesture.swift",
        "key.fully_annotated_decl" : "<decl.struct><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>struct<\/syntaxtype.keyword> <decl.name>ListReorderGesture<\/decl.name> : <ref.protocol usr=\"s:11BlueprintUI7ElementP\">Element<\/ref.protocol><\/decl.struct>",
        "key.kind" : "source.lang.swift.decl.extension",
        "key.length" : 1729,
        "key.name" : "ListReorderGesture",
        "key.namelength" : 18,
        "key.nameoffset" : 3145,
        "key.offset" : 3135,
        "key.parsed_declaration" : "fileprivate extension ListReorderGesture",
        "key.parsed_scope.end" : 171,
        "key.parsed_scope.start" : 110,
        "key.substructure" : [
          {
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.annotated_decl" : "<Declaration>private final class GestureRecognizer : <Type usr=\"c:objc(cs)UIPanGestureRecognizer\">UIPanGestureRecognizer<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.final",
                "key.length" : 5,
                "key.offset" : 3178
              },
              {
                "key.attribute" : "source.decl.attribute.private",
                "key.length" : 7,
                "key.offset" : 3170
              }
            ],
            "key.bodylength" : 1002,
            "key.bodyoffset" : 3238,
            "key.elements" : [
              {
                "key.kind" : "source.lang.swift.structure.elem.typeref",
                "key.length" : 22,
                "key.offset" : 3210
              }
            ],
            "key.filepath" : "\/Users\/k\/Desktop\/Development\/Listable1\/BlueprintUILists\/Sources\/ListReorderGesture.swift",
            "key.fully_annotated_decl" : "<decl.class><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>final<\/syntaxtype.keyword> <syntaxtype.keyword>class<\/syntaxtype.keyword> <decl.name>GestureRecognizer<\/decl.name> : <ref.class usr=\"c:objc(cs)UIPanGestureRecognizer\">UIPanGestureRecognizer<\/ref.class><\/decl.class>",
            "key.inheritedtypes" : [
              {
                "key.name" : "UIPanGestureRecognizer"
              }
            ],
            "key.kind" : "source.lang.swift.decl.class",
            "key.length" : 1057,
            "key.name" : "GestureRecognizer",
            "key.namelength" : 17,
            "key.nameoffset" : 3190,
            "key.offset" : 3184,
            "key.parsed_declaration" : "private final class GestureRecognizer : UIPanGestureRecognizer",
            "key.parsed_scope.end" : 147,
            "key.parsed_scope.start" : 112,
            "key.substructure" : [
              {
                "key.accessibility" : "source.lang.swift.accessibility.public",
                "key.annotated_decl" : "<Declaration>public var onStart: <Type usr=\"s:16BlueprintUILists18ListReorderGestureV7OnStarta\">OnStart<\/Type>?<\/Declaration>",
                "key.attributes" : [
                  {
                    "key.attribute" : "source.decl.attribute.public",
                    "key.length" : 6,
                    "key.offset" : 3247
                  }
                ],
                "key.filepath" : "\/Users\/k\/Desktop\/Development\/Listable1\/BlueprintUILists\/Sources\/ListReorderGesture.swift",
                "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>onStart<\/decl.name>: <decl.var.type><ref.typealias usr=\"s:16BlueprintUILists18ListReorderGestureV7OnStarta\">OnStart<\/ref.typealias>?<\/decl.var.type><\/decl.var.instance>",
                "key.kind" : "source.lang.swift.decl.var.instance",
                "key.length" : 28,
                "key.name" : "onStart",
                "key.namelength" : 7,
                "key.nameoffset" : 3258,
                "key.offset" : 3254,
                "key.parsed_declaration" : "public var onStart : OnStart? = nil",
                "key.parsed_scope.end" : 114,
                "key.parsed_scope.start" : 114,
                "key.setter_accessibility" : "source.lang.swift.accessibility.public",
                "key.typename" : "(() -> Bool)?",
                "key.typeusr" : "$sSbycSgD",
                "key.usr" : "s:16BlueprintUILists18ListReorderGestureV0E10Recognizer33_6236E0E4B561C9F4DE17B47CFD4B9B7FLLC7onStartSbycSgvp"
              },
              {
                "key.accessibility" : "source.lang.swift.accessibility.public",
                "key.annotated_decl" : "<Declaration>public var onMove: <Type usr=\"s:16BlueprintUILists18ListReorderGestureV6OnMovea\">OnMove<\/Type>?<\/Declaration>",
                "key.attributes" : [
                  {
                    "key.attribute" : "source.decl.attribute.public",
                    "key.length" : 6,
                    "key.offset" : 3291
                  }
                ],
                "key.filepath" : "\/Users\/k\/Desktop\/Development\/Listable1\/BlueprintUILists\/Sources\/ListReorderGesture.swift",
                "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>onMove<\/decl.name>: <decl.var.type><ref.typealias usr=\"s:16BlueprintUILists18ListReorderGestureV6OnMovea\">OnMove<\/ref.typealias>?<\/decl.var.type><\/decl.var.instance>",
                "key.kind" : "source.lang.swift.decl.var.instance",
                "key.length" : 26,
                "key.name" : "onMove",
                "key.namelength" : 6,
                "key.nameoffset" : 3302,
                "key.offset" : 3298,
                "key.parsed_declaration" : "public var onMove : OnMove? = nil",
                "key.parsed_scope.end" : 115,
                "key.parsed_scope.start" : 115,
                "key.setter_accessibility" : "source.lang.swift.accessibility.public",
                "key.typename" : "((UIPanGestureRecognizer) -> ())?",
                "key.typeusr" : "$sySo22UIPanGestureRecognizerCcSgD",
                "key.usr" : "s:16BlueprintUILists18ListReorderGestureV0E10Recognizer33_6236E0E4B561C9F4DE17B47CFD4B9B7FLLC6onMoveySo05UIPaneF0CcSgvp"
              },
              {
                "key.accessibility" : "source.lang.swift.accessibility.public",
                "key.annotated_decl" : "<Declaration>public var onDone: <Type usr=\"s:16BlueprintUILists18ListReorderGestureV6OnDonea\">OnDone<\/Type>?<\/Declaration>",
                "key.attributes" : [
                  {
                    "key.attribute" : "source.decl.attribute.public",
                    "key.length" : 6,
                    "key.offset" : 3333
                  }
                ],
                "key.filepath" : "\/Users\/k\/Desktop\/Development\/Listable1\/BlueprintUILists\/Sources\/ListReorderGesture.swift",
                "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>var<\/syntaxtype.keyword> <decl.name>onDone<\/decl.name>: <decl.var.type><ref.typealias usr=\"s:16BlueprintUILists18ListReorderGestureV6OnDonea\">OnDone<\/ref.typealias>?<\/decl.var.type><\/decl.var.instance>",
                "key.kind" : "source.lang.swift.decl.var.instance",
                "key.length" : 26,
                "key.name" : "onDone",
                "key.namelength" : 6,
                "key.nameoffset" : 3344,
                "key.offset" : 3340,
                "key.parsed_declaration" : "public var onDone : OnDone? = nil",
                "key.parsed_scope.end" : 116,
                "key.parsed_scope.start" : 116,
                "key.setter_accessibility" : "source.lang.swift.accessibility.public",
                "key.typename" : "(() -> ())?",
                "key.typeusr" : "$syycSgD",
                "key.usr" : "s:16BlueprintUILists18ListReorderGestureV0E10Recognizer33_6236E0E4B561C9F4DE17B47CFD4B9B7FLLC6onDoneyycSgvp"
              },
              {
                "key.accessibility" : "source.lang.swift.accessibility.internal",
                "key.annotated_decl" : "<Declaration>override init(target: Any?, action: <Type usr=\"s:10ObjectiveC8SelectorV\">Selector<\/Type>?)<\/Declaration>",
                "key.attributes" : [
                  {
                    "key.attribute" : "source.decl.attribute.override",
                    "key.length" : 8,
                    "key.offset" : 3384
                  }
                ],
                "key.bodylength" : 239,
                "key.bodyoffset" : 3440,
                "key.filepath" : "\/Users\/k\/Desktop\/Development\/Listable1\/BlueprintUILists\/Sources\/ListReorderGesture.swift",
                "key.fully_annotated_decl" : "<decl.function.constructor><syntaxtype.keyword>override<\/syntaxtype.keyword> <syntaxtype.keyword>init<\/syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>target<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><syntaxtype.keyword>Any<\/syntaxtype.keyword>?<\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>action<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:10ObjectiveC8SelectorV\">Selector<\/ref.struct>?<\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.constructor>",
                "key.kind" : "source.lang.swift.decl.function.method.instance",
                "key.length" : 287,
                "key.name" : "init(target:action:)",
                "key.namelength" : 37,
                "key.nameoffset" : 3393,
                "key.offset" : 3393,
                "key.overrides" : [
                  {
                    "key.usr" : "c:objc(cs)UIGestureRecognizer(im)initWithTarget:action:"
                  }
                ],
                "key.parsed_declaration" : "override init(target: Any?, action: Selector?)",
                "key.parsed_scope.end" : 126,
                "key.parsed_scope.start" : 118,
                "key.related_decls" : [
                  {
                    "key.annotated_decl" : "<RelatedName usr=\"c:objc(cs)UIGestureRecognizer(im)init\">init()<\/RelatedName>"
                  },
                  {
                    "key.annotated_decl" : "<RelatedName usr=\"c:objc(cs)UIGestureRecognizer(im)initWithCoder:\">init(coder:)<\/RelatedName>"
                  }
                ],
                "key.substructure" : [

                ],
                "key.typename" : "(ListReorderGesture.GestureRecognizer.Type) -> (Any?, Selector?) -> ListReorderGesture.GestureRecognizer",
                "key.typeusr" : "$s6target6action16BlueprintUILists18ListReorderGestureV0G10Recognizer33_6236E0E4B561C9F4DE17B47CFD4B9B7FLLCypSg_10ObjectiveC8SelectorVSgtcD",
                "key.usr" : "s:16BlueprintUILists18ListReorderGestureV0E10Recognizer33_6236E0E4B561C9F4DE17B47CFD4B9B7FLLC6target6actionAFypSg_10ObjectiveC8SelectorVSgtcfc"
              },
              {
                "key.accessibility" : "source.lang.swift.accessibility.internal",
                "key.annotated_decl" : "<Declaration>@objc func updated()<\/Declaration>",
                "key.attributes" : [
                  {
                    "key.attribute" : "source.decl.attribute.objc",
                    "key.length" : 5,
                    "key.offset" : 3706
                  }
                ],
                "key.bodylength" : 498,
                "key.bodyoffset" : 3736,
                "key.filepath" : "\/Users\/k\/Desktop\/Development\/Listable1\/BlueprintUILists\/Sources\/ListReorderGesture.swift",
                "key.fully_annotated_decl" : "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc<\/syntaxtype.attribute.name><\/syntaxtype.attribute.builtin> <syntaxtype.keyword>func<\/syntaxtype.keyword> <decl.name>updated<\/decl.name>()<\/decl.function.method.instance>",
                "key.kind" : "source.lang.swift.decl.function.method.instance",
                "key.length" : 523,
                "key.name" : "updated()",
                "key.namelength" : 9,
                "key.nameoffset" : 3717,
                "key.offset" : 3712,
                "key.parsed_declaration" : "@objc func updated()",
                "key.parsed_scope.end" : 146,
                "key.parsed_scope.start" : 128,
                "key.substructure" : [

                ],
                "key.typename" : "(ListReorderGesture.GestureRecognizer) -> () -> ()",
                "key.typeusr" : "$syycD",
                "key.usr" : "s:16BlueprintUILists18ListReorderGestureV0E10Recognizer33_6236E0E4B561C9F4DE17B47CFD4B9B7FLLC7updatedyyF"
              }
            ],
            "key.typename" : "ListReorderGesture.GestureRecognizer.Type",
            "key.typeusr" : "$s16BlueprintUILists18ListReorderGestureV0E10Recognizer33_6236E0E4B561C9F4DE17B47CFD4B9B7FLLCmD",
            "key.usr" : "s:16BlueprintUILists18ListReorderGestureV0E10Recognizer33_6236E0E4B561C9F4DE17B47CFD4B9B7FLLC"
          },
          {
            "key.accessibility" : "source.lang.swift.accessibility.private",
            "key.annotated_decl" : "<Declaration>private final class WrapperView : <Type usr=\"c:objc(cs)UIView\">UIView<\/Type><\/Declaration>",
            "key.attributes" : [
              {
                "key.attribute" : "source.decl.attribute.final",
                "key.length" : 5,
                "key.offset" : 4259
              },
              {
                "key.attribute" : "source.decl.attribute.private",
                "key.length" : 7,
                "key.offset" : 4251
              }
            ],
            "key.bodylength" : 564,
            "key.bodyoffset" : 4297,
            "key.elements" : [
              {
                "key.kind" : "source.lang.swift.structure.elem.typeref",
                "key.length" : 6,
                "key.offset" : 4285
              }
            ],
            "key.filepath" : "\/Users\/k\/Desktop\/Development\/Listable1\/BlueprintUILists\/Sources\/ListReorderGesture.swift",
            "key.fully_annotated_decl" : "<decl.class><syntaxtype.keyword>private<\/syntaxtype.keyword> <syntaxtype.keyword>final<\/syntaxtype.keyword> <syntaxtype.keyword>class<\/syntaxtype.keyword> <decl.name>WrapperView<\/decl.name> : <ref.class usr=\"c:objc(cs)UIView\">UIView<\/ref.class><\/decl.class>",
            "key.inheritedtypes" : [
              {
                "key.name" : "UIView"
              }
            ],
            "key.kind" : "source.lang.swift.decl.class",
            "key.length" : 597,
            "key.name" : "WrapperView",
            "key.namelength" : 11,
            "key.nameoffset" : 4271,
            "key.offset" : 4265,
            "key.parsed_declaration" : "private final class WrapperView : UIView",
            "key.parsed_scope.end" : 170,
            "key.parsed_scope.start" : 149,
            "key.substructure" : [
              {
                "key.accessibility" : "source.lang.swift.accessibility.internal",
                "key.annotated_decl" : "<Declaration>let recognizer: <Type usr=\"s:16BlueprintUILists18ListReorderGestureV0E10Recognizer33_6236E0E4B561C9F4DE17B47CFD4B9B7FLLC\">GestureRecognizer<\/Type><\/Declaration>",
                "key.filepath" : "\/Users\/k\/Desktop\/Development\/Listable1\/BlueprintUILists\/Sources\/ListReorderGesture.swift",
                "key.fully_annotated_decl" : "<decl.var.instance><syntaxtype.keyword>let<\/syntaxtype.keyword> <decl.name>recognizer<\/decl.name>: <decl.var.type><ref.class usr=\"s:16BlueprintUILists18ListReorderGestureV0E10Recognizer33_6236E0E4B561C9F4DE17B47CFD4B9B7FLLC\">GestureRecognizer<\/ref.class><\/decl.var.type><\/decl.var.instance>",
                "key.kind" : "source.lang.swift.decl.var.instance",
                "key.length" : 34,
                "key.name" : "recognizer",
                "key.namelength" : 10,
                "key.nameoffset" : 4310,
                "key.offset" : 4306,
                "key.parsed_declaration" : "let recognizer : GestureRecognizer",
                "key.parsed_scope.end" : 151,
                "key.parsed_scope.start" : 151,
                "key.typename" : "ListReorderGesture.GestureRecognizer",
                "key.typeusr" : "$s16BlueprintUILists18ListReorderGestureV0E10Recognizer33_6236E0E4B561C9F4DE17B47CFD4B9B7FLLCD",
                "key.usr" : "s:16BlueprintUILists18ListReorderGestureV11WrapperView33_6236E0E4B561C9F4DE17B47CFD4B9B7FLLC10recognizerAC0E10RecognizerAELLCvp"
              },
              {
                "key.accessibility" : "source.lang.swift.accessibility.internal",
                "key.annotated_decl" : "<Declaration>init(frame: <Type usr=\"c:@S@CGRect\">CGRect<\/Type>, wrapping: <Type usr=\"s:16BlueprintUILists18ListReorderGestureV\">ListReorderGesture<\/Type>)<\/Declaration>",
                "key.bodylength" : 305,
                "key.bodyoffset" : 4418,
                "key.filepath" : "\/Users\/k\/Desktop\/Development\/Listable1\/BlueprintUILists\/Sources\/ListReorderGesture.swift",
                "key.fully_annotated_decl" : "<decl.function.constructor><syntaxtype.keyword>init<\/syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>frame<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"c:@S@CGRect\">CGRect<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>wrapping<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:16BlueprintUILists18ListReorderGestureV\">ListReorderGesture<\/ref.struct><\/decl.var.parameter.type><\/decl.var.parameter>)<\/decl.function.constructor>",
                "key.kind" : "source.lang.swift.decl.function.method.instance",
                "key.length" : 366,
                "key.name" : "init(frame:wrapping:)",
                "key.namelength" : 50,
                "key.nameoffset" : 4358,
                "key.offset" : 4358,
                "key.parsed_declaration" : "init(frame: CGRect, wrapping : ListReorderGesture)",
                "key.parsed_scope.end" : 164,
                "key.parsed_scope.start" : 153,
                "key.substructure" : [

                ],
                "key.typename" : "(ListReorderGesture.WrapperView.Type) -> (CGRect, ListReorderGesture) -> ListReorderGesture.WrapperView",
                "key.typeusr" : "$s5frame8wrapping16BlueprintUILists18ListReorderGestureV11WrapperView33_6236E0E4B561C9F4DE17B47CFD4B9B7FLLCSo6CGRectV_AEtcD",
                "key.usr" : "s:16BlueprintUILists18ListReorderGestureV11WrapperView33_6236E0E4B561C9F4DE17B47CFD4B9B7FLLC5frame8wrappingAFSo6CGRectV_ACtcfc"
              },
              {
                "key.accessibility" : "source.lang.swift.accessibility.internal",
                "key.attributes" : [
                  {
                    "key.attribute" : "source.decl.attribute.required",
                    "key.length" : 8,
                    "key.offset" : 4777
                  },
                  {
                    "key.attribute" : "source.decl.attribute.available",
                    "key.length" : 26,
                    "key.offset" : 4742
                  }
                ],
                "key.bodylength" : 37,
                "key.bodyoffset" : 4818,
                "key.internal_diagnostic" : "Unavailable in the current compilation context.",
                "key.kind" : "source.lang.swift.decl.function.method.instance",
                "key.length" : 70,
                "key.name" : "init(coder:)",
                "key.namelength" : 30,
                "key.nameoffset" : 4786,
                "key.offset" : 4786,
                "key.substructure" : [

                ]
              }
            ],
            "key.typename" : "ListReorderGesture.WrapperView.Type",
            "key.typeusr" : "$s16BlueprintUILists18ListReorderGestureV11WrapperView33_6236E0E4B561C9F4DE17B47CFD4B9B7FLLCmD",
            "key.usr" : "s:16BlueprintUILists18ListReorderGestureV11WrapperView33_6236E0E4B561C9F4DE17B47CFD4B9B7FLLC"
          }
        ],
        "key.typename" : "ListReorderGesture.Type",
        "key.typeusr" : "$s16BlueprintUILists18ListReorderGestureVmD",
        "key.usr" : "s:16BlueprintUILists18ListReorderGestureV"
      }
    ]
  }
}, {
  "\/Users\/k\/Desktop\/Development\/Listable1\/BlueprintUILists\/Sources\/ListSizing.swift" : {
    "key.diagnostic_stage" : "source.diagnostic.stage.swift.parse",
    "key.length" : 3454,
    "key.offset" : 0,
    "key.substructure" : [
      {
        "key.accessibility" : "source.lang.swift.accessibility.public",
        "key.annotated_decl" : "<Declaration>public enum ListSizing : <Type usr=\"s:SQ\">Equatable<\/Type><\/Declaration>",
        "key.attributes" : [
          {
            "key.attribute" : "source.decl.attribute.public",
            "key.length" : 6,
            "key.offset" : 1266
          }
        ],
        "key.bodylength" : 2150,
        "key.bodyoffset" : 1302,
        "key.doc.column" : 13,
        "key.doc.comment" : "\nProvides the possible options for how to size and measure a list when its measured size is queried\nby the layout system.\n\nYou have two options: `.fillParent` and `.measureContent`.\n\nWhen using  `.fillParent`, the full available fitting size will be taken up, regardless\nof the size of the content itself.\n\nWhen using `.measureContent`, the content will be measured within the provided fitting size\nand the smallest of the two sizes will be returned.\n```\n.fillParent:\n┌───────────┐\n│┌─────────┐│\n││         ││\n││         ││\n││         ││\n││         ││\n││         ││\n│└─────────┘│\n└───────────┘\n\n.measureContent\n┌───────────┐\n│           │\n│           │\n│┌─────────┐│\n││         ││\n││         ││\n││         ││\n│└─────────┘│\n└───────────┘\n```",
        "key.doc.declaration" : "public enum ListSizing : Equatable",
        "key.doc.discussion" : [
          {
            "Para" : "You have two options: `.fillParent` and `.measureContent`."
          },
          {
            "Para" : "When using  `.fillParent`, the full available fitting size will be taken up, regardless of the size of the content itself."
          },
          {
            "Para" : "When using `.measureContent`, the content will be measured within the provided fitting size and the smallest of the two sizes will be returned."
          },
          {
            "CodeListing" : ""
          }
        ],
        "key.doc.file" : "\/Users\/k\/Desktop\/Development\/Listable1\/BlueprintUILists\/Sources\/ListSizing.swift",
        "key.doc.full_as_xml" : "<Other file=\"\/Users\/k\/Desktop\/Development\/Listable1\/BlueprintUILists\/Sources\/ListSizing.swift\" line=\"45\" column=\"13\"><Name>ListSizing<\/Name><USR>s:16BlueprintUILists10ListSizingO<\/USR><Declaration>public enum ListSizing : Equatable<\/Declaration><CommentParts><Abstract><Para>Provides the possible options for how to size and measure a list when its measured size is queried by the layout system.<\/Para><\/Abstract><Discussion><Para>You have two options: <codeVoice>.fillParent<\/codeVoice> and <codeVoice>.measureContent<\/codeVoice>.<\/Para><Para>When using  <codeVoice>.fillParent<\/codeVoice>, the full available fitting size will be taken up, regardless of the size of the content itself.<\/Para><Para>When using <codeVoice>.measureContent<\/codeVoice>, the content will be measured within the provided fitting size and the smallest of the two sizes will be returned.<\/Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[.fillParent:]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[┌───────────┐]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[│┌─────────┐│]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[││         ││]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[││         ││]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[││         ││]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[││         ││]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[││         ││]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[│└─────────┘│]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[└───────────┘]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[.measureContent]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[┌───────────┐]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[│           │]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[│           │]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[│┌─────────┐│]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[││         ││]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[││         ││]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[││         ││]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[│└─────────┘│]]><\/zCodeLineNumbered><zCodeLineNumbered><![CDATA[└───────────┘]]><\/zCodeLineNumbered><zCodeLineNumbered><\/zCodeLineNumbered><\/CodeListing><\/Discussion><\/CommentParts><\/Other>",
        "key.doc.line" : 45,
        "key.doc.name" : "ListSizing",
        "key.doc.type" : "Other",
        "key.doclength" : 1152,
        "key.docoffset" : 114,
        "key.elements" : [
          {
            "key.kind" : "source.lang.swift.structure.elem.typeref",
            "key.length" : 9,
            "key.offset" : 1291
          }
        ],
        "key.filepath" : "\/Users\/k\/Desktop\/Development\/Listable1\/BlueprintUILists\/Sources\/ListSizing.swift",
        "key.fully_annotated_decl" : "<decl.enum><syntaxtype.keyword>public<\/syntaxtype.keyword> <syntaxtype.keyword>enum<\/syntaxtype.keyword> <decl.name>ListSizing<\/decl.name> : <ref.protocol usr=\"s:SQ\">Equatable<\/ref.protocol><\/decl.enum>",
        "key.inheritedtypes" : [
          {
            "key.name" : "Equatable"
          }
        ],
        "key.kind" : "source.lang.swift.decl.enum",
        "key.length" : 2180,
        "key.name" : "ListSizing",
        "key.namelength" : 10,
        "key.nameoffset" : 1278,
        "key.offset" : 1273,
        "key.parsed_declaration" : "public enum ListSizing : Equatable",
        "key.parsed_scope.end" : 80,
        "key.parsed_scope.start" : 45,
        "key.substructure" : [
          {
            "key.kind" : "source.lang.swift.decl.enumcase",
            "key.length" : 15,
            "key.namelength" : 0,
            "key.nameoffset" : 0,
            "key.offset" : 1914,
            "key.substructure" : [
              {
                "key.accessibility" : "source.lang.swift.accessibility.public",
                "key.annotated_decl" : "<Declaration>case fillParent<\/Declaration>",
                "key.doc.column" : 10,
                "key.doc.comment" : "When using  `.fillParent`, the full available space will be taken up, regardless\nof the content size of the list itself.\n\nEg, if the fitting size passed to the list is (200w, 1000h), and the list's content\nis only (200w, 500h), (200w, 1000h) will still be returned.\n\nThis is the setting you want to use when your list is being used to fill the content\nof a screen, such as if it is being presented in a navigation controller or tab bar controller.\n\nThis option is the most performant, because no content measurement has to occur.",
                "key.doc.declaration" : "",
                "key.doc.discussion" : [
                  {
                    "Para" : "Eg, if the fitting size passed to the list is (200w, 1000h), and the list’s content is only (200w, 500h), (200w, 1000h) will still be returned."
                  },
                  {
                    "Para" : "This is the setting you want to use when your list is being used to fill the content of a screen, such as if it is being presented in a navigation controller or tab bar controller."
                  },
                  {
                    "Para" : "This option is the most performant, because no content measurement has to occur."
                  }
                ],
                "key.doc.file" : "\/Users\/k\/Desktop\/Development\/Listable1\/BlueprintUILists\/Sources\/ListSizing.swift",
                "key.doc.full_as_xml" : "<Other file=\"\/Users\/k\/Desktop\/Development\/Listable1\/BlueprintUILists\/Sources\/ListSizing.swift\" line=\"57\" column=\"10\"><Name>fillParent<\/Name><USR>s:16BlueprintUILists10ListSizingO10fillParentyA2CmF<\/USR><Declaration><\/Declaration><CommentParts><Abstract><Para>When using  <codeVoice>.fillParent<\/codeVoice>, the full available space will be taken up, regardless of the content size of the list itself.<\/Para><\/Abstract><Discussion><Para>Eg, if the fitting size passed to the list is (200w, 1000h), and the list’s content is only (200w, 500h), (200w, 1000h) will still be returned.<\/Para><Para>This is the setting you want to use when your list is being used to fill the content of a screen, such as if it is being presented in a navigation controller or tab bar controller.<\/Para><Para>This option is the most performant, because no content measurement has to occur.<\/Para><\/Discussion><\/CommentParts><\/Other>",
                "key.doc.line" : 57,
                "key.doc.name" : "fillParent",
                "key.doc.type" : "Other",
                "key.doclength" : 603,
                "key.docoffset" : 1307,
                "key.filepath" : "\/Users\/k\/Desktop\/Development\/Listable1\/BlueprintUILists\/Sources\/ListSizing.swift",
                "key.fully_annotated_decl" : "<decl.enumelement><syntaxtype.keyword>case<\/syntaxtype.keyword> <decl.name>fillParent<\/decl.name><\/decl.enumelement>",
                "key.kind" : "source.lang.swift.decl.enumelement",
                "key.length" : 10,
                "key.name" : "fillParent",
                "key.namelength" : 10,
                "key.nameoffset" : 1919,
                "key.offset" : 1919,
                "key.parsed_declaration" : "case fillParent",
                "key.parsed_scope.end" : 57,
                "key.parsed_scope.start" : 57,
                "key.typename" : "(ListSizing.Type) -> ListSizing",
                "key.typeusr" : "$sy16BlueprintUILists10ListSizingOACmcD",
                "key.usr" : "s:16BlueprintUILists10ListSizingO10fillParentyA2CmF"
              }
            ]
          },
          {
            "key.kind" : "source.lang.swift.decl.enumcase",
            "key.length" : 142,
            "key.namelength" : 0,
            "key.nameoffset" : 0,
            "key.offset" : 3309,
            "key.substructure" : [
              {
                "key.accessibility" : "source.lang.swift.accessibility.public",
                "key.annotated_decl" : "<Declaration>case measureContent(cacheKey: <Type usr=\"s:s11AnyHashableV\">AnyHashable<\/Type>? = nil, itemLimit: <Type usr=\"s:Si\">Int<\/Type>? = ListView.defaultContentSizeItemLimit)<\/Declaration>",
                "key.doc.column" : 10,
                "key.doc.comment" : "When using `.measureContent`, the content of the list will be measured within the provided fitting size\nand the smallest of the two sizes will be returned.\n\nIf you are putting a list into a sheet or popover (or even another list!), this is generally the `Sizing` type\nyou will want to use, to ensure the sheet or popover takes up the minimum amount of space possible.\n\n- parameters:\n    - cacheKey: If provided, the underlying `Element`'s `measurementCacheKey` will be set to this value.\n    Note that this value must be unique within the entire blueprint view – so please provide a sufficiently unique value,\n    or measurement collisions will occur (one element's measurement being used for another) for duplicate keys.\n\n    - itemLimit: When measuring the list, how many items should be measured to determine the height. Defaults\n    to 50, which is usually enough to fill the `fittingSize`. If you truly want to determine the entire height of all of\n    the content in the list, set this to `nil` (but you should rarely need to do this). The lower this value, the less\n    overall measurement that has to occur (if the value is less than the number of items in the list), which improvements\n    measurement and layout performance.",
                "key.doc.declaration" : "",
                "key.doc.discussion" : [
                  {
                    "Para" : "If you are putting a list into a sheet or popover (or even another list!), this is generally the `Sizing` type you will want to use, to ensure the sheet or popover takes up the minimum amount of space possible."
                  }
                ],
                "key.doc.file" : "\/Users\/k\/Desktop\/Development\/Listable1\/BlueprintUILists\/Sources\/ListSizing.swift",
                "key.doc.full_as_xml" : "<Other file=\"\/Users\/k\/Desktop\/Development\/Listable1\/BlueprintUILists\/Sources\/ListSizing.swift\" line=\"76\" column=\"10\"><Name>measureContent(cacheKey:itemLimit:)<\/Name><USR>s:16BlueprintUILists10ListSizingO14measureContentyACs11AnyHashableVSg_SiSgtcACmF<\/USR><Declaration><\/Declaration><CommentParts><Abstract><Para>When using <codeVoice>.measureContent<\/codeVoice>, the content of the list will be measured within the provided fitting size and the smallest of the two sizes will be returned.<\/Para><\/Abstract><Parameters><Parameter><Name>cacheKey<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>If provided, the underlying <codeVoice>Element<\/codeVoice>‘s <codeVoice>measurementCacheKey<\/codeVoice> will be set to this value. Note that this value must be unique within the entire blueprint view – so please provide a sufficiently unique value, or measurement collisions will occur (one element’s measurement being used for another) for duplicate keys.<\/Para><\/Discussion><\/Parameter><Parameter><Name>itemLimit<\/Name><Direction isExplicit=\"0\">in<\/Direction><Discussion><Para>When measuring the list, how many items should be measured to determine the height. Defaults to 50, which is usually enough to fill the <codeVoice>fittingSize<\/codeVoice>. If you truly want to determine the entire height of all of the content in the list, set this to <codeVoice>nil<\/codeVoice> (but you should rarely need to do this). The lower this value, the less overall measurement that has to occur (if the value is less than the number of items in the list), which improvements measurement and layout performance.<\/Para><\/Discussion><\/Parameter><\/Parameters><Discussion><Para>If you are putting a list into a sheet or popover (or even another list!), this is generally the <codeVoice>Sizing<\/codeVoice> type you will want to use, to ensure the sheet or popover takes up the minimum amount of space possible.<\/Para><\/Discussion><\/CommentParts><\/Other>",
                "key.doc.line" : 76,
                "key.doc.name" : "measureContent(cacheKey:itemLimit:)",
                "key.doc.parameters" : [
                  {
                    "discussion" : [
                      {
                        "Para" : "If provided, the underlying `Element`‘s `measurementCacheKey` will be set to this value. Note that this value must be unique within the entire blueprint view – so please provide a sufficiently unique value, or measurement collisions will occur (one element’s measurement being used for another) for duplicate keys."
                      }
                    ],
                    "name" : "cacheKey"
                  },
                  {
                    "discussion" : [
                      {
                        "Para" : "When measuring the list, how many items should be measured to determine the height. Defaults to 50, which is usually enough to fill the `fittingSize`. If you truly want to determine the entire height of all of the content in the list, set this to `nil` (but you should rarely need to do this). The lower this value, the less overall measurement that has to occur (if the value is less than the number of items in the list), which improvements measurement and layout performance."
                      }
                    ],
                    "name" : "itemLimit"
                  }
                ],
                "key.doc.type" : "Other",
                "key.doclength" : 1366,
                "key.docoffset" : 1939,
                "key.filepath" : "\/Users\/k\/Desktop\/Development\/Listable1\/BlueprintUILists\/Sources\/ListSizing.swift",
                "key.fully_annotated_decl" : "<decl.enumelement><syntaxtype.keyword>case<\/syntaxtype.keyword> <decl.name>measureContent<\/decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>cacheKey<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:s11AnyHashableV\">AnyHashable<\/ref.struct>?<\/decl.var.parameter.type> = nil<\/decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>itemLimit<\/decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int<\/ref.struct>?<\/decl.var.parameter.type> = ListView.defaultContentSizeItemLimit<\/decl.var.parameter>)<\/decl.enumelement>",
                "key.kind" : "source.lang.swift.decl.enumelement",
                "key.length" : 137,
                "key.name" : "measureContent(cacheKey:itemLimit:)",
                "key.namelength" : 137,
                "key.nameoffset" : 3314,
                "key.offset" : 3314,
                "key.parsed_declaration" : "case measureContent(\n        cacheKey : AnyHashable? = nil,\n        itemLimit : Int? = ListView.defaultContentSizeItemLimit\n     )",
                "key.parsed_scope.end" : 76,
                "key.parsed_scope.start" : 76,
                "key.substructure" : [

                ],
                "key.typename" : "(ListSizing.Type) -> (AnyHashable?, Int?) -> ListSizing",
                "key.typeusr" : "$sy16BlueprintUILists10ListSizingOs11AnyHashableVSg_SiSgtcACmcD",
                "key.usr" : "s:16BlueprintUILists10ListSizingO14measureContentyACs11AnyHashableVSg_SiSgtcACmF"
              }
            ]
          }
        ],
        "key.typename" : "ListSizing.Type",
        "key.typeusr" : "$s16BlueprintUILists10ListSizingOmD",
        "key.usr" : "s:16BlueprintUILists10ListSizingO"
      }
    ]
  }
}]
